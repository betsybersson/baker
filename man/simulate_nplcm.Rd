% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/simulate-nplcm.R
\name{simulate_nplcm}
\alias{simulate_nplcm}
\title{Simulation data from nested partially-latent class model (npLCM) family}
\usage{
simulate_nplcm(set_parameter)
}
\arguments{
\item{set_parameter}{True model parameters in the npLCM specification}
}
\value{
A list of measurements, true latent statues:
\itemize{
 \item{\code{template}} a matrix: rows for causes, columns for measurements;
 generated as a lookup table to match mixture component parmeters for every type
  (a particular cause) of indiviuals.
 \item{\code{data_nplcm}} a list of structured data (see \code{\link{nplcm}} for
 description) for use in visualization
 e.g., \code{\link{plot_logORmat}} or model fitting, e.g., \code{\link{nplcm}}.
 The pathogen taxonomy is set to default "B".
 \item{\code{latent_cat}} integer values to indicate the latent category. The integer
 code corresponds to the order specified in \code{set_parameter$etiology}.
 Controls are coded as \code{length(set_parameter$etiology)+1}.)
 }
}
\description{
Use different case and control subclass mixing weights. Eta is of
dimension J times K. NB: document the elements in \code{set_parameter}. Also, current
function is written in a way to facilitate adding more measurement components.
}
\examples{
\dontrun{
K.true  <- 2   # no. of latent subclasses in actual simulation.
J       <- 5   # no. of pathogens.
N      <- 10000
eta_seq      <- seq(0,0.5,by=0.05)

eta <- 0

set_parameter <- list(
  pathogen_BrS    = LETTERS[1:J],
  cause_list      = c(LETTERS[1:J],"A+B","D+E"),
  etiology        = c(0.5,0.1,0.15,0.1,0.05,0.05,0.05), #same length as cause_list
  Lambda          = c(1-eta,eta), #ctrl mix
  Eta             = rbind(c(1-eta,eta),
                          c(1-eta,eta),
                          c(1-eta,eta),
                          c(1-eta,eta),
                          c(1-eta,eta),
                          c(1-eta,eta),
                          c(1-eta,eta)), #case mix, row number equal to Jcause.
  PsiBS 		  =    matrix(c(0.1,0.3,
                          0.1,0.3,
                          0.1,0.3,
                          0.1,0.3,
                          0.1,0.3),nrow=J,ncol=K.true,byrow=TRUE),
 ThetaBS         =  matrix(c(0.9,0.1,
                              0.9,0.1,
                              0.9,0.1,
                              0.9,0.1,
                              0.9,0.1),nrow=J,ncol=K.true,byrow=TRUE),
  Nu      =     N, # control size.
  Nd      =     N  # case size.
)

 simu_out <- simulate_nplcm(set_parameter)
 data_nplcm <- simu_out$data_nplcm
 pathogen_display <- data_nplcm$Mname$Mname_BrS
 plot_logORmat(data_nplcm,pathogen_display)
}
}

