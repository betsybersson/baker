% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/simulate-nplcm.R
\name{simulate_nplcm}
\alias{simulate_nplcm}
\title{Simulation data from nested partially-latent class model (npLCM) family}
\usage{
simulate_nplcm(set_parameter)
}
\arguments{
\item{set_parameter}{True model parameters in the npLCM specification}
}
\value{
A list of measurements, true latent statues:
\itemize{
 \item{\code{data_nplcm}} a list of structured data (see \code{\link{nplcm}} for
 description) for use in visualization
 e.g., \code{\link{plot_logORmat}} or model fitting, e.g., \code{\link{nplcm}}.
 The pathogen taxonomy is set to default "B".
 \item{\code{template}} a matrix: rows for causes, columns for measurements;
 generated as a lookup table to match mixture component parmeters for every type
  (a particular cause) of indiviuals.
 \item{\code{latent_cat}} integer values to indicate the latent category. The integer
 code corresponds to the order specified in \code{set_parameter$etiology}.
 Controls are coded as \code{length(set_parameter$etiology)+1}.)
 }
}
\description{
Use different case and control subclass mixing weights. Eta is of
dimension J times K. NB: document the elements in \code{set_parameter}. Also, current
function is written in a way to facilitate adding more measurement components.
}
\examples{
K.true  <- 2   # no. of latent subclasses in actual simulation.
               # If eta = c(1,0), effectively, it is K.true=1.
J       <- 21   # no. of pathogens.
N       <- 600 # no. of cases/controls.


eta <- c(1,0)
# if it is c(1,0),then it is conditional independence model, and
# only the first column of parameters in PsiBS, ThetaBS matter!

seed_start <- 20150202
print(eta)

# set fixed simulation sequence:
set.seed(seed_start)

ThetaBS_withNA <- c(.75,rep(c(.75,.75,.75,NA),5))
PsiBS_withNA <- c(.15,rep(c(.05,.05,.05,NA),5))

ThetaSS_withNA <- c(NA,rep(c(0.15,NA,0.15,0.15),5))
PsiSS_withNA <- c(NA,rep(c(0,NA,0,0),5))

# the following paramter names are set using names in the 'baker' package:
set_parameter <- list(
  cause_list      = c(LETTERS[1:J]),
  etiology        = c(c(0.36,0.1,0.1,0.1,0.1,0.05,0.05,0.05,
                 0.05,0.01,0.01,0.01,0.01),rep(0.00,8)),
                 #same length as cause_list.
  pathogen_BrS    = LETTERS[1:J][!is.na(ThetaBS_withNA)],
  pathogen_SS     = LETTERS[1:J][!is.na(ThetaSS_withNA)],
  meas_nm         = list(MBS = c("MBS1"),MSS="MSS1"),
  Lambda          = eta, #ctrl mix
  Eta             = t(replicate(J,eta)), #case mix, row number equal to Jcause.
  PsiBS           = cbind(PsiBS_withNA[!is.na(PsiBS_withNA)],
                          rep(0,sum(!is.na(PsiBS_withNA)))),
  ThetaBS         = cbind(ThetaBS_withNA[!is.na(ThetaBS_withNA)],
                          rep(0,sum(!is.na(ThetaBS_withNA)))),
  PsiSS           = PsiSS_withNA[!is.na(PsiSS_withNA)],
  ThetaSS         = ThetaSS_withNA[!is.na(ThetaSS_withNA)],
  Nu      =     N, # control size.
  Nd      =     N,  # case size.
  SS      = TRUE
)
 simu_out <- simulate_nplcm(set_parameter)
 data_nplcm <- simu_out$data_nplcm

 pathogen_display <- rev(set_parameter$pathogen_BrS)
 plot_logORmat(data_nplcm,pathogen_display)
}
\seealso{
\link{simulate_latent} for simulating discrete latent status, given
which \link{simulate_brs} simulates bronze-standard data.
}

