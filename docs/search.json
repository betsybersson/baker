[{"path":"/articles/baker_demo.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Vignettes for baker: An R package for fitting nested partially latent class models","text":"vignette, sharply truncated sampling procedure used demonstrate use ‘baker’ package tools. built vignette locally, please check inst/doc/ actual vignette files. commented many following code segments running time high CRAN server. data illustration related pathogen categorization pneumonia. simulate presence absence pathogens pathogens measured error.","code":"fname = file.path(   \"example_data\",    \"pathogen_category_simulation.csv\") fname = system.file(   fname,    package = \"baker\") demodat = read.csv(fname, stringsAsFactors = FALSE) kable(head(demodat))"},{"path":"/articles/baker_demo.html","id":"setup-and-simulate-measurements","dir":"Articles","previous_headings":"","what":"Setup and Simulate Measurements","title":"Vignettes for baker: An R package for fitting nested partially latent class models","text":"first simulate data using NPLCM. simulate data controls cases separately. Among controls, disease class termed “infection”. model dependence among pathogen measurements, Wu et al 2016, Biostatistics introduced subclasses characterize dependence. simulation, assume two subclasses (\\(K=2\\)). Among cases, disease classes represent true lung infections pathogens \\(1, 2, ..., L\\) another class called “None---”. don’t get observe disease classes wish use measurements peripheral lung infer individual probabilities pathogen infecting lung well fraction pneumonia cases caused pathogen. assume two subclasses nested within \\(L+1\\) disease classes. Controls cases given disease class fall subclasses likely different probabilities, term subclass weights; assume subclass weights controls \\(\\boldsymbol{\\nu}=(0.5,0.5)\\) cases \\(\\boldsymbol{\\nu}\\) R code chose particular pair values c(curr_mix,1-curr_mix).","code":"rm(list=ls()) # Note: the example will only run 100 Gibbs sampling steps to save computing time. # To produce useful posterior inferences, please modify \"mcmc_options\" as follows #                      \"n.itermcmc\" to 50000 #                      \"n.burnin\"   to 10000, #                      \"n.thin\"     to 40,   working_dir <- tempdir() # <-- create a temporary directory. #curd = getwd() #randname = paste(curd, basename(tempfile()), sep=\"/\") # need absolute path #dir.create(randname) #working_dir = randname  K.true  <- 2   # no. of latent subclasses in actual simulation.  # If eta = c(1,0), K.true is effectively 1. J       <- 6   # no. of pathogens. N       <- 250 # no. of cases/controls.  # case subclass weight (five values): subclass_mix_seq <- c(0,0.25,0.5,0.75,1)   NREP   <- 100 MYGRID <- expand.grid(list(rep   = 1:NREP, # data replication.                            iter  = seq_along(subclass_mix_seq),# mixing weights.                            k_fit = c(1,2), # model being fitted: 1 for pLCM; >1 for npLCM.                            scn   = 3:1)    # index for different truth; see \"scn_collection.R\". )  n_seed   <- nrow(unique(MYGRID[,-3])) seed_seq <- rep(1:n_seed,times=length(unique(MYGRID[,3])))  SEG   <- 1 # The value could be 1 to nrow(MYGRID)=3000; here we just simulate one data set. scn   <- MYGRID$scn[SEG] k_fit <- 2#MYGRID$k_fit[SEG]  iter  <- MYGRID$iter[SEG]  rep   <- MYGRID$rep[SEG]    # current parameters: curr_mix <- subclass_mix_seq[iter] lambda   <- c(0.5,0.5) #c(curr_mix,1-curr_mix) eta      <- c(curr_mix,1-curr_mix)   # set fixed simulation sequence: seed_start <- 20161215   set.seed(seed_start+seed_seq[SEG])  if (scn == 3){   ThetaBS_withNA <- cbind(c(0.95,0.95,0.55,0.95,0.95,0.95),#subclass 1.                           c(0.95,0.55,0.95,0.55,0.55,0.55))#subclass 2.   PsiBS_withNA   <- cbind(c(0.4,0.4,0.05,0.2,0.2,0.2),     #subclass 1.                           c(0.05,0.05,0.4,0.05,0.05,0.05)) #subclass 2. }  if (scn == 2){   ThetaBS_withNA <- cbind(c(0.95,0.9,0.85,0.9,0.9,0.9),   #subclass 1.                           c(0.95,0.9,0.95,0.9,0.9,0.9))   #subclass 2.   PsiBS_withNA   <- cbind(c(0.3,0.3,0.15,0.2,0.2,0.2),    #subclass 1.                           c(0.15,0.15,0.3,0.05,0.05,0.05))#subclass 2. }  if (scn == 1){   ThetaBS_withNA <- cbind(c(0.95,0.9,0.9,0.9,0.9,0.9),#subclass 1.                           c(0.95,0.9,0.9,0.9,0.9,0.9))#subclass 2.   PsiBS_withNA   <- cbind(c(0.25,0.25,0.2,0.15,0.15,0.15),#subclass 1.                           c(0.2,0.2,0.25,0.1,0.1,0.1))    #subclass 2. }    # the following paramter names are set using names in the 'baker' package: set_parameter <- list(   cause_list      = c(LETTERS[1:J]),   etiology        = c(0.5,0.2,0.15,0.05,0.05,0.05),# same length as cause_list.   pathogen_BrS    = LETTERS[1:J],   meas_nm         = list(MBS = c(\"MBS1\")), # a single source of Bronze Standard (BrS) data.   Lambda          = lambda,              #ctrl mix (subclass weights).   Eta             = t(replicate(J,eta)), #case mix; # of rows equals length(cause_list).   PsiBS           = PsiBS_withNA,   ThetaBS         = ThetaBS_withNA,   Nu      =     N, # control sample size.   Nd      =     N  # case sample size. )  # # visualize pairwise log odds ratios for cases and controls when eta changes  # # from 0 to 1. In the following simulation, we just use one value: eta=0. # example(\"compute_logOR_single_cause\")  simu_out   <- simulate_nplcm(set_parameter) data_nplcm <- simu_out$data_nplcm"},{"path":"/articles/baker_demo.html","id":"exploratory-data-analysis","dir":"Articles","previous_headings":"","what":"Exploratory data analysis","title":"Vignettes for baker: An R package for fitting nested partially latent class models","text":", visualize matrix pairwise log odds ratios (LOR) cases (upper) controls (lower). LOR top cell. , standard error smaller type, using color LOR. estimate divided standard error. put actual value Z-statistics absolute value greater 2; plus (red) minus (blue) 1 2; blank otherwise.","code":"# specify cause list: cause_list <- set_parameter$cause_list  # specify measurements: # bronze-standard measurements: patho_BrS_MBS1      <- set_parameter$pathogen_BrS BrS_object_1        <- make_meas_object(patho_BrS_MBS1,\"MBS\",\"1\",\"BrS\",cause_list)    # please use ?make_meas_object to see the measurement standards.    # pairwise log odds ratio plot: pathogen_display <- BrS_object_1$patho plot_logORmat(data_nplcm,pathogen_display,1) ## == Visualizing pairwise log odds ratios for bronze-standard data set:  1 :  MBS1 . =="},{"path":"/articles/baker_demo.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model specification","title":"Vignettes for baker: An R package for fitting nested partially latent class models","text":"","code":"m_opt1 <- list(likelihood   = list(cause_list = cause_list,               # <---- fitted causes.                                    k_subclass = k_fit,                    # <---- no. of subclasses.                                    Eti_formula = \"~ 0\",                   # <---- only apply FPR formula to specified slice of measurements; if not default to the first slice.                                    FPR_formula = list(MBS1 = \"~0\")),      # <---- etiology regression formula.                use_measurements = c(\"BrS\"),                               # <---- which measurements to use to inform etiology                prior        = list(Eti_prior   = overall_uniform(1, cause_list) ,                       # <--- etiology prior.                                     TPR_prior   = list(                                      BrS  = list(info  = \"informative\",                                                  input = \"direct_beta_param\",                                                  val   = list(                                                           MBS1 = list(alpha = list(rep(6,length(set_parameter$pathogen_BrS))),                                                                       beta  = list(rep(2,length(set_parameter$pathogen_BrS)))                                                                      )                                                  )                                                                                        )                                                                          )# <---- TPR prior.                ) )                         model_options <- m_opt1 assign_model(model_options,data_nplcm) ## $num_slice ## MBS MSS MGS  ##   1   0   0  ##  ## $nested ## [1] TRUE ##  ## $regression ## $regression$do_reg_Eti ## [1] FALSE ##  ## $regression$do_reg_FPR ##  MBS1  ## FALSE  ##  ## $regression$is_discrete_predictor ## $regression$is_discrete_predictor$Eti ## [1] FALSE ##  ## $regression$is_discrete_predictor$FPR ##  MBS1  ## FALSE  ##  ##  ##  ## $BrS_grp ## [1] FALSE ##  ## $SS_grp ## [1] FALSE"},{"path":"/articles/baker_demo.html","id":"fitting-the-model","dir":"Articles","previous_headings":"","what":"Fitting the model","title":"Vignettes for baker: An R package for fitting nested partially latent class models","text":"","code":"# date stamp for analysis: Date     <- gsub(\"-\", \"_\", Sys.Date()) # include stratification information in file name: dated_strat_name    <- file.path(working_dir,                                   paste0(\"scn_\",scn,\"_mixiter_\",iter)) if (dir.exists(dated_strat_name)) {   unlink(dated_strat_name, force = TRUE) }  # create folder dir.create(dated_strat_name) fullname <- dated_strat_name  # for finer scenarios, e.g., different types of analysis applicable to the # same data set. Here we just perform one analysis: result_folder <- file.path(   fullname,   paste0(\"rep_\", rep, \"_kfit_\",          model_options$likelihood$k_subclass)) dir.create(result_folder)   # options for MCMC chains: mcmc_options <- list(   individual.pred = !TRUE,   ppd             = TRUE,   n.chains   = 1,   n.itermcmc = as.integer(200), #50000   n.burnin   = as.integer(100), #10000   n.thin     = 1, #50   result.folder = result_folder,   bugsmodel.dir = result_folder )  # Record the settings of current analysis: # data clean options: fname = file.path(   \"example_data\",    \"pathogen_category_simulation.csv\") fname = system.file(   fname,    package = \"baker\") global_patho_taxo_dir = fname  clean_options <- list(   BrS_objects        =  make_list(BrS_object_1),         # <---- all bronze-standard measurements.   patho_taxo_dir = global_patho_taxo_dir,   allow_missing      = FALSE)  # place the nplcm data and cleaning options into the results folder dput(data_nplcm,file.path(mcmc_options$result.folder,\"data_nplcm.txt\"))  dput(clean_options,file.path(mcmc_options$result.folder,\"data_clean_options.txt\"))  gs <- nplcm(data_nplcm, model_options, mcmc_options)"},{"path":"/articles/baker_demo.html","id":"visualizations","dir":"Articles","previous_headings":"","what":"Visualizations","title":"Vignettes for baker: An R package for fitting nested partially latent class models","text":"","code":"result_folder <- mcmc_options$result.folder"},{"path":"/articles/baker_demo.html","id":"plot-data-prior-and-posteriors-for-all-causative-pathogens","dir":"Articles","previous_headings":"Visualizations","what":"plot data, prior, and posteriors for all causative pathogens:","title":"Vignettes for baker: An R package for fitting nested partially latent class models","text":"","code":"suppressWarnings(plot(gs, bg_color = NULL))"},{"path":"/articles/baker_demo.html","id":"plot-data-prior-and-posterior-for-selected-causes","dir":"Articles","previous_headings":"Visualizations","what":"plot data, prior, and posterior for selected causes:","title":"Vignettes for baker: An R package for fitting nested partially latent class models","text":"","code":"plot(gs, bg_color = NULL, select_latent = c(\"A\",\"C\"), exact = TRUE)"},{"path":[]},{"path":"/articles/baker_demo.html","id":"model-checking-by-comparing-observed-pairwise-log-odds-ratios-lor","dir":"Articles","previous_headings":"Visualizations","what":"model checking by comparing observed pairwise log odds ratios (LOR)","title":"Vignettes for baker: An R package for fitting nested partially latent class models","text":"compare observed LOR posterior predictive distributions pairwise LOR; numbers (predicted LOR - observed LOR)/ s.e. (posterior predictive distribution LOR); closer zero better.","code":"plot_check_pairwise_SLORD(result_folder, slice=1)"},{"path":"/articles/baker_demo.html","id":"model-checking-by-comparing-observed-frequencies-of-binary-patterns-to-the-model-predicted-ones","dir":"Articles","previous_headings":"Visualizations","what":"model checking by comparing observed frequencies of binary patterns to the model-predicted ones","title":"Vignettes for baker: An R package for fitting nested partially latent class models","text":"","code":"dir_list <- as.list(c(result_folder)) plot_check_common_pattern(dir_list,slice_vec =c(1,1))"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhenke Wu. Maintainer, author, copyright holder. Scott Zeger. Author. John Muschelli. Contributor. Irena Chen. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wu, Z., Deloria-Knoll, M., Hammitt, L.L., Zeger, S.L. Pneumonia Etiology Research Child Health Core Team (2016), Partially latent class models case-control studies childhood pneumonia aetiology. Journal Royal Statistical Society: Series C (Applied Statistics). doi: 10.1111/rssc.12101.","code":"@Article{,   author = {Zhenke Wu and Maria Deloria-Knoll and Laura L Hammitt and Scott L Zeger},   title = {Partially Latent Class Models for Case-Control Studies   of Childhood Pneumonia Aetiology},   journal = {Journal of the Royal Statistical Society: Series C (Applied Statistics)},   year = {2015},   doi = {10.1111/rssc.12101},   url = {https://rss.onlinelibrary.wiley.com/doi/full/10.1111/rssc.12101}, }"},{"path":"/index.html","id":"baker-bayesian-analysis-kit-for-etiology-research","dir":"","previous_headings":"","what":"baker: Bayesian Analysis Kit for Etiology Research","title":"An R Package for Nested Partially Latent Class Models","text":"R Package Fitting Bayesian Nested Partially Latent Class Models  Maintainer: Zhenke Wu, zhenkewu@umich.edu Issues: Please click report reproducible issues. Vignette: Please click read latest vignette. Package website: Please click website generated pkgdown, contains html format package manual. References: using baker population individual estimation case-control data, please cite following papers:","code":""},{"path":"/index.html","id":"table-of-content","dir":"","previous_headings":"","what":"Table of content","title":"An R Package for Nested Partially Latent Class Models","text":"1. Installation 2. Vignettes 3. Graphical User Interface (GUI) 4. Analytic Goal 5. Comparison Existing Solutions 6. Details 7. Platform 8. Connect R JAGS Unix systems OSX 9. Submit Jobs Computing Cluster via shell script 10. Connect R JAGS Windows 11. Example Datasets","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R Package for Nested Partially Latent Class Models","text":"Note: run install.packages(\"pbkrtest\") R(>=3.2.3) package reported missing. Windows User: use devtools::install_github(\"zhenkewu/baker\",INSTALL_opts=c(\"---multiarch\")) instead see error message ERROR: loading failed 'i386' (Thanks Chrissy!).","code":"# install.packages(\"devtools\",repos=\"https://cloud.r-project.org\") devtools::install_github(\"zhenkewu/baker\")"},{"path":"/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"An R Package for Nested Partially Latent Class Models","text":"","code":"devtools::install_github(\"zhenkewu/baker\", build_vignettes=TRUE) # will take extra time to run a few examples. browseVignettes(\"baker\")"},{"path":"/index.html","id":"graphical-user-interface-gui","dir":"","previous_headings":"","what":"Graphical User Interface (GUI)","title":"An R Package for Nested Partially Latent Class Models","text":"developers interested low-level details, pretty awesome visualization function dependencies within package: get dynamic figure. snapshot :","code":"# install.packages(\"devtools\",repos=\"http://watson.nci.nih.gov/cran_mirror/\") devtools::install_github(\"zhenkewu/baker\") shiny::runApp(system.file(\"shiny\", package = \"baker\")) library(DependenciesGraphs) # if not installed, try this-- devtools::install_github(\"datastorm-open/DependenciesGraphs\") library(QualtricsTools) # devtools::install_github(\"emmamorgan-tufts/QualtricsTools\") dep <- funDependencies('package:baker','nplcm') plot(dep)"},{"path":"/index.html","id":"analytic-goal","dir":"","previous_headings":"","what":"Analytic Goal","title":"An R Package for Nested Partially Latent Class Models","text":"study disease etiology case-control data multiple sources measurement errors. interested estimating population etiology pie (fraction), probability cause individual case, try baker.","code":""},{"path":"/index.html","id":"comparison-to-other-existing-solutions","dir":"","previous_headings":"","what":"Comparison to Other Existing Solutions","title":"An R Package for Nested Partially Latent Class Models","text":"Acknowledges various levels measurement errors combines multiple sources data optimal disease diagnosis. Main function: nplcm() fits model without covariates.","code":""},{"path":"/index.html","id":"details","dir":"","previous_headings":"","what":"Details","title":"An R Package for Nested Partially Latent Class Models","text":"Implements hierarchical Bayesian models infer disease etiology multivariate binary data. package builds functionalities data cleaning, exploratory data analyses, model specification, model estimation, visualization model diagnostics comparisons, catalyzing vital effective communications analysts practicing clinicians. baker implemented models dependent measurements given disease status, regression analyses etiology, multiple imperfect measurements, different priors true positive rates among cases differential measurement characteristics, multiple-pathogen etiology. Scientists Pneumonia Etiology Research Child Health (PERCH) study usually refer etiology distribution “population etiology pie” “individual etiology pie” compositional nature, hence name package.","code":""},{"path":"/index.html","id":"platform","dir":"","previous_headings":"","what":"Platform","title":"An R Package for Nested Partially Latent Class Models","text":"baker package compatible OSX, Linux Windows systems, requiring slightly different setup described . need speed installation analysis, please contact maintainer chat clicking gitter button top README file.","code":""},{"path":[]},{"path":"/index.html","id":"mac-osx-1011-el-capitan","dir":"","previous_headings":"Connect R to JAGS/WinBUGS","what":"Mac OSX 10.11 El Capitan","title":"An R Package for Nested Partially Latent Class Models","text":"Use Just Another Gibbs Sampler (JAGS) Install JAGS 4.2.0; Download Install R; Download Fire R, run R command install.packages(\"rjags\") Run R command library(rjags) R console; installations successful, ’ll see notes like : Run R command library(baker). package ks loaded due failure loading package rgl, first install X11 going , followed ","code":">library(rjags) Loading required package: coda Linked to JAGS 4.x.0 Loaded modules: basemod,bugs install.packages(\"http://download.r-forge.r-project.org/src/contrib/rgl_0.95.1504.tar.gz\",repo=NULL,type=\"source\")"},{"path":"/index.html","id":"unix-build-from-source-without-administrative-privilege","dir":"","previous_headings":"Connect R to JAGS/WinBUGS","what":"Unix (Build from source without administrative privilege)","title":"An R Package for Nested Partially Latent Class Models","text":"use JHPCE example. complete installation guide offers extra information. Download source code JAGS 4.2.0; Suppose ’ve downloaded ~/local/jags/4.2.0. Follow bash commands : Also check INSTALLATION file rjags package.","code":"# change to the directory with the newly downloaded source files: cd ~/local/jags/4.2.0  # create a new folder named \"usr\" mkdir usr  # decompress files: tar zxvf JAGS-4.2.0.tar.gz  # change to the directory with newly decompressed files: cd ~/local/jags/4.2.0/JAGS-4.2.0    # specify new JAGS home: export JAGS_HOME=$HOME/local/jags/4.2.0/usr export PATH=$JAGS_HOME/bin:$PATH  # link to BLAS and LAPACK: # Here I have used \"/usr/lib64/atlas/\" and \"/usr/lib64/\" on JHPCE that give me # access to libblas.so.3 and liblapack.so.3. Please modify to paths on your system. LDFLAGS=\"-L/usr/lib64/atlas/ -L/usr/lib64/\" ./configure --prefix=$JAGS_HOME --libdir=$JAGS_HOME/lib64   # if you have 8 cores: make -j8 make install  # prepare to install R package, rjags: export PKG_CONFIG_PATH=$HOME/local/jags/4.2.0/usr/lib64/pkgconfig   module load R R> install.packages(\"rjags\") # or if the above fails, try: R>install.packages(\"rjags\", configure.args=\"--enable-rpath\")"},{"path":"/index.html","id":"submitting-jobs-to-computing-cluster-via-a-shell-script","dir":"","previous_headings":"","what":"Submitting Jobs to Computing Cluster via a shell script","title":"An R Package for Nested Partially Latent Class Models","text":", use JHPCE example.","code":"#!/bin/bash #$ -M zhenkewu@gmail.com #$ -N baker_regression_perch #$ -o /users/zhwu/baker_regression/data_analysis/baker_regression_test.txt #$ -e /users/zhwu/baker_regression/data_analysis/baker_regression_test.txt  export JAGS_HOME=$HOME/local/jags/4.2.0/usr export PATH=$JAGS_HOME/bin:$PATH  export LD_LIBRARY_PATH=$JAGS_HOME/lib64  cd /users/zhwu/baker_regression/data_analysis #$ -cwd  echo \"**** Job starts ****\" date echo \"**** JHPCE info ****\" echo \"User: ${USER}\" echo \"Job id: ${JOB_ID}\" echo \"Job name: ${JOB_NAME}\" echo \"Hostname: ${HOSTNAME}\"   Rscript real_regression_data_jhpce.R  echo \"**** Job ends ****\"  date"},{"path":"/index.html","id":"windows","dir":"","previous_headings":"Submitting Jobs to Computing Cluster via a shell script","what":"Windows","title":"An R Package for Nested Partially Latent Class Models","text":"JAGS 4.2.0 Install R; Download Install JAGS 4.2.0; Add path JAGS 4.2.0 environmental variable (essential R find jags program). See setting environmental variables; alternatives brew install -v jags OSX, sudo apt-get install jags Ubuntu/Debian Fire R, run R command install.packages(\"rjags\") Install Rtools (building installing R pacakges source); Add path Rtools (e.g. C:\\Rtools\\) environmental variables R knows find .","code":""},{"path":"/index.html","id":"example-data-sets","dir":"","previous_headings":"Submitting Jobs to Computing Cluster via a shell script","what":"Example data sets","title":"An R Package for Nested Partially Latent Class Models","text":"provide two simulated data sets package: data(data_nplcm_noreg) data(data_nplcm_reg_nest)","code":""},{"path":"/reference/H.html","id":null,"dir":"Reference","previous_headings":"","what":"Shannon entropy for multivariate discrete data — H","title":"Shannon entropy for multivariate discrete data — H","text":"Shannon entropy multivariate discrete data","code":""},{"path":"/reference/H.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shannon entropy for multivariate discrete data — H","text":"","code":"H(px)"},{"path":"/reference/H.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shannon entropy for multivariate discrete data — H","text":"px vector positive numbers sum 1","code":""},{"path":"/reference/H.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shannon entropy for multivariate discrete data — H","text":"non-negative number","code":""},{"path":"/reference/H.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shannon entropy for multivariate discrete data — H","text":"","code":"H(c(0.5,0.3,0.2)) #> [1] 1.029653"},{"path":"/reference/I2symb.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert 0/1 coding to pathogen/combinations — I2symb","title":"Convert 0/1 coding to pathogen/combinations — I2symb","text":"Reverse symb2I()","code":""},{"path":"/reference/I2symb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert 0/1 coding to pathogen/combinations — I2symb","text":"","code":"I2symb(binary_code, pathogen_list)"},{"path":"/reference/I2symb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert 0/1 coding to pathogen/combinations — I2symb","text":"binary_code Binary indicators pathogens pathogen_list complete list pathogen names","code":""},{"path":"/reference/I2symb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert 0/1 coding to pathogen/combinations — I2symb","text":"name pathogen pathogen combination indicated \"code\"","code":""},{"path":"/reference/I2symb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert 0/1 coding to pathogen/combinations — I2symb","text":"","code":"I2symb(\"001\",c(\"A\",\"B\",\"C\")) #> [1] \"C\" I2symb(\"000\",c(\"A\",\"B\",\"C\")) #> [1] \"NoA\""},{"path":"/reference/Imat2cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a matrix of binary indicators to categorical variables — Imat2cat","title":"Convert a matrix of binary indicators to categorical variables — Imat2cat","text":"Convert matrix binary indicators categorical variables","code":""},{"path":"/reference/Imat2cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a matrix of binary indicators to categorical variables — Imat2cat","text":"","code":"Imat2cat(binary_mat, cause_list, pathogen_list)"},{"path":"/reference/Imat2cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a matrix of binary indicators to categorical variables — Imat2cat","text":"binary_mat matrix binary indicators. Rows subjects, columns pathogens \"pathogen.list\" cause_list list causes pathogen_list complete list pathogen names","code":""},{"path":"/reference/Imat2cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a matrix of binary indicators to categorical variables — Imat2cat","text":"vector categorical variables. length equals length \"allowed.list\"","code":""},{"path":"/reference/Imat2cat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a matrix of binary indicators to categorical variables — Imat2cat","text":"","code":"Imat2cat(rbind(diag(3),c(1,1,0),c(0,0,0)),c(\"A\",\"B\",\"C\",\"A+B\",\"NoA\"),c(\"A\",\"B\",\"C\")) #> 100 010 001 110 000  #>   1   2   3   4   5"},{"path":"/reference/NA2dot.html","id":null,"dir":"Reference","previous_headings":"","what":"convert 'NA' to '.' — NA2dot","title":"convert 'NA' to '.' — NA2dot","text":"convert 'NA' '.'","code":""},{"path":"/reference/NA2dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert 'NA' to '.' — NA2dot","text":"","code":"NA2dot(s)"},{"path":"/reference/NA2dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert 'NA' to '.' — NA2dot","text":"s string characters may contain \"NA\"","code":""},{"path":"/reference/NA2dot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert 'NA' to '.' — NA2dot","text":"string characters without 'NA'","code":""},{"path":"/reference/add_meas_BrS_case_Nest_Slice.html","id":null,"dir":"Reference","previous_headings":"","what":"add likelihood for a BrS measurement slice among cases (conditional dependence) — add_meas_BrS_case_Nest_Slice","title":"add likelihood for a BrS measurement slice among cases (conditional dependence) — add_meas_BrS_case_Nest_Slice","text":"add likelihood BrS measurement slice among cases (conditional dependence)","code":""},{"path":"/reference/add_meas_BrS_case_Nest_Slice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add likelihood for a BrS measurement slice among cases (conditional dependence) — add_meas_BrS_case_Nest_Slice","text":"","code":"add_meas_BrS_case_Nest_Slice(s, Mobs, cause_list, ppd = NULL)"},{"path":"/reference/add_meas_BrS_case_Nest_Slice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add likelihood for a BrS measurement slice among cases (conditional dependence) — add_meas_BrS_case_Nest_Slice","text":"s slice Mobs See data_nplcm described nplcm() cause_list list causes data_nplcm described nplcm() ppd Default NULL; Set TRUE enabling posterior predictive checking.","code":""},{"path":"/reference/add_meas_BrS_case_Nest_Slice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add likelihood for a BrS measurement slice among cases (conditional dependence) — add_meas_BrS_case_Nest_Slice","text":"list two elements: first plug, .bug code; second parametersthat stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_case_Nest_Slice_jags.html","id":null,"dir":"Reference","previous_headings":"","what":"add likelihood for a BrS measurement slice among cases (conditional dependence) — add_meas_BrS_case_Nest_Slice_jags","title":"add likelihood for a BrS measurement slice among cases (conditional dependence) — add_meas_BrS_case_Nest_Slice_jags","text":"add likelihood BrS measurement slice among cases (conditional dependence)","code":""},{"path":"/reference/add_meas_BrS_case_Nest_Slice_jags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add likelihood for a BrS measurement slice among cases (conditional dependence) — add_meas_BrS_case_Nest_Slice_jags","text":"","code":"add_meas_BrS_case_Nest_Slice_jags(s, Mobs, cause_list, ppd = NULL)"},{"path":"/reference/add_meas_BrS_case_Nest_Slice_jags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add likelihood for a BrS measurement slice among cases (conditional dependence) — add_meas_BrS_case_Nest_Slice_jags","text":"s slice Mobs See data_nplcm described nplcm() cause_list list causes data_nplcm described nplcm() ppd Default NULL; Set TRUE enabling posterior predictive checking.","code":""},{"path":"/reference/add_meas_BrS_case_Nest_Slice_jags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add likelihood for a BrS measurement slice among cases (conditional dependence) — add_meas_BrS_case_Nest_Slice_jags","text":"list two elements: first plug, .bug code; second parametersthat stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_case_NoNest_Slice.html","id":null,"dir":"Reference","previous_headings":"","what":"add a likelihood component for a BrS measurement slice among cases (conditional independence) — add_meas_BrS_case_NoNest_Slice","title":"add a likelihood component for a BrS measurement slice among cases (conditional independence) — add_meas_BrS_case_NoNest_Slice","text":"add likelihood component BrS measurement slice among cases (conditional independence)","code":""},{"path":"/reference/add_meas_BrS_case_NoNest_Slice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add a likelihood component for a BrS measurement slice among cases (conditional independence) — add_meas_BrS_case_NoNest_Slice","text":"","code":"add_meas_BrS_case_NoNest_Slice(s, Mobs, cause_list, ppd = NULL)"},{"path":"/reference/add_meas_BrS_case_NoNest_Slice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add a likelihood component for a BrS measurement slice among cases (conditional independence) — add_meas_BrS_case_NoNest_Slice","text":"s slice Mobs See data_nplcm described nplcm() cause_list list causes data_nplcm described nplcm() ppd Default NULL; Set TRUE enabling posterior predictive checking.","code":""},{"path":"/reference/add_meas_BrS_case_NoNest_Slice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add a likelihood component for a BrS measurement slice among cases (conditional independence) — add_meas_BrS_case_NoNest_Slice","text":"list two elements: first plug, .bug code; second parameters stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_case_NoNest_Slice_jags.html","id":null,"dir":"Reference","previous_headings":"","what":"add a likelihood component for a BrS measurement slice among cases (conditional independence) — add_meas_BrS_case_NoNest_Slice_jags","title":"add a likelihood component for a BrS measurement slice among cases (conditional independence) — add_meas_BrS_case_NoNest_Slice_jags","text":"add likelihood component BrS measurement slice among cases (conditional independence)","code":""},{"path":"/reference/add_meas_BrS_case_NoNest_Slice_jags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add a likelihood component for a BrS measurement slice among cases (conditional independence) — add_meas_BrS_case_NoNest_Slice_jags","text":"","code":"add_meas_BrS_case_NoNest_Slice_jags(s, Mobs, prior, cause_list, ppd = NULL)"},{"path":"/reference/add_meas_BrS_case_NoNest_Slice_jags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add a likelihood component for a BrS measurement slice among cases (conditional independence) — add_meas_BrS_case_NoNest_Slice_jags","text":"s slice Mobs See data_nplcm described nplcm() prior Prior specifications. cause_list list causes data_nplcm described nplcm() ppd Default NULL; Set TRUE enabling posterior predictive checking.","code":""},{"path":"/reference/add_meas_BrS_case_NoNest_Slice_jags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add a likelihood component for a BrS measurement slice among cases (conditional independence) — add_meas_BrS_case_NoNest_Slice_jags","text":"list two elements: first plug, .bug code; second parameters stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_case_NoNest_reg_Slice_jags.html","id":null,"dir":"Reference","previous_headings":"","what":"add likelihood component for a BrS measurement slice among cases — add_meas_BrS_case_NoNest_reg_Slice_jags","title":"add likelihood component for a BrS measurement slice among cases — add_meas_BrS_case_NoNest_reg_Slice_jags","text":"regression model nested subclasses","code":""},{"path":"/reference/add_meas_BrS_case_NoNest_reg_Slice_jags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add likelihood component for a BrS measurement slice among cases — add_meas_BrS_case_NoNest_reg_Slice_jags","text":"","code":"add_meas_BrS_case_NoNest_reg_Slice_jags(s, Mobs, prior, cause_list, ppd = NULL)"},{"path":"/reference/add_meas_BrS_case_NoNest_reg_Slice_jags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add likelihood component for a BrS measurement slice among cases — add_meas_BrS_case_NoNest_reg_Slice_jags","text":"s slice Mobs See data_nplcm described nplcm() prior Prior specifications. cause_list list causes data_nplcm described nplcm() ppd Default NULL; Set TRUE enabling posterior predictive checking.","code":""},{"path":"/reference/add_meas_BrS_case_NoNest_reg_Slice_jags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add likelihood component for a BrS measurement slice among cases — add_meas_BrS_case_NoNest_reg_Slice_jags","text":"list two elements: first plug, .bug code; second parameters stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_case_NoNest_reg_discrete_predictor_Slice_jags.html","id":null,"dir":"Reference","previous_headings":"","what":"add likelihood component for a BrS measurement slice among cases — add_meas_BrS_case_NoNest_reg_discrete_predictor_Slice_jags","title":"add likelihood component for a BrS measurement slice among cases — add_meas_BrS_case_NoNest_reg_discrete_predictor_Slice_jags","text":"regression model nested subclasses; discrete predictors","code":""},{"path":"/reference/add_meas_BrS_case_NoNest_reg_discrete_predictor_Slice_jags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add likelihood component for a BrS measurement slice among cases — add_meas_BrS_case_NoNest_reg_discrete_predictor_Slice_jags","text":"","code":"add_meas_BrS_case_NoNest_reg_discrete_predictor_Slice_jags(   s,   Mobs,   prior,   cause_list,   ppd = NULL )"},{"path":"/reference/add_meas_BrS_case_NoNest_reg_discrete_predictor_Slice_jags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add likelihood component for a BrS measurement slice among cases — add_meas_BrS_case_NoNest_reg_discrete_predictor_Slice_jags","text":"s slice Mobs See data_nplcm described nplcm() prior Prior specifications. cause_list list causes data_nplcm described nplcm() ppd Default NULL; Set TRUE enabling posterior predictive checking.","code":""},{"path":"/reference/add_meas_BrS_case_NoNest_reg_discrete_predictor_Slice_jags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add likelihood component for a BrS measurement slice among cases — add_meas_BrS_case_NoNest_reg_discrete_predictor_Slice_jags","text":"list two elements: first plug, .bug code; second parameters stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_ctrl_Nest_Slice.html","id":null,"dir":"Reference","previous_headings":"","what":"add likelihood for a BrS measurement slice among controls (conditional independence) — add_meas_BrS_ctrl_Nest_Slice","title":"add likelihood for a BrS measurement slice among controls (conditional independence) — add_meas_BrS_ctrl_Nest_Slice","text":"add likelihood BrS measurement slice among controls (conditional independence)","code":""},{"path":"/reference/add_meas_BrS_ctrl_Nest_Slice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add likelihood for a BrS measurement slice among controls (conditional independence) — add_meas_BrS_ctrl_Nest_Slice","text":"","code":"add_meas_BrS_ctrl_Nest_Slice(s, Mobs, cause_list, ppd = NULL)"},{"path":"/reference/add_meas_BrS_ctrl_Nest_Slice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add likelihood for a BrS measurement slice among controls (conditional independence) — add_meas_BrS_ctrl_Nest_Slice","text":"s slice Mobs See data_nplcm described nplcm() cause_list list causes data_nplcm described nplcm() ppd Default NULL; Set TRUE enabling posterior predictive checking.","code":""},{"path":"/reference/add_meas_BrS_ctrl_Nest_Slice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add likelihood for a BrS measurement slice among controls (conditional independence) — add_meas_BrS_ctrl_Nest_Slice","text":"list two elements: first plug, .bug code; second parametersthat stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_ctrl_NoNest_Slice.html","id":null,"dir":"Reference","previous_headings":"","what":"add a likelihood component for a BrS measurement slice among controls (conditional independence) — add_meas_BrS_ctrl_NoNest_Slice","title":"add a likelihood component for a BrS measurement slice among controls (conditional independence) — add_meas_BrS_ctrl_NoNest_Slice","text":"add likelihood component BrS measurement slice among controls (conditional independence)","code":""},{"path":"/reference/add_meas_BrS_ctrl_NoNest_Slice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add a likelihood component for a BrS measurement slice among controls (conditional independence) — add_meas_BrS_ctrl_NoNest_Slice","text":"","code":"add_meas_BrS_ctrl_NoNest_Slice(s, Mobs, cause_list, ppd = NULL)"},{"path":"/reference/add_meas_BrS_ctrl_NoNest_Slice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add a likelihood component for a BrS measurement slice among controls (conditional independence) — add_meas_BrS_ctrl_NoNest_Slice","text":"s slice Mobs See data_nplcm described nplcm() cause_list list causes data_nplcm described nplcm() ppd Default NULL; Set TRUE enabling posterior predictive checking.","code":""},{"path":"/reference/add_meas_BrS_ctrl_NoNest_Slice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add a likelihood component for a BrS measurement slice among controls (conditional independence) — add_meas_BrS_ctrl_NoNest_Slice","text":"list two elements: first plug, .bug code; second parametersthat stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_ctrl_NoNest_reg_Slice_jags.html","id":null,"dir":"Reference","previous_headings":"","what":"add a likelihood component for a BrS measurement slice among controls — add_meas_BrS_ctrl_NoNest_reg_Slice_jags","title":"add a likelihood component for a BrS measurement slice among controls — add_meas_BrS_ctrl_NoNest_reg_Slice_jags","text":"regression model without nested subclasses","code":""},{"path":"/reference/add_meas_BrS_ctrl_NoNest_reg_Slice_jags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add a likelihood component for a BrS measurement slice among controls — add_meas_BrS_ctrl_NoNest_reg_Slice_jags","text":"","code":"add_meas_BrS_ctrl_NoNest_reg_Slice_jags(s, Mobs, cause_list, ppd = NULL)"},{"path":"/reference/add_meas_BrS_ctrl_NoNest_reg_Slice_jags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add a likelihood component for a BrS measurement slice among controls — add_meas_BrS_ctrl_NoNest_reg_Slice_jags","text":"s slice Mobs See data_nplcm described nplcm() cause_list list causes data_nplcm described nplcm() ppd Default NULL; Set TRUE enabling posterior predictive checking.","code":""},{"path":"/reference/add_meas_BrS_ctrl_NoNest_reg_Slice_jags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add a likelihood component for a BrS measurement slice among controls — add_meas_BrS_ctrl_NoNest_reg_Slice_jags","text":"list two elements: first plug, .bug code; second parametersthat stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_ctrl_NoNest_reg_discrete_predictor_Slice_jags.html","id":null,"dir":"Reference","previous_headings":"","what":"add a likelihood component for a BrS measurement slice among controls — add_meas_BrS_ctrl_NoNest_reg_discrete_predictor_Slice_jags","title":"add a likelihood component for a BrS measurement slice among controls — add_meas_BrS_ctrl_NoNest_reg_discrete_predictor_Slice_jags","text":"regression model without nested subclasses; discrete","code":""},{"path":"/reference/add_meas_BrS_ctrl_NoNest_reg_discrete_predictor_Slice_jags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add a likelihood component for a BrS measurement slice among controls — add_meas_BrS_ctrl_NoNest_reg_discrete_predictor_Slice_jags","text":"","code":"add_meas_BrS_ctrl_NoNest_reg_discrete_predictor_Slice_jags(   s,   Mobs,   cause_list,   ppd = NULL )"},{"path":"/reference/add_meas_BrS_ctrl_NoNest_reg_discrete_predictor_Slice_jags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add a likelihood component for a BrS measurement slice among controls — add_meas_BrS_ctrl_NoNest_reg_discrete_predictor_Slice_jags","text":"s slice Mobs See data_nplcm described nplcm() cause_list list causes data_nplcm described nplcm() ppd Default NULL; Set TRUE enabling posterior predictive checking.","code":""},{"path":"/reference/add_meas_BrS_ctrl_NoNest_reg_discrete_predictor_Slice_jags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add a likelihood component for a BrS measurement slice among controls — add_meas_BrS_ctrl_NoNest_reg_discrete_predictor_Slice_jags","text":"list two elements: first plug, .bug code; second parametersthat stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_param_Nest_Slice.html","id":null,"dir":"Reference","previous_headings":"","what":"add parameters for a BrS measurement slice among cases and controls (conditional dependence) — add_meas_BrS_param_Nest_Slice","title":"add parameters for a BrS measurement slice among cases and controls (conditional dependence) — add_meas_BrS_param_Nest_Slice","text":"add parameters BrS measurement slice among cases controls (conditional dependence)","code":""},{"path":"/reference/add_meas_BrS_param_Nest_Slice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add parameters for a BrS measurement slice among cases and controls (conditional dependence) — add_meas_BrS_param_Nest_Slice","text":"","code":"add_meas_BrS_param_Nest_Slice(s, Mobs, cause_list)"},{"path":"/reference/add_meas_BrS_param_Nest_Slice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add parameters for a BrS measurement slice among cases and controls (conditional dependence) — add_meas_BrS_param_Nest_Slice","text":"s slice Mobs See data_nplcm described nplcm() cause_list list causes data_nplcm described nplcm()","code":""},{"path":"/reference/add_meas_BrS_param_Nest_Slice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add parameters for a BrS measurement slice among cases and controls (conditional dependence) — add_meas_BrS_param_Nest_Slice","text":"list two elements: first plug, .bug code; second parametersthat stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_param_Nest_Slice_jags.html","id":null,"dir":"Reference","previous_headings":"","what":"add parameters for a BrS measurement slice among cases and controls (conditional dependence) — add_meas_BrS_param_Nest_Slice_jags","title":"add parameters for a BrS measurement slice among cases and controls (conditional dependence) — add_meas_BrS_param_Nest_Slice_jags","text":"add parameters BrS measurement slice among cases controls (conditional dependence)","code":""},{"path":"/reference/add_meas_BrS_param_Nest_Slice_jags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add parameters for a BrS measurement slice among cases and controls (conditional dependence) — add_meas_BrS_param_Nest_Slice_jags","text":"","code":"add_meas_BrS_param_Nest_Slice_jags(s, Mobs, cause_list)"},{"path":"/reference/add_meas_BrS_param_Nest_Slice_jags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add parameters for a BrS measurement slice among cases and controls (conditional dependence) — add_meas_BrS_param_Nest_Slice_jags","text":"s slice Mobs See data_nplcm described nplcm() cause_list list causes data_nplcm described nplcm()","code":""},{"path":"/reference/add_meas_BrS_param_Nest_Slice_jags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add parameters for a BrS measurement slice among cases and controls (conditional dependence) — add_meas_BrS_param_Nest_Slice_jags","text":"list two elements: first plug, .bug code; second parametersthat stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_param_Nest_reg_Slice_jags.html","id":null,"dir":"Reference","previous_headings":"","what":"add parameters for a BrS measurement slice among cases and controls — add_meas_BrS_param_Nest_reg_Slice_jags","title":"add parameters for a BrS measurement slice among cases and controls — add_meas_BrS_param_Nest_reg_Slice_jags","text":"regression model nested subclasses; called insert_bugfile_chunk_reg_nest_meas","code":""},{"path":"/reference/add_meas_BrS_param_Nest_reg_Slice_jags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add parameters for a BrS measurement slice among cases and controls — add_meas_BrS_param_Nest_reg_Slice_jags","text":"","code":"add_meas_BrS_param_Nest_reg_Slice_jags(   s,   Mobs,   prior,   cause_list,   FPR_formula = NULL )"},{"path":"/reference/add_meas_BrS_param_Nest_reg_Slice_jags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add parameters for a BrS measurement slice among cases and controls — add_meas_BrS_param_Nest_reg_Slice_jags","text":"s slice Mobs See data_nplcm described nplcm() prior Prior specifications. cause_list list causes data_nplcm described nplcm() FPR_formula False positive regression formula slice s BrS data. Check model_options$likelihood$FPR_formula[[s]].","code":""},{"path":"/reference/add_meas_BrS_param_Nest_reg_Slice_jags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add parameters for a BrS measurement slice among cases and controls — add_meas_BrS_param_Nest_reg_Slice_jags","text":"list two elements: first plug, .bug code; second parameters stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_param_NoNest_Slice.html","id":null,"dir":"Reference","previous_headings":"","what":"add parameters for a BrS measurement slice among cases and controls (conditional independence) — add_meas_BrS_param_NoNest_Slice","title":"add parameters for a BrS measurement slice among cases and controls (conditional independence) — add_meas_BrS_param_NoNest_Slice","text":"add parameters BrS measurement slice among cases controls (conditional independence)","code":""},{"path":"/reference/add_meas_BrS_param_NoNest_Slice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add parameters for a BrS measurement slice among cases and controls (conditional independence) — add_meas_BrS_param_NoNest_Slice","text":"","code":"add_meas_BrS_param_NoNest_Slice(s, Mobs, cause_list)"},{"path":"/reference/add_meas_BrS_param_NoNest_Slice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add parameters for a BrS measurement slice among cases and controls (conditional independence) — add_meas_BrS_param_NoNest_Slice","text":"s slice Mobs See data_nplcm described nplcm() cause_list list causes data_nplcm described nplcm()","code":""},{"path":"/reference/add_meas_BrS_param_NoNest_Slice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add parameters for a BrS measurement slice among cases and controls (conditional independence) — add_meas_BrS_param_NoNest_Slice","text":"list two elements: first plug, .bug code; second parametersthat stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_param_NoNest_Slice_jags.html","id":null,"dir":"Reference","previous_headings":"","what":"add parameters for a BrS measurement slice among cases and controls (conditional independence) — add_meas_BrS_param_NoNest_Slice_jags","title":"add parameters for a BrS measurement slice among cases and controls (conditional independence) — add_meas_BrS_param_NoNest_Slice_jags","text":"add parameters BrS measurement slice among cases controls (conditional independence)","code":""},{"path":"/reference/add_meas_BrS_param_NoNest_Slice_jags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add parameters for a BrS measurement slice among cases and controls (conditional independence) — add_meas_BrS_param_NoNest_Slice_jags","text":"","code":"add_meas_BrS_param_NoNest_Slice_jags(s, Mobs, prior, cause_list)"},{"path":"/reference/add_meas_BrS_param_NoNest_Slice_jags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add parameters for a BrS measurement slice among cases and controls (conditional independence) — add_meas_BrS_param_NoNest_Slice_jags","text":"s slice Mobs See data_nplcm described nplcm() prior Prior specifications. cause_list list causes data_nplcm described nplcm()","code":""},{"path":"/reference/add_meas_BrS_param_NoNest_Slice_jags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add parameters for a BrS measurement slice among cases and controls (conditional independence) — add_meas_BrS_param_NoNest_Slice_jags","text":"list two elements: first plug, .bug code; second parametersthat stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_param_NoNest_reg_Slice_jags.html","id":null,"dir":"Reference","previous_headings":"","what":"add parameters for a BrS measurement slice among cases and controls — add_meas_BrS_param_NoNest_reg_Slice_jags","title":"add parameters for a BrS measurement slice among cases and controls — add_meas_BrS_param_NoNest_reg_Slice_jags","text":"regression model nested subclasses","code":""},{"path":"/reference/add_meas_BrS_param_NoNest_reg_Slice_jags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add parameters for a BrS measurement slice among cases and controls — add_meas_BrS_param_NoNest_reg_Slice_jags","text":"","code":"add_meas_BrS_param_NoNest_reg_Slice_jags(   s,   Mobs,   prior,   cause_list,   FPR_formula )"},{"path":"/reference/add_meas_BrS_param_NoNest_reg_Slice_jags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add parameters for a BrS measurement slice among cases and controls — add_meas_BrS_param_NoNest_reg_Slice_jags","text":"s slice Mobs See data_nplcm described nplcm() prior Prior specifications. cause_list list causes data_nplcm described nplcm() FPR_formula False positive regression formula slice s BrS data. Check model_options$likelihood$FPR_formula[[s]].","code":""},{"path":"/reference/add_meas_BrS_param_NoNest_reg_Slice_jags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add parameters for a BrS measurement slice among cases and controls — add_meas_BrS_param_NoNest_reg_Slice_jags","text":"list two elements: first plug, .bug code; second parametersthat stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_param_NoNest_reg_discrete_predictor_Slice_jags.html","id":null,"dir":"Reference","previous_headings":"","what":"add parameters for a BrS measurement slice among cases and controls — add_meas_BrS_param_NoNest_reg_discrete_predictor_Slice_jags","title":"add parameters for a BrS measurement slice among cases and controls — add_meas_BrS_param_NoNest_reg_discrete_predictor_Slice_jags","text":"regression model nested subclasses; discrete","code":""},{"path":"/reference/add_meas_BrS_param_NoNest_reg_discrete_predictor_Slice_jags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add parameters for a BrS measurement slice among cases and controls — add_meas_BrS_param_NoNest_reg_discrete_predictor_Slice_jags","text":"","code":"add_meas_BrS_param_NoNest_reg_discrete_predictor_Slice_jags(   s,   Mobs,   prior,   cause_list )"},{"path":"/reference/add_meas_BrS_param_NoNest_reg_discrete_predictor_Slice_jags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add parameters for a BrS measurement slice among cases and controls — add_meas_BrS_param_NoNest_reg_discrete_predictor_Slice_jags","text":"s slice Mobs See data_nplcm described nplcm() prior Prior specifications. cause_list list causes data_nplcm described nplcm()","code":""},{"path":"/reference/add_meas_BrS_param_NoNest_reg_discrete_predictor_Slice_jags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add parameters for a BrS measurement slice among cases and controls — add_meas_BrS_param_NoNest_reg_discrete_predictor_Slice_jags","text":"list two elements: first plug, .bug code; second parametersthat stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_BrS_subclass_Nest_Slice.html","id":null,"dir":"Reference","previous_headings":"","what":"add subclass indicators for a BrS measurement slice among cases and controls (conditional independence) — add_meas_BrS_subclass_Nest_Slice","title":"add subclass indicators for a BrS measurement slice among cases and controls (conditional independence) — add_meas_BrS_subclass_Nest_Slice","text":"add subclass indicators BrS measurement slice among cases controls (conditional independence)","code":""},{"path":"/reference/add_meas_BrS_subclass_Nest_Slice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add subclass indicators for a BrS measurement slice among cases and controls (conditional independence) — add_meas_BrS_subclass_Nest_Slice","text":"","code":"add_meas_BrS_subclass_Nest_Slice(s, Mobs, cause_list, ppd = NULL, reg = NULL)"},{"path":"/reference/add_meas_BrS_subclass_Nest_Slice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add subclass indicators for a BrS measurement slice among cases and controls (conditional independence) — add_meas_BrS_subclass_Nest_Slice","text":"s slice Mobs See data_nplcm described nplcm() cause_list list causes data_nplcm described nplcm() ppd Default NULL; Set TRUE enabling posterior predictive checking. reg Default NULL; set TRUE regression (double index subclass weights: subject subclass)","code":""},{"path":"/reference/add_meas_BrS_subclass_Nest_Slice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add subclass indicators for a BrS measurement slice among cases and controls (conditional independence) — add_meas_BrS_subclass_Nest_Slice","text":"list two elements: first plug, .bug code; second parametersthat stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_SS_case.html","id":null,"dir":"Reference","previous_headings":"","what":"add likelihood for a SS measurement slice among cases (conditional independence) — add_meas_SS_case","title":"add likelihood for a SS measurement slice among cases (conditional independence) — add_meas_SS_case","text":"add likelihood SS measurement slice among cases (conditional independence)","code":""},{"path":"/reference/add_meas_SS_case.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add likelihood for a SS measurement slice among cases (conditional independence) — add_meas_SS_case","text":"","code":"add_meas_SS_case(nslice, Mobs, prior, cause_list)"},{"path":"/reference/add_meas_SS_case.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add likelihood for a SS measurement slice among cases (conditional independence) — add_meas_SS_case","text":"nslice total number SS measurement slices Mobs see data_nplcm described nplcm() prior see model_options described nplcm() cause_list list causes model_options described nplcm()","code":""},{"path":"/reference/add_meas_SS_case.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add likelihood for a SS measurement slice among cases (conditional independence) — add_meas_SS_case","text":"list two elements: first plug, .bug code; second parametersthat stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/add_meas_SS_param.html","id":null,"dir":"Reference","previous_headings":"","what":"add parameters for a SS measurement slice among cases (conditional independence) — add_meas_SS_param","title":"add parameters for a SS measurement slice among cases (conditional independence) — add_meas_SS_param","text":"add parameters SS measurement slice among cases (conditional independence)","code":""},{"path":"/reference/add_meas_SS_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add parameters for a SS measurement slice among cases (conditional independence) — add_meas_SS_param","text":"","code":"add_meas_SS_param(nslice, Mobs, prior, cause_list)"},{"path":"/reference/add_meas_SS_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add parameters for a SS measurement slice among cases (conditional independence) — add_meas_SS_param","text":"nslice total number SS measurement slices Mobs see data_nplcm described nplcm() prior see model_options described nplcm() cause_list list causes model_options described nplcm()","code":""},{"path":"/reference/add_meas_SS_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add parameters for a SS measurement slice among cases (conditional independence) — add_meas_SS_param","text":"list two elements: first plug, .bug code; second parametersthat stores model parameters introduced plugged measurement slice","code":""},{"path":[]},{"path":"/reference/as.matrix_or_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"convert one column data frame to a vector — as.matrix_or_vec","title":"convert one column data frame to a vector — as.matrix_or_vec","text":"convert one column data frame vector","code":""},{"path":"/reference/as.matrix_or_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert one column data frame to a vector — as.matrix_or_vec","text":"","code":"as.matrix_or_vec(x)"},{"path":"/reference/as.matrix_or_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert one column data frame to a vector — as.matrix_or_vec","text":"x one-column data.frame","code":""},{"path":"/reference/as.matrix_or_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert one column data frame to a vector — as.matrix_or_vec","text":"vector","code":""},{"path":"/reference/as.matrix_or_vec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"convert one column data frame to a vector — as.matrix_or_vec","text":"JAGS accept data frame one column; function converts vector, JAGS allow.","code":""},{"path":"/reference/assign_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret the specified model structure — assign_model","title":"Interpret the specified model structure — assign_model","text":"assign_model translates options specified user (e.g., model_options) information can understood baker.","code":""},{"path":"/reference/assign_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret the specified model structure — assign_model","text":"","code":"assign_model(model_options, data_nplcm, silent = TRUE)"},{"path":"/reference/assign_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret the specified model structure — assign_model","text":"model_options See nplcm() function. data_nplcm Data. See nplcm() function data structure. silent Default TRUE messages; FALSE otherwise.","code":""},{"path":"/reference/assign_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret the specified model structure — assign_model","text":"list model specifications: num_slice vector counting . measurement slices level measurement quality (e.g., MBS, MSS, MGS representing Bronze-Standard Measurements - case-control, Silver-Standard Measurements Gold-Standard Measurements - case-); nested Local dependence specification modeling bronze-standard data. TRUE nested models (conditional dependence given disease class); FALSE non-nested models (conditional independence given disease class). One BrS slice. regression do_reg_Eti TRUE etiology regression. means let etiology fractions vary explanatory variables. FALSE otherwise; do_reg_FPR vector whose names represent slices bronze-standard data. slice BrS measurements, TRUE false positive rate regression. means false positive rates, estimatable controls, can vary covariates; FALSE otherwise. is_discrete_predictor list names \"Eti\", names every slice bronze-standard data. TRUE predictors discrete; FALSE otherwise.","code":""},{"path":"/reference/assign_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interpret the specified model structure — assign_model","text":"assign_model modified check data conformable specified model.","code":""},{"path":"/reference/assign_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpret the specified model structure — assign_model","text":"","code":"cause_list <- c(LETTERS[1:6])  J.BrS <- 6 model_options_no_reg <- list( likelihood   = list(   cause_list = cause_list,   k_subclass = 2,   Eti_formula = ~-1,    # no covariate for the etiology regression   FPR_formula = list(     MBS1 =   ~-1)         # no covariate for the subclass weight regression ), use_measurements = c(\"BrS\"),  # use bronze-standard data only for model estimation. prior= list(   Eti_prior = overall_uniform(1,cause_list),    # Dirichlet(1,...,1) prior for the etiology.   TPR_prior  = list(BrS = list(     info  = \"informative\", # informative prior for TPRs     input = \"match_range\",      # specify the informative prior for TPRs by specifying a plausible range.     val = list(MBS1 = list(up =  list(rep(0.99,J.BrS)),      # upper ranges: matched to 97.5% quantile of a Beta prior                            low = list(rep(0.55,J.BrS))))                            # lower ranges: matched to 2.5% quantile of a Beta prior   )   ) ) )      data(\"data_nplcm_noreg\")  assign_model(model_options_no_reg,data_nplcm_noreg) #> $num_slice #> MBS MSS MGS  #>   1   0   0  #>  #> $nested #> [1] TRUE #>  #> $regression #> $regression$do_reg_Eti #> [1] FALSE #>  #> $regression$do_reg_FPR #>  MBS1  #> FALSE  #>  #> $regression$is_discrete_predictor #> $regression$is_discrete_predictor$Eti #> [1] FALSE #>  #> $regression$is_discrete_predictor$FPR #>  MBS1  #> FALSE  #>  #>  #>  #> $BrS_grp #> [1] FALSE #>  #> $SS_grp #> [1] FALSE #>"},{"path":"/reference/baker.html","id":null,"dir":"Reference","previous_headings":"","what":"baker: Bayesian Analytic Kit for\nEtiology Research — baker","title":"baker: Bayesian Analytic Kit for\nEtiology Research — baker","text":"baker designed disease etiology studies case-control data multiple sources measurements potential errors. interested estimating population etiology pie (vector fractions sum one), probability cause particular individual case, try baker.","code":""},{"path":"/reference/baker.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"baker: Bayesian Analytic Kit for\nEtiology Research — baker","text":"baker implements hierarchical Bayesian models infer disease etiology multivariate binary data. created baker catalyze effective communications analysts practicing clinicians vital success etiology studies. baker package offers modules Import tidy PERCH data (study motivates creation package), Transform, explore data, Specify, automatically generate model files, fit models (npLCM), Store visualize posterior summaries communicating scientific findings, Check compare fitted models. baker implemented models dependent measurements given disease status, regression analyses etiology, multiple imperfect measurements, different priors true positive rates among cases differential measurement characteristics, multiple-pathogen etiology. Scientists Pneumonia Etiology Research Child Health (PERCH) study usually refer etiology distribution \"population etiology pie\" \"individual etiology pie\" compositional nature, hence name package (baking pie).","code":""},{"path":"/reference/baker.html","id":"baker-functions","dir":"Reference","previous_headings":"","what":"baker functions","title":"baker: Bayesian Analytic Kit for\nEtiology Research — baker","text":"nplcm()","code":""},{"path":[]},{"path":"/reference/beta_parms_from_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Pick parameters in the Beta distribution to match the specified range — beta_parms_from_quantiles","title":"Pick parameters in the Beta distribution to match the specified range — beta_parms_from_quantiles","text":"beta_parms_from_quantiles produces prior Beta parameters true positive rates (TPR)","code":""},{"path":"/reference/beta_parms_from_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pick parameters in the Beta distribution to match the specified range — beta_parms_from_quantiles","text":"","code":"beta_parms_from_quantiles(   q,   p = c(0.025, 0.975),   precision = 0.001,   derivative.epsilon = 0.001,   start.with.normal.approx = TRUE,   start = c(1, 1),   plot = FALSE )"},{"path":"/reference/beta_parms_from_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pick parameters in the Beta distribution to match the specified range — beta_parms_from_quantiles","text":"q vector lower upper bounds, Beta distribution quantiles specified p. example, q=c(0.5,0.99) p lower upper quantiles range one wants specify. precision Approximation precisions. derivative.epsilon Precision calculating derivative. start..normal.approx Default TRUE, normal approximation. start Starting values beta parameters. plot Default FALSE suppress plotting beta density, otherwise, set TRUE.","code":""},{"path":"/reference/beta_parms_from_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pick parameters in the Beta distribution to match the specified range — beta_parms_from_quantiles","text":"list containing selected Beta parameters , b. elements list include details computations involved finding b.","code":""},{"path":"/reference/beta_parms_from_quantiles.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pick parameters in the Beta distribution to match the specified range — beta_parms_from_quantiles","text":"http://www.medicine.mcgill.ca/epidemiology/Joseph/PBelisle/BetaParmsFromQuantiles.html","code":""},{"path":"/reference/beta_parms_from_quantiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pick parameters in the Beta distribution to match the specified range — beta_parms_from_quantiles","text":"","code":"beta_parms_from_quantiles(c(0.5,0.99)) #> $a #> [1] 5.967161 #>  #> $b #> [1] 1.261544 #>  #> $last.change #> [1] -1.493917e-04 -6.358114e-05 #>  #> $niter #> [1] 5 #>  #> $q #> [1] 0.50 0.99 #>  #> $p #> [1] 0.025 0.975 #>  #> $p.check #> [1] 0.025 0.975 #>"},{"path":"/reference/beta_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot beta density — beta_plot","title":"Plot beta density — beta_plot","text":"Plot beta density","code":""},{"path":"/reference/beta_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot beta density — beta_plot","text":"","code":"beta_plot(a, b)"},{"path":"/reference/beta_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot beta density — beta_plot","text":"first parameter b second parameter","code":""},{"path":"/reference/beta_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot beta density — beta_plot","text":"None","code":""},{"path":"/reference/beta_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot beta density — beta_plot","text":"","code":"beta_plot(2,2)"},{"path":"/reference/bin2dec.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a 0/1 binary-coded sequence into decimal digits — bin2dec","title":"Convert a 0/1 binary-coded sequence into decimal digits — bin2dec","text":"Useful try list binary patterns. One can group binary sequences according equivalent decimal values.","code":""},{"path":"/reference/bin2dec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a 0/1 binary-coded sequence into decimal digits — bin2dec","text":"","code":"bin2dec(binary_vector)"},{"path":"/reference/bin2dec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a 0/1 binary-coded sequence into decimal digits — bin2dec","text":"binary_vector binary number","code":""},{"path":"/reference/bin2dec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a 0/1 binary-coded sequence into decimal digits — bin2dec","text":"decimal number","code":""},{"path":"/reference/bin2dec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a 0/1 binary-coded sequence into decimal digits — bin2dec","text":"","code":"bin2dec(c(1,0,1)) #> [1] 5"},{"path":"/reference/check_dir_create.html","id":null,"dir":"Reference","previous_headings":"","what":"check existence and create folder if non-existent — check_dir_create","title":"check existence and create folder if non-existent — check_dir_create","text":"check existence create folder non-existent","code":""},{"path":"/reference/check_dir_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check existence and create folder if non-existent — check_dir_create","text":"","code":"check_dir_create(path)"},{"path":"/reference/check_dir_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check existence and create folder if non-existent — check_dir_create","text":"path Folder path check create .","code":""},{"path":"/reference/check_dir_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check existence and create folder if non-existent — check_dir_create","text":"","code":"check_dir_create(tempdir()) #> NULL"},{"path":"/reference/clean_combine_subsites.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine subsites in raw PERCH data set — clean_combine_subsites","title":"Combine subsites in raw PERCH data set — clean_combine_subsites","text":"Actual PERCH data set, study site may multiple subsites. clean_combine_subsites combines study subjects site.","code":""},{"path":"/reference/clean_combine_subsites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine subsites in raw PERCH data set — clean_combine_subsites","text":"","code":"clean_combine_subsites(raw_meas_dir, subsites_list, newsites_vec)"},{"path":"/reference/clean_combine_subsites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine subsites in raw PERCH data set — clean_combine_subsites","text":"raw_meas_dir file path raw data file (.csv) subsites_list list subsite group names. group vector subsites combined newsites_vec vector new site names. length \"subsites_list\"","code":""},{"path":"/reference/clean_combine_subsites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine subsites in raw PERCH data set — clean_combine_subsites","text":"data frame combined sites","code":""},{"path":"/reference/clean_perch_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean PERCH data — clean_perch_data","title":"Clean PERCH data — clean_perch_data","text":"clean_perch_data transforms raw data table (row subjects, column variables - named {pathogen name}_{specimen}{test} lab tests covariates) list. designed PERCH data format.","code":""},{"path":"/reference/clean_perch_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean PERCH data — clean_perch_data","text":"","code":"clean_perch_data(clean_options)"},{"path":"/reference/clean_perch_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean PERCH data — clean_perch_data","text":"clean_options list options cleaning PERCH data. elements defined follows: raw_meas_dir: file path raw data; case_def: Variable name raw data case definition; case_def_val: value case definition; ctrl_def: Variable name raw data control definition; ctrl_def_val: value control definition; X_strat: vector variable names stratifying data perform SEPARATE analyses; X_strat_val: list values X_strat. output data individuals identical(X_strat,X_strat_val)==TRUE. perform analysis single site, say \"02GAM\", use X_strat=\"newSITE\" X_strat_val=list(\"02GAM\"); BrS_objects: list BrS objects built make_meas_object(); SS_objects: list SS objects built make_meas_object(); X_extra: vector covariate names regression visualization; patho_taxo_dir: file path pathogen category taxonomy information (.csv). information complete possible particular analysis. , pathogen without taxonomy information assigned bacterial viral groups (see plot_group_etiology()); See assign_taxo_cause_list() requires taxonomy information..","code":""},{"path":"/reference/clean_perch_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean PERCH data — clean_perch_data","text":"List: list(Mobs,Y,X) Mobs list bronze- (MBS), silver- (MSS), gold-standard (MGS, available) measurements. See formats measurements extract_data_raw(). Y 1 case; 0 control; X Data frame covariates cases controls. covariate names specified X_extra; function re-order pathogens silver-standard data.","code":""},{"path":[]},{"path":"/reference/combine_data_nplcm.html","id":null,"dir":"Reference","previous_headings":"","what":"combine multiple data_nplcm (useful when simulating data from regression models) — combine_data_nplcm","title":"combine multiple data_nplcm (useful when simulating data from regression models) — combine_data_nplcm","text":"combine multiple data_nplcm (useful simulating data regression models)","code":""},{"path":"/reference/combine_data_nplcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"combine multiple data_nplcm (useful when simulating data from regression models) — combine_data_nplcm","text":"","code":"combine_data_nplcm(data_nplcm_list)"},{"path":"/reference/combine_data_nplcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"combine multiple data_nplcm (useful when simulating data from regression models) — combine_data_nplcm","text":"data_nplcm_list list data_nplcm nplcm()","code":""},{"path":[]},{"path":"/reference/combine_data_nplcm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"combine multiple data_nplcm (useful when simulating data from regression models) — combine_data_nplcm","text":"","code":"N=100 Y = rep(c(1,0),times=50) # simulate two cases and two controls. out_list <- vector(\"list\",length=N) J = 3                          # number of causes cause_list = c(LETTERS[1:J])   # cause list K = 2                          # number of subclasses lambda = c(.8,.2)                # subclass weights for control group eta = c(.9,.1)                   # subclass weights for case group  for (i in 1:N){   #setup parameters for the present individual:   set_parameter <- list(     cause_list      = cause_list,     etiology        = c(0.5,0.2,0.3), # only meaningful for cases     pathogen_BrS    = LETTERS[1:J],     pathogen_SS     = LETTERS[1:2],     meas_nm         = list(MBS = c(\"MBS1\"),MSS=c(\"MSS1\")),     Lambda          = lambda,         # for BrS     Eta             = t(replicate(J,eta)),  # case subclass weight for BrS     PsiBS           = cbind(c(0.15,0.3,0.35),                             c(0.25,0.2,0.15)), # FPR     PsiSS           = cbind(rep(0,J),rep(0,J)),     ThetaBS         = cbind(c(0.95,0.9,0.85),    # TPR                             c(0.95,0.9,0.85)),     ThetaSS         = cbind(c(0.25,0.10),                             c(0.25,0.10)),     Nd      =     1,     Nu      =     1   )   simu_out   <- simulate_nplcm(set_parameter)   out <- simu_out$data_nplcm   out_list[[i]] <- out }  # extract cases and controls and combine all the data into one: data_nplcm_list <- lapply(1:N, function(s) subset_data_nplcm_by_index(out_list[[s]],2-Y[s])) data_nplcm_unordered      <- combine_data_nplcm(data_nplcm_list)"},{"path":"/reference/compute_logOR_single_cause.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate marginal log odds ratios — compute_logOR_single_cause","title":"Calculate marginal log odds ratios — compute_logOR_single_cause","text":"works single-agent causes","code":""},{"path":"/reference/compute_logOR_single_cause.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate marginal log odds ratios — compute_logOR_single_cause","text":"","code":"compute_logOR_single_cause(set_parameter)"},{"path":"/reference/compute_logOR_single_cause.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate marginal log odds ratios — compute_logOR_single_cause","text":"set_parameter True model parameters npLCM specification: cause_list vector disease class names among cases (since causes multi-agent (e.g., multiple pathogens may cause individual case's pneumonia), length longer total number unique causative agents) etiology vector proportions sum 100 percent pathogen_BrS vector putative causative agents' names measured bronze-standard (BrS) data. function simulates one slice defined specimentestpathogen pathogen_SS vector pathogen names measured silver-standard (SS) data. meas_nm list specimentest names e.g., list(MBS = c(\"NPPCR\"),MSS=\"BCX\") nasopharyngeal (NP) specimen tested polymerase chain reaction (PCR) - NPPCR blood (B) tested culture (Cx) - BCX Lambda controls' subclass weights \\(\\nu_1, \\nu_2, \\ldots, \\nu_K\\) vector K probabilities sum 1. Eta    matrix dimension length(cause_list) K; row represents disease class (among cases); values row subclass weights \\(\\eta_1, \\eta_2, \\ldots, \\eta_K\\) disease class, needs sum one. Wu et al. 2016 (JRSS-C), subclass weights across disease classes across rows. simulating data, one can specify rows distinct subclass weights - matter whether can recover parameters (possible cases' true disease classes observed) PsiBS/PsiSS False positive rates Bronze-Standard data Silver-Standard data. example, rows PsiBS correspond dimension particular slice BrS measures, e.g., 10 10 causative agents measured NPPCR; columns correspond K subclasses; generically, dimension J K PsiSS supposed vector zeros (perfect specificity silver-standard measures). ThetaBS/ThetaSS  True positive rates \\(\\Theta\\) Bronze-Standard data Silver-Standard data. Dimension J K (can contain NA total number causative agents measured BrS SS exceeds measured causative agents SS. example, PERCH study, nasopharyngeal polymerase chain reaction (NPPCR; bronze-standard) may target 30 distinct pathogens, blood culture (BCX; silver-standard) may target subset 30, specify NA ThetaSSfor pathogens targeted BCX). Nu number control subjects Nd number case subjects","code":""},{"path":"/reference/compute_logOR_single_cause.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate marginal log odds ratios — compute_logOR_single_cause","text":"matrix log odds ratio. See example figure showing pairwise odds ratios cases (upper right, solid lines) controls (lower left, broken lines) first subclass weight increases 0 1. Pairwise independence represented dotted horizontal lines reference.","code":""},{"path":"/reference/compute_logOR_single_cause.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate marginal log odds ratios — compute_logOR_single_cause","text":"","code":"rm(list=ls()) K.true  <- 2   # no. of latent subclasses in actual simulation.                 # If eta = c(1,0), effectively, it is K.true=1 J       <- 5   # no. of pathogens. N       <- 500 # no. of cases/controls.  col_seq_cause <-  c(\"#DB9D85\",\"#A2B367\",\"#47BEA2\", \"#70B3DA\",\"#CD99D8\")#colorspace::rainbow_hcl(5, start = 30, end = 300)  subclass_mix_seq <- seq(0,1,by=0.05) res      <- array(NA,c(J,J,length(subclass_mix_seq))) res_cond <- array(NA,c(J,J,length(subclass_mix_seq),J))  it <- layout(matrix(1:J^2,nrow=J,ncol=J,byrow=TRUE),             heights = rep(3,J),             widths  = rep(3,J))   par(oma=c(8,10,8,3));    pch_seq_cause <- LETTERS[1:J] lty_seq_cause <- 1+(1:J) pch_pos_seq   <- c(0.01); gap = 0.15 adj_seq <- c(0.15,0.5,0.85) # for roman numerals: cex1       <- 2 cex_label1 <- 1 cex2       <- 2 cex_label2 <- 2 cex_margin_marks <- 2  for (scn in c(1,2,3)){  for (iter in seq_along(subclass_mix_seq)){    curr_mix <- subclass_mix_seq[iter]    lambda <- c(curr_mix,1-curr_mix)    eta    <- c(curr_mix,1-curr_mix)     # if it is c(1,0),then it is conditional independence model, and    # only the first column of parameters in PsiBS, ThetaBS matter!        seed_start <- 20150923        # set fixed simulation sequence:    set.seed(seed_start)        if (scn == 3){      ThetaBS_withNA <- cbind(c(0.95,0.9,0.1,0.5,0.5),                              c(0.95,0.1,0.9,0.5,0.5))      PsiBS_withNA   <- cbind(c(0.4,0.4,0.05,0.2,0.2),                              c(0.05,0.05,0.4,0.05,0.05))    }        if (scn == 2){      ThetaBS_withNA <- cbind(c(0.95,0.5,0.5,0.5,0.5),                              c(0.95,0.5,0.5,0.5,0.5))      PsiBS_withNA   <- cbind(c(0.4,0.4,0.05,0.2,0.2),                              c(0.05,0.05,0.4,0.05,0.05))    }        if (scn == 1){      ThetaBS_withNA <- cbind(c(0.95,0.5,0.5,0.5,0.5),                              c(0.95,0.5,0.5,0.5,0.5))      PsiBS_withNA   <- cbind(c(0.3,0.3,0.15,0.2,0.2),                              c(0.15,0.15,0.3,0.05,0.05))    }        # the following paramter names are set using names in the 'baker' package:    set_parameter0 <- list(      cause_list      = c(LETTERS[1:J]),      etiology        = c(0.5,0.2,0.15,0.1,0.05), #same length as cause_list      #etiology        = rep(0.2,J), #same length as cause_list      pathogen_BrS    = LETTERS[1:J],      meas_nm         = list(MBS = c(\"MBS1\")),      Lambda          = lambda,              #ctrl mix      Eta             = t(replicate(J,eta)), #case mix, row number equal to Jcause.      PsiBS           = PsiBS_withNA,      ThetaBS         = ThetaBS_withNA,      Nu      =     N, # control size.      Nd      =     N  # case size.    )        res[,,iter] <- round(compute_logOR_single_cause(set_parameter0),2)        for (pick in 1:J){      set_parameter <- set_parameter0      set_parameter$ThetaBS <- set_parameter0$PsiBS      set_parameter$ThetaBS[pick,] <- set_parameter0$ThetaBS[pick,]      set_parameter$etiology <- rep(0,J); set_parameter$etiology[pick] <- 1      res_cond[,,iter,pick] <- round(compute_logOR_single_cause(set_parameter),2)    }  }    ind <- sapply(c(0,0.5,1),function(x) which(subclass_mix_seq==x))  logOR_lim <- c(-2.15,2.15)  col_seq <- c(\"dodgerblue2\",\"orange\")  logOR_seq <- log(c(0.25,0.5,1,2,4))  pick_one <- 3   print(paste0(\"==Shading pairs of \",pch_seq_cause[pick_one],\" and others.===\"))  for (j in 1:J){    for (l in 1:J){            par(mar=c(0,0,0,0));       if (j==J){        par(mar=c(0,0,0,0))      }      if (l%%J==0){        par(mar=c(0,0,0,1))       }      if (l%%J==1){        par(mar=c(0,1,0,0))      }      if (!(j==l)){        plot(res[j,l,],type=\"l\",xlab=\"\",ylab=\"\",             ylim=logOR_lim, lwd=5,             xaxt=\"n\",             yaxt=\"n\",             col=col_seq[1+(l>j)],             #lty=c(2,1)[1+(l>j)],             lty=1,             bty=\"n\"        )        box(col=\"lightgray\")        abline(h=0,col=\"lightgray\",lwd=3,lty=3)                if (j<l){          matplot(res_cond[j,l,,],type=\"l\",add=TRUE,pch=LETTERS[1:J],lwd=2,lty=2,                  col=col_seq_cause)        }        lab_ord <- c(j,l); if (j>l){lab_ord <- rev(lab_ord)}        mtext(paste0(\"(\",set_parameter$pathogen_BrS[lab_ord[1]],\",\",                      set_parameter$pathogen_BrS[lab_ord[2]],\")\"),               side=3, adj=0.1,line=-2)                if (l%%J==1){          axis(2,at = logOR_seq,                labels = round(exp(logOR_seq),1),               las=2,cex.axis=cex1)        }                if (l%%J==0){          axis(4,at = logOR_seq,                labels = round(exp(logOR_seq),1),               las=2,cex.axis=cex1)        }                if (j==J){          axis(1,at=seq_along(subclass_mix_seq)[ind],          labels=rep(\"\",length(ind)),cex.axis = cex1,las=1)          axis(1,at=seq_along(subclass_mix_seq)[ind]+c(1,rep(0,length(ind)-2),-1),          labels=subclass_mix_seq[ind],cex.axis = cex1,las=1,tick=FALSE)        }        if (j==1){          axis(3,at=seq_along(subclass_mix_seq)[ind],          labels=rep(\"\",length(ind)),cex.axis = cex1,las=1)          axis(3,at=seq_along(subclass_mix_seq)[ind]+c(1,rep(0,length(ind)-2),-1),          labels=subclass_mix_seq[ind],cex.axis = cex1,las=1,tick=FALSE)        }        if (j==5 & l==1){          mtext(expression(atop(\"Odds Ratio\",\"(log-scale)\")), side = 2, line = 4,                 cex=cex_label1, las=2)        }        if (j==5){          mtext(expression(lambda[o]),side=1,line=4,cex=cex_label1)        }                if ((j<l) && (l==pick_one | j==pick_one )){          # add shading cells for oen picked pathogen among cases:          color <- rgb(190, 190, 190, alpha=80, maxColorValue=255)          rect(par(\"usr\")[1], par(\"usr\")[3], par(\"usr\")[2],                par(\"usr\")[4], density = 100, col = color)                    matplot(res_cond[j,l,,],type=\"l\",add=TRUE,lwd=2,col=col_seq_cause,lty=lty_seq_cause)          for (ell in 1:J){            where_add_letter <- quantile(seq_along(subclass_mix_seq),pch_pos_seq+gap*ell)            points(where_add_letter, res_cond[j,l,where_add_letter,ell], pch=pch_seq_cause[ell])          }          mtext(paste0(\"(\",set_parameter$pathogen_BrS[lab_ord[1]],\",\",                        set_parameter$pathogen_BrS[lab_ord[2]],\")\"),                 side=3, adj=0.1,line=-2)        }              }else{                plot(1, type=\"n\", axes=FALSE, xlab=\"\", ylab=\"\", bty=\"n\",             xlim=c(0,1),ylim=c(0,1))                        if (j==3){          text(labels=expression(CASES%up%\"\"),x=.7,               y=0.55,srt=-49,col=col_seq[2],cex=1.8,adj=0.5,font=4)          text(labels=expression(CONTROLS%down%\"\"),x=.42,               y=0.38,srt=-49,col=col_seq[1],cex=1.8,adj=0.5,font=4)        }        if (j!=1 & j!=J){          dg <- par(\"usr\")           segments(dg[1],dg[4],dg[2],dg[3], col='lightgray',lwd=3)        }        if (j==J){          legend(\"top\",LETTERS[1:J],lty=2,col=col_seq_cause,cex = 1.5,lwd=2,                 bty=\"n\",horiz=FALSE)        }      }    }  } } #> [1] \"==Shading pairs of C and others.===\"  #> [1] \"==Shading pairs of C and others.===\"  #> [1] \"==Shading pairs of C and others.===\""},{"path":"/reference/compute_marg_PR_nested_reg.html","id":null,"dir":"Reference","previous_headings":"","what":"compute positive rates for nested model with subclass mixing weights that are the same across\nJcause classes for each person (people may have different weights.) — compute_marg_PR_nested_reg","title":"compute positive rates for nested model with subclass mixing weights that are the same across\nJcause classes for each person (people may have different weights.) — compute_marg_PR_nested_reg","text":"array version function (compute_marg_PR_nested_reg_array) used plot_etiology_regression","code":""},{"path":"/reference/compute_marg_PR_nested_reg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute positive rates for nested model with subclass mixing weights that are the same across\nJcause classes for each person (people may have different weights.) — compute_marg_PR_nested_reg","text":"","code":"compute_marg_PR_nested_reg(ThetaBS, PsiBS, pEti_mat, subwt_mat, case, template)"},{"path":"/reference/compute_marg_PR_nested_reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute positive rates for nested model with subclass mixing weights that are the same across\nJcause classes for each person (people may have different weights.) — compute_marg_PR_nested_reg","text":"ThetaBS True positive rates JBrS measures (rows) among K subclasses (columns) PsiBS False positive rates; dimension pEti_mat matrix etiology pies N subjects (rows) Jcause causes (columns) rows sum ones. subwt_mat matrix subclass weights cases controls. N K. Rows sum ones. case N-vector 1s (cases) 0s (controls) template binary matrix Jcause+1 rows (Jcause classes cases 1 class controls) JBrS columns Bronze-standard measurement (say, pick one type/slice). ones row indicate measurements show frequently cases given cause.","code":""},{"path":"/reference/compute_marg_PR_nested_reg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute positive rates for nested model with subclass mixing weights that are the same across\nJcause classes for each person (people may have different weights.) — compute_marg_PR_nested_reg","text":"matrix values 0 1 (need row sums ones); dimension (number subjects, dimension bronze-standard measurement slice).","code":""},{"path":"/reference/compute_marg_PR_nested_reg_array.html","id":null,"dir":"Reference","previous_headings":"","what":"compute positive rates for nested model with subclass mixing weights that are the same across\nJcause classes for each person (people may have different weights.) — compute_marg_PR_nested_reg_array","title":"compute positive rates for nested model with subclass mixing weights that are the same across\nJcause classes for each person (people may have different weights.) — compute_marg_PR_nested_reg_array","text":"array-version compute_marg_PR_nested_reg. used plot_etiology_regression","code":""},{"path":"/reference/compute_marg_PR_nested_reg_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute positive rates for nested model with subclass mixing weights that are the same across\nJcause classes for each person (people may have different weights.) — compute_marg_PR_nested_reg_array","text":"","code":"compute_marg_PR_nested_reg_array(   ThetaBS_array,   PsiBS_array,   pEti_mat_array,   subwt_mat_array,   case,   template )"},{"path":"/reference/compute_marg_PR_nested_reg_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute positive rates for nested model with subclass mixing weights that are the same across\nJcause classes for each person (people may have different weights.) — compute_marg_PR_nested_reg_array","text":"ThetaBS_array array : True positive rates JBrS measures (rows) among K subclasses (columns) PsiBS_array array : False positive rates; dimension pEti_mat_array array : matrix etiology pies N subjects (rows) Jcause causes (columns) rows sum ones. subwt_mat_array array : matrix subclass weights cases controls. N K. Rows sum ones. case N-vector 1s (cases) 0s (controls) template binary matrix Jcause+1 rows (Jcause classes cases 1 class controls) JBrS columns Bronze-standard measurement (say, pick one type/slice). ones row indicate measurements show frequently cases given cause.","code":""},{"path":"/reference/compute_marg_PR_nested_reg_array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute positive rates for nested model with subclass mixing weights that are the same across\nJcause classes for each person (people may have different weights.) — compute_marg_PR_nested_reg_array","text":"array : matrix values 0 1 (need row sums ones); dimension (number subjects, dimension bronze-standard measurement slice).","code":""},{"path":"/reference/create_bugs_regressor_Eti.html","id":null,"dir":"Reference","previous_headings":"","what":"create regressor summation equation used in regression for etiology — create_bugs_regressor_Eti","title":"create regressor summation equation used in regression for etiology — create_bugs_regressor_Eti","text":"create_bugs_regressor_Eti creates linear product coefficients row design matrix used regression","code":""},{"path":"/reference/create_bugs_regressor_Eti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create regressor summation equation used in regression for etiology — create_bugs_regressor_Eti","text":"","code":"create_bugs_regressor_Eti(   n,   dm_nm = \"dm_Eti\",   b_nm = \"betaEti\",   ind_nm = \"j\",   sub_ind_nm = \"k\" )"},{"path":"/reference/create_bugs_regressor_Eti.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create regressor summation equation used in regression for etiology — create_bugs_regressor_Eti","text":"n length coefficients dm_nm name design matrix; default \"dm_Eti\" b_nm name coefficients; default \"betaEti\" ind_nm name coefficient iterator; default \"j\" sub_ind_nm name subject iterator; default \"k\"","code":""},{"path":"/reference/create_bugs_regressor_Eti.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create regressor summation equation used in regression for etiology — create_bugs_regressor_Eti","text":"character string linear product form","code":""},{"path":"/reference/create_bugs_regressor_FPR.html","id":null,"dir":"Reference","previous_headings":"","what":"create regressor summation equation used in regression for FPR — create_bugs_regressor_FPR","title":"create regressor summation equation used in regression for FPR — create_bugs_regressor_FPR","text":"create_bugs_regressor_FPR creates linear product coefficients row design matrix used regression","code":""},{"path":"/reference/create_bugs_regressor_FPR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create regressor summation equation used in regression for FPR — create_bugs_regressor_FPR","text":"","code":"create_bugs_regressor_FPR(   n,   dm_nm = \"dm_FPR\",   b_nm = \"b\",   ind_nm = \"j\",   sub_ind_nm = \"k\" )"},{"path":"/reference/create_bugs_regressor_FPR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create regressor summation equation used in regression for FPR — create_bugs_regressor_FPR","text":"n length coefficients dm_nm name design matrix; default \"dm_FPR\" b_nm name coefficients; default \"b\" ind_nm name coefficient iterator; default \"j\" sub_ind_nm name subject iterator; default \"k\"","code":""},{"path":"/reference/create_bugs_regressor_FPR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create regressor summation equation used in regression for FPR — create_bugs_regressor_FPR","text":"character string linear product form","code":""},{"path":"/reference/data_nplcm_noreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated dataset that is structured in the format necessary for an nplcm() with regression — data_nplcm_noreg","title":"Simulated dataset that is structured in the format necessary for an nplcm() with regression — data_nplcm_noreg","text":"Data set illustrating regression functionalities","code":""},{"path":"/reference/data_nplcm_noreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated dataset that is structured in the format necessary for an nplcm() with regression — data_nplcm_noreg","text":"","code":"data(\"data_nplcm_noreg\")"},{"path":"/reference/data_nplcm_noreg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated dataset that is structured in the format necessary for an nplcm() with regression — data_nplcm_noreg","text":"list containing three items Mobs BrS level measurements: N = 600 (half cases half controls); one slice BrS measurements (6 dimensional, -F); one slice SS measurements (2 dimensional, B) Y case-control status","code":""},{"path":"/reference/data_nplcm_reg_nest.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated dataset that is structured in the format necessary for an nplcm() with regression — data_nplcm_reg_nest","title":"Simulated dataset that is structured in the format necessary for an nplcm() with regression — data_nplcm_reg_nest","text":"Data set illustrating regression functionalities","code":""},{"path":"/reference/data_nplcm_reg_nest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated dataset that is structured in the format necessary for an nplcm() with regression — data_nplcm_reg_nest","text":"","code":"data(\"data_nplcm_reg_nest\")"},{"path":"/reference/data_nplcm_reg_nest.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated dataset that is structured in the format necessary for an nplcm() with regression — data_nplcm_reg_nest","text":"list containing three items Mobs BrS level measurements: N = 1,200 (half cases half controls); one slice BrS measurements (6 dimensional, -F); one slice SS measurements (2 dimensional, B) Y case-control status X matrix covariates (N 4); columns: SITE (1 2, 600 subjects), DATE (index 1:300), std_date (standardized DATE), ENRLDATE (actual dates)","code":""},{"path":"/reference/delete_start_with.html","id":null,"dir":"Reference","previous_headings":"","what":"Deletes a pattern from the start of a string, or each of a vector of strings. — delete_start_with","title":"Deletes a pattern from the start of a string, or each of a vector of strings. — delete_start_with","text":"delete_start_with used clean column names raw data. example, R adds \"X\" start variable names. function deletes \"X_\"s column names. can happen raw data column names \"_CASE_ABX\". Check clean_perch_data() actual usage.","code":""},{"path":"/reference/delete_start_with.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deletes a pattern from the start of a string, or each of a vector of strings. — delete_start_with","text":"","code":"delete_start_with(s, vec)"},{"path":"/reference/delete_start_with.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deletes a pattern from the start of a string, or each of a vector of strings. — delete_start_with","text":"s pattern (single string) deleted start. vec vector strings unwanted starting strings (specified s).","code":""},{"path":"/reference/delete_start_with.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deletes a pattern from the start of a string, or each of a vector of strings. — delete_start_with","text":"string(s) deleted patterns start.","code":""},{"path":"/reference/delete_start_with.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deletes a pattern from the start of a string, or each of a vector of strings. — delete_start_with","text":"","code":"delete_start_with(\"X_\",c(\"X_hello\")) #> [1] \"hello\" delete_start_with(\"X_\",c(\"X_hello\",\"hello2\")) #> [1] \"hello\"  \"hello2\" delete_start_with(\"X_\",c(\"X_hello\",\"hello2\",\"X_hello3\")) #> [1] \"hello\"  \"hello2\" \"hello3\""},{"path":"/reference/dm_Rdate_Eti.html","id":null,"dir":"Reference","previous_headings":"","what":"Make etiology design matrix for dates with R format. — dm_Rdate_Eti","title":"Make etiology design matrix for dates with R format. — dm_Rdate_Eti","text":"dm_Rdate_Eti creates design matrices etiology regressions.","code":""},{"path":"/reference/dm_Rdate_Eti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make etiology design matrix for dates with R format. — dm_Rdate_Eti","text":"","code":"dm_Rdate_Eti(Rdate, Y, num_knots_Eti, basis_Eti = \"ncs\")"},{"path":"/reference/dm_Rdate_Eti.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make etiology design matrix for dates with R format. — dm_Rdate_Eti","text":"Rdate vector dates R format Y binary case/control status; 1 case; 0 controls num_knots_Eti number knots etiology regression basis_Eti type basis functions use etiology regression. can \"ncs\" (natural cubic splines) \"tprs\" (thin-plate regression splines). Default \"ncs\". \"tprs\" implemented later.","code":""},{"path":"/reference/dm_Rdate_Eti.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make etiology design matrix for dates with R format. — dm_Rdate_Eti","text":"Design matrix etiology regression: Z_Eti transformed design matrix etiology regression","code":""},{"path":"/reference/dm_Rdate_Eti.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make etiology design matrix for dates with R format. — dm_Rdate_Eti","text":"used model_options$likeihood$Eti_formula. example, one can specify : ~ AGECAT+HIV+dm_Rdate_Eti(ENRLDATE,Y,5)  call etiology regression intercept, main effects 'AGECAT' 'HIV', natural cubic spline bases 'ENRLDATE' using 5 knots defined 5 equal-probability-spaced sample quantiles.","code":""},{"path":[]},{"path":"/reference/dm_Rdate_FPR.html","id":null,"dir":"Reference","previous_headings":"","what":"Make FPR design matrix for dates with R format. — dm_Rdate_FPR","title":"Make FPR design matrix for dates with R format. — dm_Rdate_FPR","text":"dm_Rdate_FPR creates design matrices false positive rate regressions; can also used standardize dates.","code":""},{"path":"/reference/dm_Rdate_FPR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make FPR design matrix for dates with R format. — dm_Rdate_FPR","text":"","code":"dm_Rdate_FPR(Rdate, Y, effect = \"fixed\", num_knots_FPR = NULL)"},{"path":"/reference/dm_Rdate_FPR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make FPR design matrix for dates with R format. — dm_Rdate_FPR","text":"Rdate vector dates R format Y binary case/control status; 1 case; 0 controls effect design matrix \"random\" \"fixed\" effect; Default \"fixed\". specified \"fixed\", produces standardized R-format dates using control's mean standard deviation; specified \"random\", produces num_knots_FPR columns design matrix thin-plate regression splines (TPRS) fitting. One needs \"fixed\" \"random\" FPR regression formula model_options enable TPRS fitting. example, model_options$likelihood$FPR_formula can ~ AGECAT+HIV+dm_Rdate_FPR(ENRLDATE,Y,\"fixed\")+dm_Rdate_FPR(ENRLDATE,Y,\"random\",10) means FPR regression intercept, main effects 'AGECAT' 'HIV', TPRS bases 'ENRLDATE' using 10 knots placed 10 equal-probability-spaced sample quantiles. num_knots_FPR number knots FPR regression; default NULL accommodate fixed effect specification.","code":""},{"path":"/reference/dm_Rdate_FPR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make FPR design matrix for dates with R format. — dm_Rdate_FPR","text":"Design matrix FPR regression: Z_FPR_ctrl transformed design matrix FPR regression controls Z_FPR_case transformed design matrix borrowing FPR regression controls cases. obtained using control-standardization, square-root following matrix (\\(\\Omega\\)]) (\\(j_1\\),\\(j_2\\)) element $$\\Omega_{j_1j_2}=\\|knots_{j_1}-knots_{j_2}\\|^3$$.","code":""},{"path":[]},{"path":"/reference/expit.html","id":null,"dir":"Reference","previous_headings":"","what":"expit function — expit","title":"expit function — expit","text":"expit function","code":""},{"path":"/reference/expit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"expit function — expit","text":"","code":"expit(x)"},{"path":"/reference/expit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"expit function — expit","text":"x real number","code":""},{"path":"/reference/expit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"expit function — expit","text":"Probability 0 1","code":""},{"path":"/reference/expit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"expit function — expit","text":"","code":"expit(-0.1) #> [1] 0.4750208"},{"path":"/reference/extract_data_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Raw PERCH Data\n\nextract_data_raw imports and converts the raw data to analyzable format — extract_data_raw","title":"Import Raw PERCH Data\n\nextract_data_raw imports and converts the raw data to analyzable format — extract_data_raw","text":"Import Raw PERCH Data extract_data_raw imports converts raw data analyzable format","code":""},{"path":"/reference/extract_data_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Raw PERCH Data\n\nextract_data_raw imports and converts the raw data to analyzable format — extract_data_raw","text":"","code":"extract_data_raw(   dat_prepared,   strat_nm,   strat_val,   meas_object,   extra_covariates = NULL )"},{"path":"/reference/extract_data_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Raw PERCH Data\n\nextract_data_raw imports and converts the raw data to analyzable format — extract_data_raw","text":"dat_prepared data set prepared clean_perch_data. strat_nm vector covariate names separately extract data. example, PERCH data cleaning, X = c(\"newSITE\",\"CASECONT\"). strat_val list covariate values stratify data. element corresponds elements X. example, PERCH data cleaning, Xval = list(\"02GAM\",\"1\"). meas_object list bronze-standard silver-standard measurement objects made function make_meas_object(). extra_covariates vector covariate name regression purposes. default NULL, means reading covariate.","code":""},{"path":"/reference/extract_data_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Raw PERCH Data\n\nextract_data_raw imports and converts the raw data to analyzable format — extract_data_raw","text":"list data. Mobs MBS list Bronze-Standard (BrS) measurements. names list take form specimen_test. element list data frame. rows data frame subjects; columns measured pathogens. MSS list Silver-Standard (SS) measurements. formats MBS . MGS list Gold-Standard (GS) measurements. equals NULL GS data exist. X data frame columns specified extra_covariates.","code":""},{"path":[]},{"path":"/reference/getPckg.html","id":null,"dir":"Reference","previous_headings":"","what":"Get package from CRAN website — getPckg","title":"Get package from CRAN website — getPckg","text":"Get package CRAN website","code":""},{"path":"/reference/getPckg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get package from CRAN website — getPckg","text":"","code":"getPckg(pckg)"},{"path":"/reference/getPckg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get package from CRAN website — getPckg","text":"pckg package name","code":""},{"path":"/reference/getPckg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get package from CRAN website — getPckg","text":"None","code":""},{"path":"/reference/getPckg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get package from CRAN website — getPckg","text":"","code":"if (FALSE) { getPckg(\"ggplot2\") }"},{"path":"/reference/get_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain coverage status from a result folder — get_coverage","title":"Obtain coverage status from a result folder — get_coverage","text":"Obtain coverage status result folder","code":""},{"path":"/reference/get_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain coverage status from a result folder — get_coverage","text":"","code":"get_coverage(DIR_NPLCM, truth)"},{"path":"/reference/get_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain coverage status from a result folder — get_coverage","text":"DIR_NPLCM Path Bayesian results stored truth True etiologic fraction vector (must sum 1)  used generate data.","code":""},{"path":"/reference/get_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain coverage status from a result folder — get_coverage","text":"logic vector length truth. 1 covered; 0 .","code":""},{"path":"/reference/get_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain coverage status from a result folder — get_coverage","text":"","code":"if (FALSE) { DIR_NPLCM <- \"~/downloads/rep_1_kfit_2/\"   truth     <- c(0.5,0.2,0.15,0.1,0.05) get_coverage(DIR_NPLCM,truth) }"},{"path":"/reference/get_direct_bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain direct bias that measure the discrepancy of a posterior\ndistribution of pie and a true pie. — get_direct_bias","title":"Obtain direct bias that measure the discrepancy of a posterior\ndistribution of pie and a true pie. — get_direct_bias","text":"Obtain direct bias measure discrepancy posterior distribution pie true pie.","code":""},{"path":"/reference/get_direct_bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain direct bias that measure the discrepancy of a posterior\ndistribution of pie and a true pie. — get_direct_bias","text":"","code":"get_direct_bias(DIR_list, truth = NULL, silent = FALSE)"},{"path":"/reference/get_direct_bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain direct bias that measure the discrepancy of a posterior\ndistribution of pie and a true pie. — get_direct_bias","text":"DIR_list list  Bayesian results stored truth True etiologic fraction vector (must sum 1)  used generate data; Default NULL. vector supplied, first path DIR_LIST used. silent Default FALSE. suppress printing messages, set TRUE.","code":""},{"path":"/reference/get_direct_bias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain direct bias that measure the discrepancy of a posterior\ndistribution of pie and a true pie. — get_direct_bias","text":"list length two. diff direct differences; prb percent relative bias.","code":""},{"path":"/reference/get_fitted_mean_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"get fitted mean for nested model with subclass mixing weights that are the same among cases — get_fitted_mean_nested","title":"get fitted mean for nested model with subclass mixing weights that are the same among cases — get_fitted_mean_nested","text":"get fitted mean nested model subclass mixing weights among cases","code":""},{"path":"/reference/get_fitted_mean_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get fitted mean for nested model with subclass mixing weights that are the same among cases — get_fitted_mean_nested","text":"","code":"get_fitted_mean_nested(   slice,   res_nplcm,   model_options,   data_nplcm,   clean_options )"},{"path":"/reference/get_fitted_mean_nested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get fitted mean for nested model with subclass mixing weights that are the same among cases — get_fitted_mean_nested","text":"slice slice BrS data modeled res_nplcm matrix MCMC samples model_options see nplcm() data_nplcm see nplcm() clean_options see clean_perch_data()","code":""},{"path":"/reference/get_fitted_mean_nested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get fitted mean for nested model with subclass mixing weights that are the same among cases — get_fitted_mean_nested","text":"matrix . rows equal retained MCMC samples, . columns equal . measurement dimensions within slice.","code":""},{"path":"/reference/get_fitted_mean_nested.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get fitted mean for nested model with subclass mixing weights that are the same among cases — get_fitted_mean_nested","text":"","code":"if (FALSE) { result_folder <- c(\"C:/2015_09_17_01KEN_nplcm\") out           <- nplcm_read_folder(result_folder) data_nplcm    <- list(Mobs  = out$Mobs, Y = out$Y) slice         <- 1 # fitted positive rates for pathogens separately among cases and controls: get_fitted_mean_nested(slice,out$res_nplcm,out$model_options,data_nplcm,                       out$clean_options) # names of pathogens: colnames(out$Mobs$MBS[[slice]]) }"},{"path":"/reference/get_fitted_mean_no_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"get model fitted mean for conditional independence model — get_fitted_mean_no_nested","title":"get model fitted mean for conditional independence model — get_fitted_mean_no_nested","text":"get model fitted mean conditional independence model","code":""},{"path":"/reference/get_fitted_mean_no_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get model fitted mean for conditional independence model — get_fitted_mean_no_nested","text":"","code":"get_fitted_mean_no_nested(   slice,   res_nplcm,   model_options,   data_nplcm,   clean_options )"},{"path":"/reference/get_fitted_mean_no_nested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get model fitted mean for conditional independence model — get_fitted_mean_no_nested","text":"slice slice BrS data modeled res_nplcm matrix MCMC samples model_options see nplcm() data_nplcm see nplcm() clean_options see clean_perch_data()","code":""},{"path":"/reference/get_fitted_mean_no_nested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get model fitted mean for conditional independence model — get_fitted_mean_no_nested","text":"list model fitted means","code":""},{"path":"/reference/get_fitted_mean_no_nested.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get model fitted mean for conditional independence model — get_fitted_mean_no_nested","text":"","code":"if (FALSE) { result_folder <- c(\"C:/2015_09_17_01KEN\") out           <- nplcm_read_folder(result_folder) data_nplcm    <- list(Mobs  = out$Mobs, Y = out$Y) slice         <- 1 # fitted positive rates for pathogens separately among cases and controls: get_fitted_mean_no_nested(slice,out$res_nplcm,out$model_options,data_nplcm,                       out$clean_options) # names of pathogens: colnames(out$Mobs$MBS[[slice]]) }"},{"path":"/reference/get_individual_data.html","id":null,"dir":"Reference","previous_headings":"","what":"get individual data — get_individual_data","title":"get individual data — get_individual_data","text":"get individual data","code":""},{"path":"/reference/get_individual_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get individual data — get_individual_data","text":"","code":"get_individual_data(i, data_nplcm)"},{"path":"/reference/get_individual_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get individual data — get_individual_data","text":"index individual appeared data_nplcm data_nplcm data nplcm; see nplcm()","code":""},{"path":"/reference/get_individual_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get individual data — get_individual_data","text":"list structure data_nplcm; just one row values","code":""},{"path":"/reference/get_individual_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get individual data — get_individual_data","text":"","code":"data(data_nplcm_noreg) get_individual_data(2,data_nplcm_noreg) #> $Mobs #> $Mobs$MBS #> $Mobs$MBS$MBS1 #>   A B C D E F #> 2 1 0 1 0 0 0 #>  #>  #> $Mobs$MSS #> $Mobs$MSS$MSS1 #>   A B #> 2 0 0 #>  #>  #> $Mobs$MGS #> NULL #>  #>  #> $X #> NULL #>  #> $Y #> [1] 1 #>"},{"path":"/reference/get_individual_prediction.html","id":null,"dir":"Reference","previous_headings":"","what":"get individual prediction (Bayesian posterior) — get_individual_prediction","title":"get individual prediction (Bayesian posterior) — get_individual_prediction","text":"get individual prediction (Bayesian posterior)","code":""},{"path":"/reference/get_individual_prediction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get individual prediction (Bayesian posterior) — get_individual_prediction","text":"","code":"get_individual_prediction(x)"},{"path":"/reference/get_individual_prediction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get individual prediction (Bayesian posterior) — get_individual_prediction","text":"x nplcm object; contains file path DIR_NPLCM model results specifications stored. function first reads list folder nplcm_read_folder()","code":""},{"path":"/reference/get_individual_prediction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get individual prediction (Bayesian posterior) — get_individual_prediction","text":"matrix individual predictions; rows cases, columns causes specified model_options$likelihood$cause_list; See nplcm()","code":""},{"path":"/reference/get_individual_prediction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get individual prediction (Bayesian posterior) — get_individual_prediction","text":"","code":"if (FALSE) { data(data_nplcm_noreg) model_options_no_reg <- list(   likelihood   = list(     cause_list = cause_list,     k_subclass = 2,     Eti_formula = ~-1, # no covariate for the etiology regression     FPR_formula = list(       MBS1 =   ~-1)    # no covariate for the subclass weight regression   ),   use_measurements = c(\"BrS\"),    # use bronze-standard data only for model estimation.   prior= list(     Eti_prior = overall_uniform(1,cause_list),      # Dirichlet(1,...,1) prior for the etiology.     TPR_prior  = list(BrS = list(       info  = \"informative\", # informative prior for TPRs       input = \"match_range\",   # specify the informative prior for TPRs by specifying a plausible range.       val = list(MBS1 = list(up =  list(rep(0.99,J.BrS)),        # upper ranges: matched to 97.5% quantile of a Beta prior                              low = list(rep(0.55,J.BrS))))           # lower ranges: matched to 2.5% quantile of a Beta prior     )     )   ) )  set.seed(1) # include stratification information in file name: thedir_dated    <- paste0(working_dir,Date,\"_no_reg\")  # create folders to store the model results dir.create(thedir_dated, showWarnings = FALSE) result_folder_no_reg <- file.path(thedir_dated,paste(\"results\",collapse=\"_\")) thedir <- result_folder_no_reg dir.create(thedir, showWarnings = FALSE)  # options for MCMC chains: mcmc_options_no_reg <- list(   debugstatus = TRUE,   n.chains = 1,   n.itermcmc = as.integer(200),   n.burnin = as.integer(100),   n.thin = 1,   individual.pred = FALSE,   ppd = TRUE,   result.folder = thedir,   bugsmodel.dir = thedir,   jags.dir = \"\" )  # place the nplcm data and cleaning options into the results folder dput(data_nplcm_noreg,file.path(thedir,\"data_nplcm.txt\")) dput(clean_options, file.path(thedir,\"data_clean_options.txt\"))  rjags::load.module(\"glm\")  nplcm_noreg <- nplcm(data_nplcm_noreg,model_options_no_reg,mcmc_options_no_reg)  image(get_individual_prediction(nplcm_read_folder(nplcm_noreg$DIR_NPLCM)))  }"},{"path":"/reference/get_latent_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"get index of latent status — get_latent_seq","title":"get index of latent status — get_latent_seq","text":"get index latent status","code":""},{"path":"/reference/get_latent_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get index of latent status — get_latent_seq","text":"","code":"get_latent_seq(cause_list, ord, select_latent = NULL, exact = TRUE)"},{"path":"/reference/get_latent_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get index of latent status — get_latent_seq","text":"cause_list see mode_options nplcm() ord order cause_list according posterior mean select_latent Default NULL exact Default TRUE","code":""},{"path":"/reference/get_latent_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get index of latent status — get_latent_seq","text":"vector indices","code":""},{"path":"/reference/get_marginal_rates_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"get marginal TPR and FPR for nested model — get_marginal_rates_nested","title":"get marginal TPR and FPR for nested model — get_marginal_rates_nested","text":"get marginal TPR FPR nested model","code":""},{"path":"/reference/get_marginal_rates_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get marginal TPR and FPR for nested model — get_marginal_rates_nested","text":"","code":"get_marginal_rates_nested(slice, res_nplcm, model_options, data_nplcm)"},{"path":"/reference/get_marginal_rates_nested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get marginal TPR and FPR for nested model — get_marginal_rates_nested","text":"slice slice BrS data modeled res_nplcm matrix MCMC samples model_options see nplcm() data_nplcm see nplcm()","code":""},{"path":"/reference/get_marginal_rates_nested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get marginal TPR and FPR for nested model — get_marginal_rates_nested","text":"matrix . rows equal retained MCMC samples, . columns equal . measurement dimensions within slice.","code":""},{"path":"/reference/get_marginal_rates_no_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"get marginal TPR and FPR for no nested model — get_marginal_rates_no_nested","title":"get marginal TPR and FPR for no nested model — get_marginal_rates_no_nested","text":"get marginal TPR FPR nested model","code":""},{"path":"/reference/get_marginal_rates_no_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get marginal TPR and FPR for no nested model — get_marginal_rates_no_nested","text":"","code":"get_marginal_rates_no_nested(slice, res_nplcm, model_options, data_nplcm)"},{"path":"/reference/get_marginal_rates_no_nested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get marginal TPR and FPR for no nested model — get_marginal_rates_no_nested","text":"slice slice BrS data modeled res_nplcm matrix MCMC samples model_options see nplcm() data_nplcm see nplcm()","code":""},{"path":"/reference/get_marginal_rates_no_nested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get marginal TPR and FPR for no nested model — get_marginal_rates_no_nested","text":"matrix . rows equal retained MCMC samples, . columns equal . measurement dimensions within slice.","code":""},{"path":"/reference/get_metric.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain Integrated Squared Aitchison Distance, Squared Bias and Variance (both on\nCentral Log-Ratio transformed scale) that measure the discrepancy of a posterior\ndistribution of pie and a true pie. — get_metric","title":"Obtain Integrated Squared Aitchison Distance, Squared Bias and Variance (both on\nCentral Log-Ratio transformed scale) that measure the discrepancy of a posterior\ndistribution of pie and a true pie. — get_metric","text":"result equivalent Euclidean-type calculation compositional vector (e.g., etiologic fraction) centered-log-ratio (CLRB) transformed. simulation .","code":""},{"path":"/reference/get_metric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain Integrated Squared Aitchison Distance, Squared Bias and Variance (both on\nCentral Log-Ratio transformed scale) that measure the discrepancy of a posterior\ndistribution of pie and a true pie. — get_metric","text":"","code":"get_metric(DIR_NPLCM, truth)"},{"path":"/reference/get_metric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain Integrated Squared Aitchison Distance, Squared Bias and Variance (both on\nCentral Log-Ratio transformed scale) that measure the discrepancy of a posterior\ndistribution of pie and a true pie. — get_metric","text":"DIR_NPLCM File path Bayesian results stored truth True etiologic fraction vector (must sum 1) used generate data","code":""},{"path":"/reference/get_metric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain Integrated Squared Aitchison Distance, Squared Bias and Variance (both on\nCentral Log-Ratio transformed scale) that measure the discrepancy of a posterior\ndistribution of pie and a true pie. — get_metric","text":"vector (Integrated Squared Aitchison Distance (ISAD), bias-squared, variance, truth)","code":""},{"path":"/reference/get_pEti_samp.html","id":null,"dir":"Reference","previous_headings":"","what":"get etiology samples by names (no regression) — get_pEti_samp","title":"get etiology samples by names (no regression) — get_pEti_samp","text":"get etiology samples names (regression)","code":""},{"path":"/reference/get_pEti_samp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get etiology samples by names (no regression) — get_pEti_samp","text":"","code":"get_pEti_samp(res_nplcm, model_options)"},{"path":"/reference/get_pEti_samp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get etiology samples by names (no regression) — get_pEti_samp","text":"res_nplcm result model fits model_options model specification","code":""},{"path":"/reference/get_pEti_samp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get etiology samples by names (no regression) — get_pEti_samp","text":"list: pEti_mat: matrix posterior samples (iteration cause); overall etiology latent_nm: vector character strings representing names causes","code":""},{"path":"/reference/get_plot_num.html","id":null,"dir":"Reference","previous_headings":"","what":"get the plotting positions (numeric) for the fitted means; 3 positions for each cell — get_plot_num","title":"get the plotting positions (numeric) for the fitted means; 3 positions for each cell — get_plot_num","text":"get plotting positions (numeric) fitted means; 3 positions cell","code":""},{"path":"/reference/get_plot_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the plotting positions (numeric) for the fitted means; 3 positions for each cell — get_plot_num","text":"","code":"get_plot_num(e, height)"},{"path":"/reference/get_plot_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the plotting positions (numeric) for the fitted means; 3 positions for each cell — get_plot_num","text":"e Integer index 1 length(cause_list) height total number causes","code":""},{"path":"/reference/get_plot_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the plotting positions (numeric) for the fitted means; 3 positions for each cell — get_plot_num","text":"triple numerical plotting positions","code":""},{"path":"/reference/get_plot_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"get a list of measurement index where to look for data — get_plot_pos","title":"get a list of measurement index where to look for data — get_plot_pos","text":"get list measurement index look data","code":""},{"path":"/reference/get_plot_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get a list of measurement index where to look for data — get_plot_pos","text":"","code":"get_plot_pos(template)"},{"path":"/reference/get_plot_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get a list of measurement index where to look for data — get_plot_pos","text":"template See nplcm()","code":""},{"path":"/reference/get_plot_pos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get a list of measurement index where to look for data — get_plot_pos","text":"list index vectors","code":""},{"path":"/reference/get_postsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain posterior standard deviation from a result folder — get_postsd","title":"Obtain posterior standard deviation from a result folder — get_postsd","text":"Obtain posterior standard deviation result folder","code":""},{"path":"/reference/get_postsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain posterior standard deviation from a result folder — get_postsd","text":"","code":"get_postsd(DIR_NPLCM)"},{"path":"/reference/get_postsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain posterior standard deviation from a result folder — get_postsd","text":"DIR_NPLCM Path Bayesian results stored","code":""},{"path":"/reference/get_postsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain posterior standard deviation from a result folder — get_postsd","text":"vector positive numbers","code":""},{"path":"/reference/get_postsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain posterior standard deviation from a result folder — get_postsd","text":"","code":"if (FALSE) { DIR_NPLCM <- \"~/downloads/rep_1_kfit_2/\"   get_postsd(DIR_NPLCM) }"},{"path":"/reference/get_top_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"get top patterns from a slice of bronze-standard measurement — get_top_pattern","title":"get top patterns from a slice of bronze-standard measurement — get_top_pattern","text":"get top patterns slice bronze-standard measurement","code":""},{"path":"/reference/get_top_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get top patterns from a slice of bronze-standard measurement — get_top_pattern","text":"","code":"get_top_pattern(BrS_dat, Y, case_status, n_pat, exclude_missing = TRUE)"},{"path":"/reference/get_top_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get top patterns from a slice of bronze-standard measurement — get_top_pattern","text":"BrS_dat bronze-standard data, usually data_nplcm$Mobs$MBS[[1]] Y vector case/control status: 1 case; 0 control case_status 1 case; 0 controls n_pat number top patterns one wants show exclude_missing DEFAULT TRUE excluding individual missing measurements.","code":""},{"path":"/reference/get_top_pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get top patterns from a slice of bronze-standard measurement — get_top_pattern","text":"list results: obs_pat - observed rates; pattern_names; exist_other - actual . patterns larger n_pat; N- . individuals Y = case_status.","code":""},{"path":[]},{"path":"/reference/get_top_pattern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get top patterns from a slice of bronze-standard measurement — get_top_pattern","text":"","code":"if (FALSE) {  res <- get_top_pattern(data_nplcm$Mobs$MBS[[1]],data_nplcm$Y,1,30,FALSE) }  data(data_nplcm_noreg) get_top_pattern(data_nplcm_noreg$Mobs$MBS$MBS1,data_nplcm_noreg$Y,case_status=1,n_pat=5) #> $obs_pat #>     100000     001000     101000     110000     010000      other  #> 0.22666667 0.08666667 0.08666667 0.06666667 0.06333333 0.47000000  #>  #> $pattern_names #> [1] \"100000\" \"001000\" \"101000\" \"110000\" \"010000\" \"other\"  #>  #> $exist_other #> [1] TRUE #>  #> $N #> [1] 300 #>"},{"path":"/reference/has_non_basis.html","id":null,"dir":"Reference","previous_headings":"","what":"test if a formula has other terms not created by s_date_Eti or s_date_FPR — has_non_basis","title":"test if a formula has other terms not created by s_date_Eti or s_date_FPR — has_non_basis","text":"test formula terms created s_date_Eti s_date_FPR","code":""},{"path":"/reference/has_non_basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test if a formula has other terms not created by s_date_Eti or s_date_FPR — has_non_basis","text":"","code":"has_non_basis(form)"},{"path":"/reference/has_non_basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test if a formula has other terms not created by s_date_Eti or s_date_FPR — has_non_basis","text":"form formula","code":""},{"path":"/reference/has_non_basis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"test if a formula has other terms not created by s_date_Eti or s_date_FPR — has_non_basis","text":"","code":"form1 <- as.formula(~ -1+s_date_FPR(DATE,Y,basis = \"ps\",10) + as.factor(SITE)) form2 <- as.formula(~ -1+s_date_FPR(DATE,Y,basis = \"ps\",10)) form3 <- as.formula(~ s_date_FPR(DATE,Y,basis = \"ps\",10))  has_non_basis(form1) #> [1] TRUE has_non_basis(form2) #> [1] FALSE has_non_basis(form3) #> [1] TRUE"},{"path":"/reference/init_latent_jags_multipleSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize individual latent status (for JAGS) — init_latent_jags_multipleSS","title":"Initialize individual latent status (for JAGS) — init_latent_jags_multipleSS","text":"Initialize individual latent status (JAGS)","code":""},{"path":"/reference/init_latent_jags_multipleSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize individual latent status (for JAGS) — init_latent_jags_multipleSS","text":"","code":"init_latent_jags_multipleSS(   MSS_list,   cause_list,   patho = unlist(lapply(MSS_list, colnames)) )"},{"path":"/reference/init_latent_jags_multipleSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize individual latent status (for JAGS) — init_latent_jags_multipleSS","text":"MSS_list list silver-standard measurement data, possibly one slices; see data_nplcm argument nplcm() cause_list See model_options arguments nplcm() patho vector measured pathogen name MSS; default colnames(MSS)","code":""},{"path":"/reference/init_latent_jags_multipleSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize individual latent status (for JAGS) — init_latent_jags_multipleSS","text":"list numbers, indicating categories individual latent causes.","code":""},{"path":"/reference/init_latent_jags_multipleSS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize individual latent status (for JAGS) — init_latent_jags_multipleSS","text":"JAGS 3.4.0, initial value contradicts probabilistic specification, e.g. MSS_1[,j] ~ dbern(mu_ss_1[,j]), MSS_1[,j]=1 mu_ss_1[,j]=0, JAGS understand . PERCH application, likely used specificity silver-standard data 1. Note: problem WinBUGS.","code":""},{"path":"/reference/insert_bugfile_chunk_noreg_etiology.html","id":null,"dir":"Reference","previous_headings":"","what":"insert distribution for latent status code chunk into .bug file — insert_bugfile_chunk_noreg_etiology","title":"insert distribution for latent status code chunk into .bug file — insert_bugfile_chunk_noreg_etiology","text":"insert distribution latent status code chunk .bug file","code":""},{"path":"/reference/insert_bugfile_chunk_noreg_etiology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"insert distribution for latent status code chunk into .bug file — insert_bugfile_chunk_noreg_etiology","text":"","code":"insert_bugfile_chunk_noreg_etiology(ppd = NULL)"},{"path":"/reference/insert_bugfile_chunk_noreg_etiology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"insert distribution for latent status code chunk into .bug file — insert_bugfile_chunk_noreg_etiology","text":"ppd Default NULL; set TRUE posterior predictive checking","code":""},{"path":"/reference/insert_bugfile_chunk_noreg_etiology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"insert distribution for latent status code chunk into .bug file — insert_bugfile_chunk_noreg_etiology","text":"long character string inserted .bug model file distribution specification latent status","code":""},{"path":"/reference/insert_bugfile_chunk_noreg_meas.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert measurement likelihood (without regression) code chunks into .bug model file — insert_bugfile_chunk_noreg_meas","title":"Insert measurement likelihood (without regression) code chunks into .bug model file — insert_bugfile_chunk_noreg_meas","text":"Insert measurement likelihood (without regression) code chunks .bug model file","code":""},{"path":"/reference/insert_bugfile_chunk_noreg_meas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert measurement likelihood (without regression) code chunks into .bug model file — insert_bugfile_chunk_noreg_meas","text":"","code":"insert_bugfile_chunk_noreg_meas(   k_subclass,   Mobs,   prior,   cause_list,   use_measurements = \"BrS\",   ppd = NULL,   use_jags = FALSE )"},{"path":"/reference/insert_bugfile_chunk_noreg_meas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert measurement likelihood (without regression) code chunks into .bug model file — insert_bugfile_chunk_noreg_meas","text":"k_subclass number subclasses slices require conditional dependence modeling (applicable BrS data); length value number BrS slices. Mobs measurement data form data_nplcm prior prior specification model_options cause_list list latent status names (crucial building templates; see make_template()) use_measurements \"BrS\", \"SS\" ppd Default NULL; set TRUE posterior predictive checking use_jags Default FALSE; set TRUE want use JAGS model fitting.","code":""},{"path":"/reference/insert_bugfile_chunk_noreg_meas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert measurement likelihood (without regression) code chunks into .bug model file — insert_bugfile_chunk_noreg_meas","text":"long character string inserted .bug model file measurement likelihood","code":""},{"path":[]},{"path":"/reference/insert_bugfile_chunk_reg_discrete_predictor_etiology.html","id":null,"dir":"Reference","previous_headings":"","what":"insert etiology regression for latent status code chunk into .bug file; discrete predictors — insert_bugfile_chunk_reg_discrete_predictor_etiology","title":"insert etiology regression for latent status code chunk into .bug file; discrete predictors — insert_bugfile_chunk_reg_discrete_predictor_etiology","text":"insert etiology regression latent status code chunk .bug file; discrete predictors","code":""},{"path":"/reference/insert_bugfile_chunk_reg_discrete_predictor_etiology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"insert etiology regression for latent status code chunk into .bug file; discrete predictors — insert_bugfile_chunk_reg_discrete_predictor_etiology","text":"","code":"insert_bugfile_chunk_reg_discrete_predictor_etiology(Jcause, ppd = NULL)"},{"path":"/reference/insert_bugfile_chunk_reg_discrete_predictor_etiology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"insert etiology regression for latent status code chunk into .bug file; discrete predictors — insert_bugfile_chunk_reg_discrete_predictor_etiology","text":"Jcause number distinct causes, .e., categories latent health status; equals length(model_options$likelihood$cause_list). ppd Default NULL; set TRUE posterior predictive checking","code":""},{"path":"/reference/insert_bugfile_chunk_reg_discrete_predictor_etiology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"insert etiology regression for latent status code chunk into .bug file; discrete predictors — insert_bugfile_chunk_reg_discrete_predictor_etiology","text":"long character string inserted .bug model file distribution specification latent status","code":""},{"path":"/reference/insert_bugfile_chunk_reg_discrete_predictor_nonest_meas.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert measurement likelihood (with regression; discrete) code chunks into .bug model file — insert_bugfile_chunk_reg_discrete_predictor_nonest_meas","title":"Insert measurement likelihood (with regression; discrete) code chunks into .bug model file — insert_bugfile_chunk_reg_discrete_predictor_nonest_meas","text":"Insert measurement likelihood (regression; discrete) code chunks .bug model file","code":""},{"path":"/reference/insert_bugfile_chunk_reg_discrete_predictor_nonest_meas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert measurement likelihood (with regression; discrete) code chunks into .bug model file — insert_bugfile_chunk_reg_discrete_predictor_nonest_meas","text":"","code":"insert_bugfile_chunk_reg_discrete_predictor_nonest_meas(   Mobs,   prior,   cause_list,   use_measurements = \"BrS\",   ppd = NULL,   use_jags = FALSE )"},{"path":"/reference/insert_bugfile_chunk_reg_discrete_predictor_nonest_meas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert measurement likelihood (with regression; discrete) code chunks into .bug model file — insert_bugfile_chunk_reg_discrete_predictor_nonest_meas","text":"Mobs Measurement data form data_nplcm prior Prior specification model_options cause_list list latent status names (crucial building templates; see make_template()) use_measurements \"BrS\", \"SS\" ppd Default NULL; set TRUE posterior predictive checking use_jags Default FALSE; set TRUE want use JAGS model fitting.","code":""},{"path":"/reference/insert_bugfile_chunk_reg_discrete_predictor_nonest_meas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert measurement likelihood (with regression; discrete) code chunks into .bug model file — insert_bugfile_chunk_reg_discrete_predictor_nonest_meas","text":"long character string inserted .bug model file measurement likelihood","code":""},{"path":[]},{"path":"/reference/insert_bugfile_chunk_reg_etiology.html","id":null,"dir":"Reference","previous_headings":"","what":"insert etiology regression for latent status code chunk into .bug file — insert_bugfile_chunk_reg_etiology","title":"insert etiology regression for latent status code chunk into .bug file — insert_bugfile_chunk_reg_etiology","text":"insert etiology regression latent status code chunk .bug file","code":""},{"path":"/reference/insert_bugfile_chunk_reg_etiology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"insert etiology regression for latent status code chunk into .bug file — insert_bugfile_chunk_reg_etiology","text":"","code":"insert_bugfile_chunk_reg_etiology(Eti_formula, Jcause, ppd = NULL)"},{"path":"/reference/insert_bugfile_chunk_reg_etiology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"insert etiology regression for latent status code chunk into .bug file — insert_bugfile_chunk_reg_etiology","text":"Eti_formula Etiology regression formula; Check model_options$likelihood$Eti_formula. Jcause number distinct causes, .e., categories latent health status; equals length(model_options$likelihood$cause_list). ppd Default NULL; set TRUE posterior predictive checking","code":""},{"path":"/reference/insert_bugfile_chunk_reg_etiology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"insert etiology regression for latent status code chunk into .bug file — insert_bugfile_chunk_reg_etiology","text":"long character string inserted .bug model file distribution specification latent status","code":""},{"path":"/reference/insert_bugfile_chunk_reg_nest_meas.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert measurement likelihood (nested model+regression) code chunks into .bug model file — insert_bugfile_chunk_reg_nest_meas","title":"Insert measurement likelihood (nested model+regression) code chunks into .bug model file — insert_bugfile_chunk_reg_nest_meas","text":"Insert measurement likelihood (nested model+regression) code chunks .bug model file","code":""},{"path":"/reference/insert_bugfile_chunk_reg_nest_meas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert measurement likelihood (nested model+regression) code chunks into .bug model file — insert_bugfile_chunk_reg_nest_meas","text":"","code":"insert_bugfile_chunk_reg_nest_meas(   Mobs,   prior,   cause_list,   FPR_formula,   use_measurements = \"BrS\",   ppd = NULL,   use_jags = FALSE )"},{"path":"/reference/insert_bugfile_chunk_reg_nest_meas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert measurement likelihood (nested model+regression) code chunks into .bug model file — insert_bugfile_chunk_reg_nest_meas","text":"Mobs Measurement data form data_nplcm prior Prior specification model_options cause_list list latent status names (crucial building templates; see make_template()) FPR_formula list FPR regression formula; check model_options$likelihood$FPR_formula use_measurements \"BrS\", \"SS\" ppd Default NULL; set TRUE posterior predictive checking use_jags Default FALSE; set TRUE want use JAGS model fitting.","code":""},{"path":"/reference/insert_bugfile_chunk_reg_nest_meas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert measurement likelihood (nested model+regression) code chunks into .bug model file — insert_bugfile_chunk_reg_nest_meas","text":"long character string inserted .bug model file measurement likelihood","code":""},{"path":[]},{"path":"/reference/insert_bugfile_chunk_reg_nonest_meas.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert measurement likelihood (with regression) code chunks into .bug model file — insert_bugfile_chunk_reg_nonest_meas","title":"Insert measurement likelihood (with regression) code chunks into .bug model file — insert_bugfile_chunk_reg_nonest_meas","text":"Insert measurement likelihood (regression) code chunks .bug model file","code":""},{"path":"/reference/insert_bugfile_chunk_reg_nonest_meas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert measurement likelihood (with regression) code chunks into .bug model file — insert_bugfile_chunk_reg_nonest_meas","text":"","code":"insert_bugfile_chunk_reg_nonest_meas(   Mobs,   prior,   cause_list,   FPR_formula,   use_measurements = \"BrS\",   ppd = NULL,   use_jags = FALSE )"},{"path":"/reference/insert_bugfile_chunk_reg_nonest_meas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert measurement likelihood (with regression) code chunks into .bug model file — insert_bugfile_chunk_reg_nonest_meas","text":"Mobs Measurement data form data_nplcm prior Prior specification model_options cause_list list latent status names (crucial building templates; see make_template()) FPR_formula list FPR regression formula; check model_options$likelihood$FPR_formula use_measurements \"BrS\", \"SS\" ppd Default NULL; set TRUE posterior predictive checking use_jags Default FALSE; set TRUE want use JAGS model fitting.","code":""},{"path":"/reference/insert_bugfile_chunk_reg_nonest_meas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert measurement likelihood (with regression) code chunks into .bug model file — insert_bugfile_chunk_reg_nonest_meas","text":"long character string inserted .bug model file measurement likelihood","code":""},{"path":[]},{"path":"/reference/is.error.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for 'try-error' class — is.error","title":"Test for 'try-error' class — is.error","text":"Test 'try-error' class","code":""},{"path":"/reference/is.error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for 'try-error' class — is.error","text":"","code":"is.error(x)"},{"path":"/reference/is.error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for 'try-error' class — is.error","text":"x object test \"try-error\"","code":""},{"path":"/reference/is.error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for 'try-error' class — is.error","text":"Logical. TRUE \"try-error\"; FALSE otherwise","code":""},{"path":"/reference/is.error.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Test for 'try-error' class — is.error","text":"http://adv-r..co.nz/Exceptions-Debugging.html","code":""},{"path":"/reference/is_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if covariates are discrete — is_discrete","title":"Check if covariates are discrete — is_discrete","text":"is_discrete checks specified covariates regarded discrete variables.","code":""},{"path":"/reference/is_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if covariates are discrete — is_discrete","text":"","code":"is_discrete(X, X_reg)"},{"path":"/reference/is_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if covariates are discrete — is_discrete","text":"X data frame covariates X_reg vector covariates stratify analyses. variables categorical. formula (can tested plyr::.formula), e.g., ~.factor(SITE8) + .factor(AGECAT > 1).","code":""},{"path":"/reference/is_discrete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if covariates are discrete — is_discrete","text":"TRUE discrete; FALSE otherwise.","code":""},{"path":"/reference/is_discrete.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if covariates are discrete — is_discrete","text":"Note function used caution. used $$nrow(X)/nrow(unique(X[,X_reg,drop=FALSE]))>10$$ ad hoc criterion. plyr::.discrete()","code":""},{"path":"/reference/is_intercept_only.html","id":null,"dir":"Reference","previous_headings":"","what":"check if the formula is intercept only — is_intercept_only","title":"check if the formula is intercept only — is_intercept_only","text":"outputs logical values formula; identify intercept-formula.","code":""},{"path":"/reference/is_intercept_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if the formula is intercept only — is_intercept_only","text":"","code":"is_intercept_only(form)"},{"path":"/reference/is_intercept_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if the formula is intercept only — is_intercept_only","text":"form Regression formula","code":""},{"path":"/reference/is_intercept_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if the formula is intercept only — is_intercept_only","text":"TRUE intercept-; FALSE otherwise","code":""},{"path":"/reference/is_jags_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"See if a result folder is obtained by JAGS — is_jags_folder","title":"See if a result folder is obtained by JAGS — is_jags_folder","text":"See result folder obtained JAGS","code":""},{"path":"/reference/is_jags_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See if a result folder is obtained by JAGS — is_jags_folder","text":"","code":"is_jags_folder(DIR_NPLCM)"},{"path":"/reference/is_jags_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"See if a result folder is obtained by JAGS — is_jags_folder","text":"DIR_NPLCM directory folder results. \"mcmc_options.txt\" must folder.","code":""},{"path":"/reference/is_jags_folder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"See if a result folder is obtained by JAGS — is_jags_folder","text":"TRUE JAGS; FALSE otherwise.","code":""},{"path":"/reference/is_jags_folder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"See if a result folder is obtained by JAGS — is_jags_folder","text":"","code":"if (FALSE) { is_jags_folder(\"~/users/downloads\") # just an illustration. }"},{"path":"/reference/is_length_all_one.html","id":null,"dir":"Reference","previous_headings":"","what":"check if a list has elements all of length one — is_length_all_one","title":"check if a list has elements all of length one — is_length_all_one","text":"check list elements length one","code":""},{"path":"/reference/is_length_all_one.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if a list has elements all of length one — is_length_all_one","text":"","code":"is_length_all_one(x)"},{"path":"/reference/is_length_all_one.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if a list has elements all of length one — is_length_all_one","text":"x list","code":""},{"path":"/reference/is_length_all_one.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if a list has elements all of length one — is_length_all_one","text":"TRUE FALSE","code":""},{"path":"/reference/is_length_all_one.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check if a list has elements all of length one — is_length_all_one","text":"","code":"l = list(a = 5, b = 1:2) baker:::is_length_all_one(l) # FALSE #> [1] FALSE l = list(a = 5, b = 1) baker:::is_length_all_one(l) # TRUE #> [1] TRUE"},{"path":"/reference/jags2_baker.html","id":null,"dir":"Reference","previous_headings":"","what":"Run JAGS from R — jags2_baker","title":"Run JAGS from R — jags2_baker","text":"jags function takes data starting values input. automatically writes jags script, calls model, saves simulations easy access R. Check R2jags::jags2 details argument.","code":""},{"path":"/reference/jags2_baker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run JAGS from R — jags2_baker","text":"","code":"jags2_baker(   data,   inits,   parameters.to.save,   model.file = \"model.bug\",   n.chains = 3,   n.iter = 2000,   n.burnin = floor(n.iter/2),   n.thin = max(1, floor((n.iter - n.burnin)/1000)),   DIC = TRUE,   jags.path = \"\",   working.directory = NULL,   clearWD = TRUE,   refresh = n.iter/50 )"},{"path":"/reference/jags2_baker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run JAGS from R — jags2_baker","text":"data (1) vector list names data objects used     model, (2) (named) list data objects ,   (3) name \"dump\" format file containing data objects,    must end \".txt\", see example details. inits list n.chains elements; element     list list starting values BUGS model,     function creating (possibly random) initial values. inits     NULL, JAGS generate initial values parameters. parameters..save character vector names     parameters save monitored. model.file file containing model written BUGS   code. Alternatively, R2WinBUGS, model.file can R   function contains BUGS model written   temporary model file (see tempfile) using write.model n.chains number Markov chains (default: 3) n.iter number total iterations per chain (including burn ;     default: 2000) n.burnin length burn , .e. number iterations     discard beginning. Default n.iter/2, ,     discarding first half simulations. n.burnin 0,     jags() run 100 iterations adaption. n.thin thinning rate. Must positive integer.  Set     n.thin > 1 save memory computation time     n.iter large.  Default max(1, floor(n.chains *     (n.iter-n.burnin) / 1000)) thin     least 2000 simulations. DIC logical; TRUE (default), compute deviance, pD,     DIC. rule pD=var(deviance) / 2 used. jags.path directory contains JAGS executable.     default “”. working.directory sets working directory execution     function; directory model file . clearWD indicating whether files data.txt,     inits[1:n.chains].txt, codaIndex.txt, jagsscript.txt,     CODAchain[1:nchains].txt removed jags     finished, default=TRUE. refresh refresh frequency progress bar, default n.iter/50","code":""},{"path":"/reference/jags2_baker.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run JAGS from R — jags2_baker","text":"modifies jags2 function R2jags package.","code":""},{"path":[]},{"path":"/reference/line2user.html","id":null,"dir":"Reference","previous_headings":"","what":"convert line to user coordinates — line2user","title":"convert line to user coordinates — line2user","text":"version works log-scale linear scale axes. trick express line locations npc coordinates rather user coordinates, since latter course linear axes log scales.","code":""},{"path":"/reference/line2user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert line to user coordinates — line2user","text":"","code":"line2user(line, side)"},{"path":"/reference/line2user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert line to user coordinates — line2user","text":"line integer side integer; 1-4","code":""},{"path":"/reference/line2user.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"convert line to user coordinates — line2user","text":"par('cin')[2] * par('cex') * par('lheight') returns current line height inches, convert user coordinates multiplying diff(grconvertX(0:1, 'inches', 'user')), length inch user coordinates (horizontally, case - interested vertical height line user coords use diff(grconvertY(0:1, 'inches', 'user'))).","code":""},{"path":"/reference/line2user.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"convert line to user coordinates — line2user","text":"https://stackoverflow.com/questions/29125019/get-margin-line-locations-mgp--user-coordinates","code":""},{"path":"/reference/line2user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert line to user coordinates — line2user","text":"","code":"setup_plot <- function(log = \"\") {   par(mar = c(2, 10, 2, 2), oma = rep(2, 4))   plot.new()   plot.window(xlim = c(1, 10), ylim = c(1, 10), log = log)   box(which = \"plot\", lwd = 2, col = \"gray40\")   box(which = \"figure\", lwd = 2, col = \"darkred\")   box(which = \"outer\", lwd = 2, col = \"darkgreen\")   text(x = 0.5, y = 0.5,         labels = \"Plot Region\",         col = \"gray40\", font = 2)   mtext(side = 3, text = \"Figure region\", line = 0.5, col = \"darkred\", font = 2)   mtext(side = 3, text = \"Device region\", line = 2.5, col = \"darkgreen\", font = 2)   for (i in 0:9) {     mtext(side = 2, col = \"darkred\", text = paste0(\"Line\", i), line = i)   } } # And here are a couple of examples, applied to your setup_plot with mar=c(5, 5, 5, 5): setup_plot() axis(1, line=5) axis(2, line=5) abline(h=line2user(0:4, 1), lty=3, xpd=TRUE) abline(v=line2user(0:4, 2), lty=3, xpd=TRUE) abline(h=line2user(0:4, 3), lty=3, xpd=TRUE) abline(v=line2user(0:4, 4), lty=3, xpd=TRUE)   setup_plot(log='x') axis(1, line=5) axis(2, line=5) abline(h=line2user(0:4, 1), lty=3, xpd=TRUE) abline(v=line2user(0:4, 2), lty=3, xpd=TRUE) abline(h=line2user(0:4, 3), lty=3, xpd=TRUE) abline(v=line2user(0:4, 4), lty=3, xpd=TRUE)    setup_plot(log='y') axis(1, line=5) axis(2, line=5) abline(h=line2user(0:4, 1), lty=3, xpd=TRUE) abline(v=line2user(0:4, 2), lty=3, xpd=TRUE) abline(h=line2user(0:4, 3), lty=3, xpd=TRUE) abline(v=line2user(0:4, 4), lty=3, xpd=TRUE)   setup_plot(log='xy') axis(1, line=5) axis(2, line=5) abline(h=line2user(0:4, 1), lty=3, xpd=TRUE) abline(v=line2user(0:4, 2), lty=3, xpd=TRUE) abline(h=line2user(0:4, 3), lty=3, xpd=TRUE) abline(v=line2user(0:4, 4), lty=3, xpd=TRUE)"},{"path":"/reference/loadOneName.html","id":null,"dir":"Reference","previous_headings":"","what":"load an object from .RDATA file — loadOneName","title":"load an object from .RDATA file — loadOneName","text":"load object .RDATA file","code":""},{"path":"/reference/loadOneName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load an object from .RDATA file — loadOneName","text":"","code":"loadOneName(objName, file, envir = parent.frame(), assign.on.exit = TRUE)"},{"path":"/reference/loadOneName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load an object from .RDATA file — loadOneName","text":"objName name object file file path envir environment; default calling environment: parent.frame assign..exit default TRUE","code":""},{"path":"/reference/loadOneName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load an object from .RDATA file — loadOneName","text":"new environment","code":""},{"path":"/reference/load_or_install.html","id":null,"dir":"Reference","previous_headings":"","what":"Load or install a package — load_or_install","title":"Load or install a package — load_or_install","text":"load_or_install checks package installed, loads , installs .","code":""},{"path":"/reference/load_or_install.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load or install a package — load_or_install","text":"","code":"load_or_install(package_names, repos)"},{"path":"/reference/load_or_install.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load or install a package — load_or_install","text":"package_names vector package names repos URL downloading packages.","code":""},{"path":"/reference/load_or_install.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load or install a package — load_or_install","text":"message successfully loads specified packages; Error package exist.","code":""},{"path":"/reference/load_or_install.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Load or install a package — load_or_install","text":"Credit: http://www.vikparuchuri.com/blog/loading-andor-installing-packages/","code":""},{"path":"/reference/logOR.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate pairwise log odds ratios — logOR","title":"calculate pairwise log odds ratios — logOR","text":"Case upper triangle; control lower triangle","code":""},{"path":"/reference/logOR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate pairwise log odds ratios — logOR","text":"","code":"logOR(MBS.case, MBS.ctrl)"},{"path":"/reference/logOR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate pairwise log odds ratios — logOR","text":"MBS.case Case Bronze-Standard (BrS) data MBS.ctrl Control Bronze-Standard (BrS) data","code":""},{"path":"/reference/logit.html","id":null,"dir":"Reference","previous_headings":"","what":"logit function — logit","title":"logit function — logit","text":"logit function","code":""},{"path":"/reference/logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"logit function — logit","text":"","code":"logit(p)"},{"path":"/reference/logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"logit function — logit","text":"p Probability 0 1","code":""},{"path":"/reference/logit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"logit function — logit","text":"real number","code":""},{"path":"/reference/logit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"logit function — logit","text":"","code":"logit(0.5) #> [1] 0"},{"path":"/reference/logsumexp.html","id":null,"dir":"Reference","previous_headings":"","what":"log sum exp trick — logsumexp","title":"log sum exp trick — logsumexp","text":"log sum exp trick","code":""},{"path":"/reference/logsumexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log sum exp trick — logsumexp","text":"","code":"logsumexp(x)"},{"path":"/reference/logsumexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log sum exp trick — logsumexp","text":"x vector numbers","code":""},{"path":"/reference/logsumexp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"log sum exp trick — logsumexp","text":"","code":"logsumexp(c(-20,-30)) #> [1] -19.99995"},{"path":"/reference/lookup_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Get position to store in data_nplcm$Mobs: — lookup_quality","title":"Get position to store in data_nplcm$Mobs: — lookup_quality","text":"Get position store data_nplcm$Mobs:","code":""},{"path":"/reference/lookup_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get position to store in data_nplcm$Mobs: — lookup_quality","text":"","code":"lookup_quality(quality_nm)"},{"path":"/reference/lookup_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get position to store in data_nplcm$Mobs: — lookup_quality","text":"quality_nm names quality: can \"BrS\", \"SS\" \"GS\"","code":""},{"path":"/reference/lookup_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get position to store in data_nplcm$Mobs: — lookup_quality","text":"position quality name: \"BrS\"-1; \"SS\"-2; \"GS\"-3.","code":""},{"path":"/reference/lookup_quality.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get position to store in data_nplcm$Mobs: — lookup_quality","text":"also works vector","code":""},{"path":[]},{"path":"/reference/make_filename.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new file name — make_filename","title":"Create new file name — make_filename","text":"Create new file name","code":""},{"path":"/reference/make_filename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new file name — make_filename","text":"","code":"make_filename(parameter_names, parameter_vals, format)"},{"path":"/reference/make_filename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new file name — make_filename","text":"parameter_names parameters distinguish folder's scenario parameter_vals actual parameter values format suffix \".XXX\" end specify file format","code":""},{"path":"/reference/make_filename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new file name — make_filename","text":"string file name","code":""},{"path":"/reference/make_filename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create new file name — make_filename","text":"","code":"make_filename(c(\"theta\",\"alpha\"),c(0.9,2),\"csv\") #> [1] \"theta=0.9_alpha=2.csv\""},{"path":"/reference/make_foldername.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new folder name — make_foldername","title":"Create new folder name — make_foldername","text":"Create new folder name","code":""},{"path":"/reference/make_foldername.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new folder name — make_foldername","text":"","code":"make_foldername(parent_path, parameter_names, parameter_vals, sep = \"/\")"},{"path":"/reference/make_foldername.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new folder name — make_foldername","text":"parent_path parent directory put new folder parameter_names parameters distinguish folder's scenario parameter_vals actual parameter values sep file name separator - default \"/\" OSX; \"\\\\\" Windows.","code":""},{"path":"/reference/make_foldername.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new folder name — make_foldername","text":"string folder name","code":""},{"path":"/reference/make_foldername.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create new folder name — make_foldername","text":"","code":"make_foldername(\"/user\",c(\"theta\",\"alpha\",\"beta\"),c(1,2,3)) #> [1] \"/user/theta=1_alpha=2_beta=3\""},{"path":"/reference/make_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Takes any number of R objects as arguments and returns a list whose names are\nderived from the names of the R objects. — make_list","title":"Takes any number of R objects as arguments and returns a list whose names are\nderived from the names of the R objects. — make_list","text":"Roger Peng's listlabeling challenge http://simplystatistics.tumblr.com/post/11988685443/computing---language. Code copied https://gist.github.com/ajdamico/1329117/0134148987859856fcecbe4446cfd37e500e4272","code":""},{"path":"/reference/make_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Takes any number of R objects as arguments and returns a list whose names are\nderived from the names of the R objects. — make_list","text":"","code":"make_list(...)"},{"path":"/reference/make_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Takes any number of R objects as arguments and returns a list whose names are\nderived from the names of the R objects. — make_list","text":"... R objects","code":""},{"path":"/reference/make_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Takes any number of R objects as arguments and returns a list whose names are\nderived from the names of the R objects. — make_list","text":"list described ","code":""},{"path":"/reference/make_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Takes any number of R objects as arguments and returns a list whose names are\nderived from the names of the R objects. — make_list","text":"","code":"#create three example variables for a list x <- 1 y <- 2 z <- \"hello\" #display the results make_list( x , y , z ) #> $x #> [1] 1 #>  #> $y #> [1] 2 #>  #> $z #> [1] \"hello\" #>"},{"path":"/reference/make_meas_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Make measurement slice — make_meas_object","title":"Make measurement slice — make_meas_object","text":"Wrap information particular type measurement, e.g., NPPCR. NB: add example! copy vignette file.","code":""},{"path":"/reference/make_meas_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make measurement slice — make_meas_object","text":"","code":"make_meas_object(patho, specimen, test, quality, cause_list, sep_char = \"_\")"},{"path":"/reference/make_meas_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make measurement slice — make_meas_object","text":"patho vector pathogen names specimen Specimen name test Test name quality Quality category: \"BrS\", \"SS\" \"GS\". cause_list vector potential latent status sep_char character string separate pathogen names specimen-test pair; Default \"_\"","code":""},{"path":"/reference/make_meas_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make measurement slice — make_meas_object","text":"list measurement information quality argument patho argument name_in_data names used raw data locate measurements template mapping patho cause_list. NROW = length(cause_list)+1; NCOL = length(patho). value crucial model fitting determine measurements informative particular category latent status. specimen argument test argument nm_spec_test paste specimen test together","code":""},{"path":[]},{"path":"/reference/make_meas_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make measurement slice — make_meas_object","text":"","code":"make_meas_object( patho = c(\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"),  specimen = \"MBS\", test = \"1\", quality = \"BrS\",  cause_list = c(\"A\",\"B\",\"C\",\"D\",\"E\")) #> $quality #> [1] \"BrS\" #>  #> $patho #> [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" #>  #> $name_in_data #> [1] \"A_MBS1\" \"B_MBS1\" \"C_MBS1\" \"D_MBS1\" \"E_MBS1\" \"F_MBS1\" #>  #> $template #>      [,1] [,2] [,3] [,4] [,5] [,6] #> [1,]    1    0    0    0    0    0 #> [2,]    0    1    0    0    0    0 #> [3,]    0    0    1    0    0    0 #> [4,]    0    0    0    1    0    0 #> [5,]    0    0    0    0    1    0 #> [6,]    0    0    0    0    0    0 #>  #> $specimen #> [1] \"MBS\" #>  #> $test #> [1] \"1\" #>  #> $nm_spec_test #> [1] \"MBS1\" #>"},{"path":"/reference/make_numbered_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a list with numbered names — make_numbered_list","title":"Make a list with numbered names — make_numbered_list","text":"collect multiple measurements within category, e.g., bronze-standard.","code":""},{"path":"/reference/make_numbered_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a list with numbered names — make_numbered_list","text":"","code":"make_numbered_list(...)"},{"path":"/reference/make_numbered_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a list with numbered names — make_numbered_list","text":"... R object","code":""},{"path":"/reference/make_numbered_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a list with numbered names — make_numbered_list","text":"list names numbered","code":""},{"path":"/reference/make_template.html","id":null,"dir":"Reference","previous_headings":"","what":"make a mapping template for model fitting — make_template","title":"make a mapping template for model fitting — make_template","text":"make_template creates mapping matrix (binary values). pathogen measurement slice (e.g., nasal-pharyngeal PCR test) mapped inform one category latent status. possible categories (e.g., causes pneumonia) remain regardless measurement slice used (e.g., NPPCR BCX).","code":""},{"path":"/reference/make_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make a mapping template for model fitting — make_template","text":"","code":"make_template(patho, cause_list)"},{"path":"/reference/make_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make a mapping template for model fitting — make_template","text":"patho vector pathogen names particular measurement slice. patho must substring elements cause_list, e.g., \"PNEU\" substring \"PNEU_VT13\". Also see Examples function. cause_list vector characters; Potential categories latent statuses.","code":""},{"path":"/reference/make_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"make a mapping template for model fitting — make_template","text":"mapping patho cause_list. NROW = length(cause_list)+1; NCOL = length(patho). value crucial model fitting determine measurements informative particular category latent status.","code":""},{"path":"/reference/make_template.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"make a mapping template for model fitting — make_template","text":"first argument character substrings second argument. example, two arguments can respectively \"\" \"A_1\", \"\" \"+B\".second argument can character strings matched first argument. , means causes diseases directly measured current measurement slice. element patho, function matches start strings cause_list. Therefore, make sure latent statuses family (e.g., \"PNEU_VT13\" \"PNEU_NOVT13\") need start family name (e.g., \"PNEU\") followed subcategories (e.g., \"_VT13\" \"_NOVT13\").","code":""},{"path":"/reference/make_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"make a mapping template for model fitting — make_template","text":"","code":"cause_list <- c(\"HINF\",\"PNEU_VT13\",\"PNEU_NOVT13\",\"SAUR\",\"HMPV_A_B\",\"FLU_A\", \"PARA_1\",\"PARA_3\",\"PARA_4\",\"PV_EV\",\"RHINO\",\"RSV\", \"ENTRB\",\"TB\")  patho_BrS_NPPCR <- c(\"HINF\",\"PNEU\",\"SAUR\",\"HMPV_A_B\",\"FLU_A\",\"PARA_1\", \"PARA_3\",\"PARA_4\",\"PV_EV\",\"RHINO\",\"RSV\") make_template(patho_BrS_NPPCR,cause_list) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] #>  [1,]    1    0    0    0    0    0    0    0    0     0     0 #>  [2,]    0    1    0    0    0    0    0    0    0     0     0 #>  [3,]    0    1    0    0    0    0    0    0    0     0     0 #>  [4,]    0    0    1    0    0    0    0    0    0     0     0 #>  [5,]    0    0    0    1    0    0    0    0    0     0     0 #>  [6,]    0    0    0    0    1    0    0    0    0     0     0 #>  [7,]    0    0    0    0    0    1    0    0    0     0     0 #>  [8,]    0    0    0    0    0    0    1    0    0     0     0 #>  [9,]    0    0    0    0    0    0    0    1    0     0     0 #> [10,]    0    0    0    0    0    0    0    0    1     0     0 #> [11,]    0    0    0    0    0    0    0    0    0     1     0 #> [12,]    0    0    0    0    0    0    0    0    0     0     1 #> [13,]    0    0    0    0    0    0    0    0    0     0     0 #> [14,]    0    0    0    0    0    0    0    0    0     0     0 #> [15,]    0    0    0    0    0    0    0    0    0     0     0    cause = c(\"A\",\"B1\",\"B2\",\"C\",\"A+C\",\"B+C\")  patho = c(\"A\",\"B\",\"C\")  make_template(patho,cause) #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    1    0 #> [4,]    0    0    1 #> [5,]    1    0    1 #> [6,]    0    1    1 #> [7,]    0    0    0    cause = c(\"A\",\"B1\",\"B2\",\"C\",\"A+C\",\"B+C\",\"other\")  patho = c(\"A\",\"B\",\"C\")  make_template(patho,cause) #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    1    0 #> [4,]    0    0    1 #> [5,]    1    0    1 #> [6,]    0    1    1 #> [7,]    0    0    0 #> [8,]    0    0    0      cause = c(\"A\",\"B1\",\"B2\",\"X_B\",\"Y_B\",\"C\",\"A+C\",\"B+C\",\"other\")  patho = c(\"A\",\"B\",\"C\",\"X_B\",\"Y_B\")  make_template(patho,cause) #>       [,1] [,2] [,3] [,4] [,5] #>  [1,]    1    0    0    0    0 #>  [2,]    0    1    0    0    0 #>  [3,]    0    1    0    0    0 #>  [4,]    0    0    0    1    0 #>  [5,]    0    0    0    0    1 #>  [6,]    0    0    1    0    0 #>  [7,]    1    0    1    0    0 #>  [8,]    0    1    1    0    0 #>  [9,]    0    0    0    0    0 #> [10,]    0    0    0    0    0"},{"path":"/reference/marg_H.html","id":null,"dir":"Reference","previous_headings":"","what":"Shannon entropy for binary data — marg_H","title":"Shannon entropy for binary data — marg_H","text":"Shannon entropy binary data","code":""},{"path":"/reference/marg_H.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shannon entropy for binary data — marg_H","text":"","code":"marg_H(m_px)"},{"path":"/reference/marg_H.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shannon entropy for binary data — marg_H","text":"m_px number 0 1","code":""},{"path":"/reference/marg_H.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shannon entropy for binary data — marg_H","text":"non-negative number","code":""},{"path":"/reference/marg_H.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shannon entropy for binary data — marg_H","text":"","code":"marg_H(0.1) #> [1] 0.325083"},{"path":"/reference/match_cause.html","id":null,"dir":"Reference","previous_headings":"","what":"Match latent causes that might have the same combo but\ndifferent specifications — match_cause","title":"Match latent causes that might have the same combo but\ndifferent specifications — match_cause","text":"@details cause_list, \"+B\" represents cause \"B+\". used plotting side--side posterior sample comparisons","code":""},{"path":"/reference/match_cause.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match latent causes that might have the same combo but\ndifferent specifications — match_cause","text":"","code":"match_cause(pattern, vec)"},{"path":"/reference/match_cause.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match latent causes that might have the same combo but\ndifferent specifications — match_cause","text":"pattern vector latent cause names, e.g., particular fit vec vector latent cause names, e.g., usually union cause names several model fits. Usually, also display order one wants show.","code":""},{"path":"/reference/match_cause.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match latent causes that might have the same combo but\ndifferent specifications — match_cause","text":"vector length length(vec); NA means pattern matches vec; 1 position 10 means first element pattern matches 10th element vec.","code":""},{"path":"/reference/match_cause.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match latent causes that might have the same combo but\ndifferent specifications — match_cause","text":"","code":"pattern <- c(\"X+Y\",\"A+Z\",\"C\") vec     <- c(LETTERS[1:26],\"Y+Z\",\"Y+X\",\"Z+A\") match_cause(pattern,vec) #>  [1] NA NA  3 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [26] NA NA  1  2"},{"path":"/reference/merge_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"For a list of many sublists each of which has matrices as its member,\nwe combine across the many sublists to produce a final list — merge_lists","title":"For a list of many sublists each of which has matrices as its member,\nwe combine across the many sublists to produce a final list — merge_lists","text":"list many sublists matrices member, combine across many sublists produce final list","code":""},{"path":"/reference/merge_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For a list of many sublists each of which has matrices as its member,\nwe combine across the many sublists to produce a final list — merge_lists","text":"","code":"merge_lists(list_of_lists)"},{"path":"/reference/merge_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For a list of many sublists each of which has matrices as its member,\nwe combine across the many sublists to produce a final list — merge_lists","text":"list_of_lists list sublists","code":""},{"path":"/reference/merge_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"For a list of many sublists each of which has matrices as its member,\nwe combine across the many sublists to produce a final list — merge_lists","text":"list merge","code":""},{"path":[]},{"path":"/reference/merge_lists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"For a list of many sublists each of which has matrices as its member,\nwe combine across the many sublists to produce a final list — merge_lists","text":"","code":"DT1 = list(A=1:3,B=letters[1:3]) DT2 = list(A=4:5,B=letters[4:5]) DT3 = list(A=1:4,B=letters[1:4]) DT4 = list(A=4:7,B=letters[4:7]) l = list(DT1,DT2);names(l) <- c(\"haha\",\"hihi\") l2 = list(DT3,DT4);names(l2) <- c(\"haha\",\"hihi\") listoflists <- list(l,l2);names(listoflists) <- c(\"dude1\",\"dude2\") listoflists #> $dude1 #> $dude1$haha #> $dude1$haha$A #> [1] 1 2 3 #>  #> $dude1$haha$B #> [1] \"a\" \"b\" \"c\" #>  #>  #> $dude1$hihi #> $dude1$hihi$A #> [1] 4 5 #>  #> $dude1$hihi$B #> [1] \"d\" \"e\" #>  #>  #>  #> $dude2 #> $dude2$haha #> $dude2$haha$A #> [1] 1 2 3 4 #>  #> $dude2$haha$B #> [1] \"a\" \"b\" \"c\" \"d\" #>  #>  #> $dude2$hihi #> $dude2$hihi$A #> [1] 4 5 6 7 #>  #> $dude2$hihi$B #> [1] \"d\" \"e\" \"f\" \"g\" #>  #>  #>  merge_lists(listoflists) #> $haha #>      A         B           #> [1,] Integer,3 Character,3 #> [2,] Integer,4 Character,4 #>  #> $hihi #>      A         B           #> [1,] Integer,2 Character,2 #> [2,] Integer,4 Character,4 #>"},{"path":"/reference/my_reorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder the measurement dimensions to match the order for display — my_reorder","title":"Reorder the measurement dimensions to match the order for display — my_reorder","text":"Reorder measurement dimensions match order display","code":""},{"path":"/reference/my_reorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder the measurement dimensions to match the order for display — my_reorder","text":"","code":"my_reorder(disp_order, raw_nm)"},{"path":"/reference/my_reorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder the measurement dimensions to match the order for display — my_reorder","text":"disp_order vector names displayed (order matters) raw_nm vector names raw measurements (order matters)","code":""},{"path":"/reference/my_reorder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder the measurement dimensions to match the order for display — my_reorder","text":"permuted vector 1 length(raw_nm). example, first element 3, means 3rd pathogen raw_nmshould arranged first raw measurements.","code":""},{"path":"/reference/my_reorder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorder the measurement dimensions to match the order for display — my_reorder","text":"","code":"disp_order <- c(\"B\",\"E\",\"D\",\"C\",\"F\",\"A\")   raw_nm <- c(\"C\",\"A\",\"E\")   my_reorder(disp_order,raw_nm) #> [1] 3 1 2"},{"path":"/reference/nplcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit nested partially-latent class models (highest-level wrapper function) — nplcm","title":"Fit nested partially-latent class models (highest-level wrapper function) — nplcm","text":"Uses JAGS (OSX Windows) operating system Bayesian posterior inference (see README file instruction install JAGS). running JAGS windows, please go control panel add directory JAGS ENVIRONMENTAL VARIABLE.","code":""},{"path":"/reference/nplcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit nested partially-latent class models (highest-level wrapper function) — nplcm","text":"","code":"nplcm(data_nplcm, model_options, mcmc_options)"},{"path":"/reference/nplcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit nested partially-latent class models (highest-level wrapper function) — nplcm","text":"data_nplcm Cases top controls rows diagnostic test results covariate matrix. assumed baker automatically write model files (.bug). Mobs list measurements distinct qualities (Bronze-, Silver, Gold-Standard: MBS,MSS,MGS). elements list include MBS, MSS, MGS. component available, please specify , e.g., MGS=NULL (effectively deleting MGS Mobs). MBS list data frame bronze-standard (BrS) measurements. Rows subjects, columns causative agents (e.g., pathogen species). use list accommodate possibility multiple sets BrS data. imperfect sensitivity/specificity (e.g. nasopharyngeal polymerase chain reaction - NPPCR). MSS list data frame silver-standard (SS) measurements. Rows subjects, columns causative agents measured specimen (e.g. blood culture). measurements perfect specificity imperfect sensitivity. MGS list data frame gold-standard (GS) measurements. Rows subject, columns measured causative agents measurements perfect sensitivity specificity. Y Vector disease status: 1 case, 0 control. X Covariate matrix. subset columns primary covariates cause-specific- case-fraction (CSCF) functions hence must available cases, another subset covariates available cases controls. two sets covariates may identical, overlapping completely different. general, design matrix regression models, enrollment date study may non-linear effect, basis expansion often needed approximation. model_options list model options: likelihood prior. use_measurements vector characters strings; can one \"BrS\", \"SS\", \"GS\". likelihood cause_list vector causes (NB: specify); k_subclass number nested subclasses disease class (one case classes control class; k_subclass assumed class) slice BrS measurements. 1 conditional independence; larger 1 conditional dependence. available BrS measurements. vector length equal number slices BrS measurements; Eti_formula Formula etiology regressions. can use s_date_Eti() specify design matrix R format enrollment date; produce natural cubic spline basis. Specify ~ 1 regression intended. FPR_formulaformula false positive rates (FPR) regressions; see formula(). can use s_date_FPR() specify part design matrix R format enrollment date; produce penalized-spline basis (based B-splines). Specify ~ 1 regression intended. (NB: effect=\"fixed\", dm_Rdate_FPR() just specify design matrix appropriately standardized dates.) prior Eti_priorDescription etiology prior (e.g., overall_uniform - hyperparameters 1; 0_1 - hyperparameters 0.1); TPR_priorDescription priors measurements (e.g., informative vs non-informative). length M_use. (NB: sure M use ...) mcmc_options list Markov chain Monte Carlo (MCMC) options. debugstatus Logical - whether pause WinBUGS finishes model fitting; (NB: obsolete? Test.) n.chains Number MCMC chains; n.burnin Number burn-iterations; n.thin keep every n.thin samples burn-period; individual.pred TRUE perform individual prediction (Icat variables .bug file); FALSE otherwise; ppd TRUE simulate new data (XXX.new variables .bug file) posterior predictive distribution (ppd); FALSE otherwise; get.pEti TRUE getting posterior samples individual etiologic fractions; FALSE otherwise. non-regression, regression models discrete predictors, default TRUE, need specify entry. relevant regression models non-discrete covariates. individuals distinct CSCFs specific covariate values, easier just store posterior samples regression coefficients reconstruct pies afterwards, rather storing JAGS. result.folder Path folder storing results; bugsmodel.dir Path .bug model files; jags.dir Path JAGS installed; NULL, set jags.dir=\"\".","code":""},{"path":"/reference/nplcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit nested partially-latent class models (highest-level wrapper function) — nplcm","text":"JAGS output result, fitted function R2jags::jags2() R2jags. object class nplcm bugs. Current implemented models follow hierarchy : regression:  Fitted low level nplcm_fit_NoReg regression: Given disease class (control class cases subset causative agents): local independence model BrS measures: Fitted lower level nplcm_fit_Reg_NoNest deals setting two sets covariates, one CSCF regression FPR regression. two sets covariates may identical, overlapping non-overlapping. function called exists one one discrete covariate among union two covariate sets. method implemented function directly lets FPR depend upon covariates. different Wu Chen (2020+), let subclass weights depend upon covariates. implemented function methods comparison. nplcm_fit_Reg_discrete_predictor_NoNest deals setting discrete covariates FPRs CSCFs. strata defined two sets covariates need identical, e.g., result distinct sets covariates. , directly let FPR stratified covariates, hence different Wu Chen (2020+) implemented function methods comparison. local dependence model BrS measures: Fitted lower level nplcm_fit_Reg_Nest: method introduced Wu Chen (2020+): CSCF regression + case/control subclass weight regression. provide specialized function setting discrete covariates.","code":""},{"path":"/reference/nplcm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit nested partially-latent class models (highest-level wrapper function) — nplcm","text":"","code":"if (FALSE) { data(data_nplcm_noreg) model_options_no_reg <- list(   likelihood   = list(     cause_list = cause_list,     k_subclass = 2,     Eti_formula = ~-1, # no covariate for the etiology regression     FPR_formula = list(       MBS1 =   ~-1)    # no covariate for the subclass weight regression   ),   use_measurements = c(\"BrS\"),   # use bronze-standard data only for model estimation.   prior= list(     Eti_prior = overall_uniform(1,cause_list),      # Dirichlet(1,...,1) prior for the etiology.     TPR_prior  = list(BrS = list(       info  = \"informative\", # informative prior for TPRs       input = \"match_range\",     # specify the informative prior for TPRs by specifying a plausible range.       val = list(MBS1 = list(up =  list(rep(0.99,J.BrS)),        # upper ranges: matched to 97.5% quantile of a Beta prior                              low = list(rep(0.55,J.BrS))))      # lower ranges: matched to 2.5% quantile of a Beta prior     )     )   ) )       set.seed(1) # include stratification information in file name: thedir_dated    <- paste0(working_dir,Date,\"_no_reg\")  # create folders to store the model results  dir.create(thedir_dated, showWarnings = FALSE) result_folder_no_reg <- file.path(thedir_dated,paste(\"results\",collapse=\"_\")) thedir <- result_folder_no_reg dir.create(thedir, showWarnings = FALSE)  # options for MCMC chains: mcmc_options_no_reg <- list(   debugstatus = TRUE,   n.chains = 1,   n.itermcmc = as.integer(200),    n.burnin = as.integer(100),    n.thin = 1,   individual.pred = FALSE,    ppd = TRUE,   result.folder = thedir,   bugsmodel.dir = thedir,   jags.dir = \"\" )  # place the nplcm data and cleaning options into the results folder dput(data_nplcm_noreg,file.path(thedir,\"data_nplcm.txt\"))  dput(clean_options, file.path(thedir,\"data_clean_options.txt\"))  rjags::load.module(\"glm\")  nplcm_noreg <- nplcm(data_nplcm_noreg,model_options_no_reg,mcmc_options_no_reg)  }"},{"path":"/reference/nplcm_fit_NoReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit nested partially-latent class model (low-level) — nplcm_fit_NoReg","title":"Fit nested partially-latent class model (low-level) — nplcm_fit_NoReg","text":"function prepares data, specifies hyperparameters priors (true positive rates etiology fractions), initializes posterior sampling chain, writes model file (JAGS WinBUGS slight differences syntax), fits model. Features: regression; nested subclasses","code":""},{"path":"/reference/nplcm_fit_NoReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit nested partially-latent class model (low-level) — nplcm_fit_NoReg","text":"","code":"nplcm_fit_NoReg(data_nplcm, model_options, mcmc_options)"},{"path":"/reference/nplcm_fit_NoReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit nested partially-latent class model (low-level) — nplcm_fit_NoReg","text":"data_nplcm Cases top controls rows diagnostic test results covariate matrix. assumed baker automatically write model files (.bug). Mobs list measurements distinct qualities (Bronze-, Silver, Gold-Standard: MBS,MSS,MGS). elements list include MBS, MSS, MGS. component available, please specify , e.g., MGS=NULL (effectively deleting MGS Mobs). MBS list data frame bronze-standard (BrS) measurements. Rows subjects, columns causative agents (e.g., pathogen species). use list accommodate possibility multiple sets BrS data. imperfect sensitivity/specificity (e.g. nasopharyngeal polymerase chain reaction - NPPCR). MSS list data frame silver-standard (SS) measurements. Rows subjects, columns causative agents measured specimen (e.g. blood culture). measurements perfect specificity imperfect sensitivity. MGS list data frame gold-standard (GS) measurements. Rows subject, columns measured causative agents measurements perfect sensitivity specificity. Y Vector disease status: 1 case, 0 control. X Covariate matrix. subset columns primary covariates cause-specific- case-fraction (CSCF) functions hence must available cases, another subset covariates available cases controls. two sets covariates may identical, overlapping completely different. general, design matrix regression models, enrollment date study may non-linear effect, basis expansion often needed approximation. model_options list model options: likelihood prior. use_measurements vector characters strings; can one \"BrS\", \"SS\", \"GS\". likelihood cause_list vector causes (NB: specify); k_subclass number nested subclasses disease class (one case classes control class; k_subclass assumed class) slice BrS measurements. 1 conditional independence; larger 1 conditional dependence. available BrS measurements. vector length equal number slices BrS measurements; Eti_formula Formula etiology regressions. can use s_date_Eti() specify design matrix R format enrollment date; produce natural cubic spline basis. Specify ~ 1 regression intended. FPR_formulaformula false positive rates (FPR) regressions; see formula(). can use s_date_FPR() specify part design matrix R format enrollment date; produce penalized-spline basis (based B-splines). Specify ~ 1 regression intended. (NB: effect=\"fixed\", dm_Rdate_FPR() just specify design matrix appropriately standardized dates.) prior Eti_priorDescription etiology prior (e.g., overall_uniform - hyperparameters 1; 0_1 - hyperparameters 0.1); TPR_priorDescription priors measurements (e.g., informative vs non-informative). length M_use. (NB: sure M use ...) mcmc_options list Markov chain Monte Carlo (MCMC) options. debugstatus Logical - whether pause WinBUGS finishes model fitting; (NB: obsolete? Test.) n.chains Number MCMC chains; n.burnin Number burn-iterations; n.thin keep every n.thin samples burn-period; individual.pred TRUE perform individual prediction (Icat variables .bug file); FALSE otherwise; ppd TRUE simulate new data (XXX.new variables .bug file) posterior predictive distribution (ppd); FALSE otherwise; get.pEti TRUE getting posterior samples individual etiologic fractions; FALSE otherwise. non-regression, regression models discrete predictors, default TRUE, need specify entry. relevant regression models non-discrete covariates. individuals distinct CSCFs specific covariate values, easier just store posterior samples regression coefficients reconstruct pies afterwards, rather storing JAGS. result.folder Path folder storing results; bugsmodel.dir Path .bug model files; jags.dir Path JAGS installed; NULL, set jags.dir=\"\".","code":""},{"path":"/reference/nplcm_fit_NoReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit nested partially-latent class model (low-level) — nplcm_fit_NoReg","text":"BUGS fit results.","code":""},{"path":[]},{"path":"/reference/nplcm_fit_Reg_Nest.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_Nest","title":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_Nest","text":"Called nplcm() upon assigned nested regression assign_model()","code":""},{"path":"/reference/nplcm_fit_Reg_Nest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_Nest","text":"","code":"nplcm_fit_Reg_Nest(data_nplcm, model_options, mcmc_options)"},{"path":"/reference/nplcm_fit_Reg_Nest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_Nest","text":"data_nplcm Cases top controls rows diagnostic test results covariate matrix. assumed baker automatically write model files (.bug). Mobs list measurements distinct qualities (Bronze-, Silver, Gold-Standard: MBS,MSS,MGS). elements list include MBS, MSS, MGS. component available, please specify , e.g., MGS=NULL (effectively deleting MGS Mobs). MBS list data frame bronze-standard (BrS) measurements. Rows subjects, columns causative agents (e.g., pathogen species). use list accommodate possibility multiple sets BrS data. imperfect sensitivity/specificity (e.g. nasopharyngeal polymerase chain reaction - NPPCR). MSS list data frame silver-standard (SS) measurements. Rows subjects, columns causative agents measured specimen (e.g. blood culture). measurements perfect specificity imperfect sensitivity. MGS list data frame gold-standard (GS) measurements. Rows subject, columns measured causative agents measurements perfect sensitivity specificity. Y Vector disease status: 1 case, 0 control. X Covariate matrix. subset columns primary covariates cause-specific- case-fraction (CSCF) functions hence must available cases, another subset covariates available cases controls. two sets covariates may identical, overlapping completely different. general, design matrix regression models, enrollment date study may non-linear effect, basis expansion often needed approximation. model_options list model options: likelihood prior. use_measurements vector characters strings; can one \"BrS\", \"SS\", \"GS\". likelihood cause_list vector causes (NB: specify); k_subclass number nested subclasses disease class (one case classes control class; k_subclass assumed class) slice BrS measurements. 1 conditional independence; larger 1 conditional dependence. available BrS measurements. vector length equal number slices BrS measurements; Eti_formula Formula etiology regressions. can use s_date_Eti() specify design matrix R format enrollment date; produce natural cubic spline basis. Specify ~ 1 regression intended. FPR_formulaformula false positive rates (FPR) regressions; see formula(). can use s_date_FPR() specify part design matrix R format enrollment date; produce penalized-spline basis (based B-splines). Specify ~ 1 regression intended. (NB: effect=\"fixed\", dm_Rdate_FPR() just specify design matrix appropriately standardized dates.) prior Eti_priorDescription etiology prior (e.g., overall_uniform - hyperparameters 1; 0_1 - hyperparameters 0.1); TPR_priorDescription priors measurements (e.g., informative vs non-informative). length M_use. (NB: sure M use ...) mcmc_options list Markov chain Monte Carlo (MCMC) options. debugstatus Logical - whether pause WinBUGS finishes model fitting; (NB: obsolete? Test.) n.chains Number MCMC chains; n.burnin Number burn-iterations; n.thin keep every n.thin samples burn-period; individual.pred TRUE perform individual prediction (Icat variables .bug file); FALSE otherwise; ppd TRUE simulate new data (XXX.new variables .bug file) posterior predictive distribution (ppd); FALSE otherwise; get.pEti TRUE getting posterior samples individual etiologic fractions; FALSE otherwise. non-regression, regression models discrete predictors, default TRUE, need specify entry. relevant regression models non-discrete covariates. individuals distinct CSCFs specific covariate values, easier just store posterior samples regression coefficients reconstruct pies afterwards, rather storing JAGS. result.folder Path folder storing results; bugsmodel.dir Path .bug model files; jags.dir Path JAGS installed; NULL, set jags.dir=\"\".","code":""},{"path":"/reference/nplcm_fit_Reg_Nest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_Nest","text":"BUGS fit results.","code":""},{"path":"/reference/nplcm_fit_Reg_Nest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_Nest","text":"function prepares data, specifies hyperparameters priors (true positive rates etiology fractions), initializes posterior sampling chain, writes model file (JAGS), fits model. Features: regression (discrete covariates); nested subclasses, .e. conditional dependence multivariate measurements given disease class covariates; multiple BrS + multiple SS.","code":""},{"path":[]},{"path":"/reference/nplcm_fit_Reg_NoNest.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_NoNest","title":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_NoNest","text":"Fit nested partially-latent class model regression (low-level)","code":""},{"path":"/reference/nplcm_fit_Reg_NoNest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_NoNest","text":"","code":"nplcm_fit_Reg_NoNest(data_nplcm, model_options, mcmc_options)"},{"path":"/reference/nplcm_fit_Reg_NoNest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_NoNest","text":"data_nplcm Cases top controls rows diagnostic test results covariate matrix. assumed baker automatically write model files (.bug). Mobs list measurements distinct qualities (Bronze-, Silver, Gold-Standard: MBS,MSS,MGS). elements list include MBS, MSS, MGS. component available, please specify , e.g., MGS=NULL (effectively deleting MGS Mobs). MBS list data frame bronze-standard (BrS) measurements. Rows subjects, columns causative agents (e.g., pathogen species). use list accommodate possibility multiple sets BrS data. imperfect sensitivity/specificity (e.g. nasopharyngeal polymerase chain reaction - NPPCR). MSS list data frame silver-standard (SS) measurements. Rows subjects, columns causative agents measured specimen (e.g. blood culture). measurements perfect specificity imperfect sensitivity. MGS list data frame gold-standard (GS) measurements. Rows subject, columns measured causative agents measurements perfect sensitivity specificity. Y Vector disease status: 1 case, 0 control. X Covariate matrix. subset columns primary covariates cause-specific- case-fraction (CSCF) functions hence must available cases, another subset covariates available cases controls. two sets covariates may identical, overlapping completely different. general, design matrix regression models, enrollment date study may non-linear effect, basis expansion often needed approximation. model_options list model options: likelihood prior. use_measurements vector characters strings; can one \"BrS\", \"SS\", \"GS\". likelihood cause_list vector causes (NB: specify); k_subclass number nested subclasses disease class (one case classes control class; k_subclass assumed class) slice BrS measurements. 1 conditional independence; larger 1 conditional dependence. available BrS measurements. vector length equal number slices BrS measurements; Eti_formula Formula etiology regressions. can use s_date_Eti() specify design matrix R format enrollment date; produce natural cubic spline basis. Specify ~ 1 regression intended. FPR_formulaformula false positive rates (FPR) regressions; see formula(). can use s_date_FPR() specify part design matrix R format enrollment date; produce penalized-spline basis (based B-splines). Specify ~ 1 regression intended. (NB: effect=\"fixed\", dm_Rdate_FPR() just specify design matrix appropriately standardized dates.) prior Eti_priorDescription etiology prior (e.g., overall_uniform - hyperparameters 1; 0_1 - hyperparameters 0.1); TPR_priorDescription priors measurements (e.g., informative vs non-informative). length M_use. (NB: sure M use ...) mcmc_options list Markov chain Monte Carlo (MCMC) options. debugstatus Logical - whether pause WinBUGS finishes model fitting; (NB: obsolete? Test.) n.chains Number MCMC chains; n.burnin Number burn-iterations; n.thin keep every n.thin samples burn-period; individual.pred TRUE perform individual prediction (Icat variables .bug file); FALSE otherwise; ppd TRUE simulate new data (XXX.new variables .bug file) posterior predictive distribution (ppd); FALSE otherwise; get.pEti TRUE getting posterior samples individual etiologic fractions; FALSE otherwise. non-regression, regression models discrete predictors, default TRUE, need specify entry. relevant regression models non-discrete covariates. individuals distinct CSCFs specific covariate values, easier just store posterior samples regression coefficients reconstruct pies afterwards, rather storing JAGS. result.folder Path folder storing results; bugsmodel.dir Path .bug model files; jags.dir Path JAGS installed; NULL, set jags.dir=\"\".","code":""},{"path":"/reference/nplcm_fit_Reg_NoNest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_NoNest","text":"BUGS fit results JAGS.","code":""},{"path":"/reference/nplcm_fit_Reg_NoNest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_NoNest","text":"function prepares data, specifies hyperparameters priors (true positive rates CSCFs), initializes posterior sampling chain, writes model file (JAGS WinBUGS slight differences syntax), fits model. Features: regression (discrete covariates); nested subclasses, .e. conditional independence multivariate measurements given disease class covariates; multiple BrS + multiple SS.","code":""},{"path":[]},{"path":"/reference/nplcm_fit_Reg_discrete_predictor_NoNest.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_discrete_predictor_NoNest","title":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_discrete_predictor_NoNest","text":"Fit nested partially-latent class model regression (low-level)","code":""},{"path":"/reference/nplcm_fit_Reg_discrete_predictor_NoNest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_discrete_predictor_NoNest","text":"","code":"nplcm_fit_Reg_discrete_predictor_NoNest(   data_nplcm,   model_options,   mcmc_options )"},{"path":"/reference/nplcm_fit_Reg_discrete_predictor_NoNest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_discrete_predictor_NoNest","text":"data_nplcm Cases top controls rows diagnostic test results covariate matrix. assumed baker automatically write model files (.bug). Mobs list measurements distinct qualities (Bronze-, Silver, Gold-Standard: MBS,MSS,MGS). elements list include MBS, MSS, MGS. component available, please specify , e.g., MGS=NULL (effectively deleting MGS Mobs). MBS list data frame bronze-standard (BrS) measurements. Rows subjects, columns causative agents (e.g., pathogen species). use list accommodate possibility multiple sets BrS data. imperfect sensitivity/specificity (e.g. nasopharyngeal polymerase chain reaction - NPPCR). MSS list data frame silver-standard (SS) measurements. Rows subjects, columns causative agents measured specimen (e.g. blood culture). measurements perfect specificity imperfect sensitivity. MGS list data frame gold-standard (GS) measurements. Rows subject, columns measured causative agents measurements perfect sensitivity specificity. Y Vector disease status: 1 case, 0 control. X Covariate matrix. subset columns primary covariates cause-specific- case-fraction (CSCF) functions hence must available cases, another subset covariates available cases controls. two sets covariates may identical, overlapping completely different. general, design matrix regression models, enrollment date study may non-linear effect, basis expansion often needed approximation. model_options list model options: likelihood prior. use_measurements vector characters strings; can one \"BrS\", \"SS\", \"GS\". likelihood cause_list vector causes (NB: specify); k_subclass number nested subclasses disease class (one case classes control class; k_subclass assumed class) slice BrS measurements. 1 conditional independence; larger 1 conditional dependence. available BrS measurements. vector length equal number slices BrS measurements; Eti_formula Formula etiology regressions. can use s_date_Eti() specify design matrix R format enrollment date; produce natural cubic spline basis. Specify ~ 1 regression intended. FPR_formulaformula false positive rates (FPR) regressions; see formula(). can use s_date_FPR() specify part design matrix R format enrollment date; produce penalized-spline basis (based B-splines). Specify ~ 1 regression intended. (NB: effect=\"fixed\", dm_Rdate_FPR() just specify design matrix appropriately standardized dates.) prior Eti_priorDescription etiology prior (e.g., overall_uniform - hyperparameters 1; 0_1 - hyperparameters 0.1); TPR_priorDescription priors measurements (e.g., informative vs non-informative). length M_use. (NB: sure M use ...) mcmc_options list Markov chain Monte Carlo (MCMC) options. debugstatus Logical - whether pause WinBUGS finishes model fitting; (NB: obsolete? Test.) n.chains Number MCMC chains; n.burnin Number burn-iterations; n.thin keep every n.thin samples burn-period; individual.pred TRUE perform individual prediction (Icat variables .bug file); FALSE otherwise; ppd TRUE simulate new data (XXX.new variables .bug file) posterior predictive distribution (ppd); FALSE otherwise; get.pEti TRUE getting posterior samples individual etiologic fractions; FALSE otherwise. non-regression, regression models discrete predictors, default TRUE, need specify entry. relevant regression models non-discrete covariates. individuals distinct CSCFs specific covariate values, easier just store posterior samples regression coefficients reconstruct pies afterwards, rather storing JAGS. result.folder Path folder storing results; bugsmodel.dir Path .bug model files; jags.dir Path JAGS installed; NULL, set jags.dir=\"\".","code":""},{"path":"/reference/nplcm_fit_Reg_discrete_predictor_NoNest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_discrete_predictor_NoNest","text":"BUGS fit results.","code":""},{"path":"/reference/nplcm_fit_Reg_discrete_predictor_NoNest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit nested partially-latent class model with regression (low-level) — nplcm_fit_Reg_discrete_predictor_NoNest","text":"function prepares data, specifies hyperparameters priors (true positive rates etiology fractions), initializes posterior sampling chain, writes model file (JAGS WinBUGS slight differences syntax), fits model. Features: regression; nested subclasses, .e. conditional independence multivariate measurements given disease class covariates; multiple BrS + multiple SS. running JAGS windows, please go control panel add directory jags ENVIRONMENTAL VARIABLE!","code":""},{"path":[]},{"path":"/reference/nplcm_read_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data and other model information from a folder that stores model results. — nplcm_read_folder","title":"Read data and other model information from a folder that stores model results. — nplcm_read_folder","text":"Read data model information folder stores model results.","code":""},{"path":"/reference/nplcm_read_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data and other model information from a folder that stores model results. — nplcm_read_folder","text":"","code":"nplcm_read_folder(DIR_NPLCM)"},{"path":"/reference/nplcm_read_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data and other model information from a folder that stores model results. — nplcm_read_folder","text":"DIR_NPLCM File path folder containing posterior samples","code":""},{"path":"/reference/nplcm_read_folder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data and other model information from a folder that stores model results. — nplcm_read_folder","text":"list data, options posterior samples. bugs.dat model_options clean_otions Nd; Nu; Y; Mobs; res_nplcm.","code":""},{"path":"/reference/nplcm_read_folder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data and other model information from a folder that stores model results. — nplcm_read_folder","text":"","code":"if (FALSE) { nplcm_read_folder(nplcm_fit_noreg$DIR_NPLCM) }"},{"path":"/reference/null_as_zero.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert NULL to zero. — null_as_zero","title":"Convert NULL to zero. — null_as_zero","text":"null_as_zero make NULL zero.","code":""},{"path":"/reference/null_as_zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert NULL to zero. — null_as_zero","text":"","code":"null_as_zero(x)"},{"path":"/reference/null_as_zero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert NULL to zero. — null_as_zero","text":"x number (usually member list) might NULL","code":""},{"path":"/reference/null_as_zero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert NULL to zero. — null_as_zero","text":"number","code":""},{"path":"/reference/order_post_eti.html","id":null,"dir":"Reference","previous_headings":"","what":"order latent status by posterior mean — order_post_eti","title":"order latent status by posterior mean — order_post_eti","text":"order latent status posterior mean","code":""},{"path":"/reference/order_post_eti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"order latent status by posterior mean — order_post_eti","text":"","code":"order_post_eti(res_nplcm, model_options)"},{"path":"/reference/order_post_eti.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"order latent status by posterior mean — order_post_eti","text":"res_nplcm result model fits model_options model specification","code":""},{"path":"/reference/order_post_eti.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"order latent status by posterior mean — order_post_eti","text":"list order (ord) ordered posterior samples (column)","code":""},{"path":"/reference/overall_uniform.html","id":null,"dir":"Reference","previous_headings":"","what":"specify overall uniform (symmetric Dirichlet distribution) for etiology prior — overall_uniform","title":"specify overall uniform (symmetric Dirichlet distribution) for etiology prior — overall_uniform","text":"specify overall uniform (symmetric Dirichlet distribution) etiology prior","code":""},{"path":"/reference/overall_uniform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"specify overall uniform (symmetric Dirichlet distribution) for etiology prior — overall_uniform","text":"","code":"overall_uniform(alpha, cause_list)"},{"path":"/reference/overall_uniform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"specify overall uniform (symmetric Dirichlet distribution) for etiology prior — overall_uniform","text":"alpha positive number, usually 1. cause_list list latent status","code":""},{"path":"/reference/overall_uniform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"specify overall uniform (symmetric Dirichlet distribution) for etiology prior — overall_uniform","text":"vector length length(cause_list)","code":""},{"path":[]},{"path":"/reference/overall_uniform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"specify overall uniform (symmetric Dirichlet distribution) for etiology prior — overall_uniform","text":"","code":"overall_uniform(1,c(\"A\",\"B\",\"C\")) #> [1] 1 1 1"},{"path":"/reference/parse_nplcm_reg.html","id":null,"dir":"Reference","previous_headings":"","what":"parse regression components (either false positive rate or etiology regression)\nfor fitting npLCM; Only use this when formula is not NULL. — parse_nplcm_reg","title":"parse regression components (either false positive rate or etiology regression)\nfor fitting npLCM; Only use this when formula is not NULL. — parse_nplcm_reg","text":"parse regression components (either false positive rate etiology regression) fitting npLCM; use formula NULL.","code":""},{"path":"/reference/parse_nplcm_reg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parse regression components (either false positive rate or etiology regression)\nfor fitting npLCM; Only use this when formula is not NULL. — parse_nplcm_reg","text":"","code":"parse_nplcm_reg(form, data_nplcm, silent = TRUE)"},{"path":"/reference/parse_nplcm_reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parse regression components (either false positive rate or etiology regression)\nfor fitting npLCM; Only use this when formula is not NULL. — parse_nplcm_reg","text":"form regression formula data_nplcm data object nplcm(); may contain covariates X; must case-control status Y. silent Default TRUE message covariates; FALSE otherwise.","code":""},{"path":"/reference/parse_nplcm_reg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parse regression components (either false positive rate or etiology regression)\nfor fitting npLCM; Only use this when formula is not NULL. — parse_nplcm_reg","text":"TRUE regression; FALSE otherwise.","code":""},{"path":"/reference/pathogen_category_perch.html","id":null,"dir":"Reference","previous_headings":"","what":"pathogens and their categories in PERCH study (virus or bacteria) — pathogen_category_perch","title":"pathogens and their categories in PERCH study (virus or bacteria) — pathogen_category_perch","text":"231 rows indicating bacteria, virus, fungi, categories.","code":""},{"path":"/reference/pathogen_category_perch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pathogens and their categories in PERCH study (virus or bacteria) — pathogen_category_perch","text":"","code":"data(\"pathogen_category_perch\")"},{"path":"/reference/pathogen_category_perch.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"pathogens and their categories in PERCH study (virus or bacteria) — pathogen_category_perch","text":"matrix two columns pathogen names pathogens pathogen_type category pathogens, B bacterium, V virus, F fungus, O \"categorized\"","code":""},{"path":"/reference/pathogen_category_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Hypothetical pathogens and their categories (virus or bacteria) — pathogen_category_simulation","title":"Hypothetical pathogens and their categories (virus or bacteria) — pathogen_category_simulation","text":"used simulations pathogen names alphabet, hope plot etiologies grouped virus bacteria","code":""},{"path":"/reference/pathogen_category_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hypothetical pathogens and their categories (virus or bacteria) — pathogen_category_simulation","text":"","code":"data(\"pathogen_category_simulation\")"},{"path":"/reference/pathogen_category_simulation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hypothetical pathogens and their categories (virus or bacteria) — pathogen_category_simulation","text":"matrix two columns pathogen names hypothetical pathogens, -Z pathogen_type category hypothetical pathogens, B bacterium, V virus, randomly assigned.","code":""},{"path":"/reference/plot.nplcm.html","id":null,"dir":"Reference","previous_headings":"","what":"plot.nplcm plot the results from nplcm(). — plot.nplcm","title":"plot.nplcm plot the results from nplcm(). — plot.nplcm","text":"plot.nplcm plot results nplcm().","code":""},{"path":"/reference/plot.nplcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot.nplcm plot the results from nplcm(). — plot.nplcm","text":"","code":"# S3 method for nplcm plot(x, ...)"},{"path":"/reference/plot.nplcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot.nplcm plot the results from nplcm(). — plot.nplcm","text":"x Output nplcm(). ... Arguments passed summary printing methods.","code":""},{"path":"/reference/plot.nplcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot.nplcm plot the results from nplcm(). — plot.nplcm","text":"figure","code":""},{"path":[]},{"path":"/reference/plot_BrS_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot bronze-standard (BrS) panel — plot_BrS_panel","title":"Plot bronze-standard (BrS) panel — plot_BrS_panel","text":"Plot bronze-standard (BrS) panel","code":""},{"path":"/reference/plot_BrS_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot bronze-standard (BrS) panel — plot_BrS_panel","text":"","code":"plot_BrS_panel(   slice,   data_nplcm,   model_options,   clean_options,   bugs.dat,   res_nplcm,   bg_color,   select_latent = NULL,   exact = TRUE,   top_BrS = 1.3,   cexval = 1,   srtval = 0,   prior_shape = \"interval\",   silent = TRUE )"},{"path":"/reference/plot_BrS_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot bronze-standard (BrS) panel — plot_BrS_panel","text":"slice index measurement slice BrS. data_nplcm See nplcm() model_options See nplcm() clean_options See clean_perch_data() bugs.dat Data input model fitting. res_nplcm See nplcm_read_folder() bg_color list names \"BrS\", \"SS\", \"pie\" specify background colors select_latent vector character strings representing latent status. used just plotting subset latent status. example, can specify select_latent = \"HINF\" plot latent status information relevant \"HINF\". exact Default TRUE use select_latent exact names causes. want specify name plot single combo causes name, specify FALSE. top_BrS Numerical value specify rightmost limit horizontal axis BrS panel. cexval Default 1 - size text BrS percentages. srtval Default 0 - direction text BrS percentages. prior_shape interval boxplot - represent prior/posteriors TPR/FPRs measurements. silent Default TRUE print warning messages; FALSE otherwise.","code":""},{"path":[]},{"path":"/reference/plot_SS_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot silver-standard (SS) panel — plot_SS_panel","title":"Plot silver-standard (SS) panel — plot_SS_panel","text":"Plot silver-standard (SS) panel","code":""},{"path":"/reference/plot_SS_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot silver-standard (SS) panel — plot_SS_panel","text":"","code":"plot_SS_panel(   slice,   data_nplcm,   model_options,   clean_options,   bugs.dat,   res_nplcm,   bg_color,   select_latent = NULL,   exact = TRUE,   top_SS = 1,   cexval = 1,   srtval = 0,   prior_shape = \"interval\" )"},{"path":"/reference/plot_SS_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot silver-standard (SS) panel — plot_SS_panel","text":"slice index measurement slice SS. data_nplcm See nplcm() model_options See nplcm() clean_options See clean_perch_data() bugs.dat Data input model fitting. res_nplcm See nplcm_read_folder() bg_color list names \"BrS\", \"SS\", \"pie\" specify background colors select_latent vector character strings representing latent status. used just plotting subset latent status. example, can specify select_latent = \"HINF\" plot latent status information relevant \"HINF\". exact Default TRUE use select_latent exact names causes. want specify name plot single combo causes name, specify FALSE. top_SS Numerical value specify rightmost limit horizontal axis SS panel. cexval Default 1 - size text SS percentages. srtval Default 0 - direction text SS percentages. prior_shape interval boxplot - represent prior/posteriors TPR/FPRs measurements.","code":""},{"path":[]},{"path":"/reference/plot_case_study.html","id":null,"dir":"Reference","previous_headings":"","what":"visualize the PERCH etiology regression with a continuous covariate — plot_case_study","title":"visualize the PERCH etiology regression with a continuous covariate — plot_case_study","text":"function specifically designed PERCH data, e.g., (NB: dealing NoA, multiple-pathogen causes, continuous covariates? also function plots first slice - generalization may useful - give users option choose slice s; currently default first slice.)","code":""},{"path":"/reference/plot_case_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visualize the PERCH etiology regression with a continuous covariate — plot_case_study","text":"","code":"plot_case_study(   DIR_NPLCM,   stratum_bool = stratum_bool,   bugs.dat = NULL,   slice = 1,   RES_NPLCM = NULL,   do_plot = TRUE,   do_rug = FALSE,   return_metric = TRUE )"},{"path":"/reference/plot_case_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visualize the PERCH etiology regression with a continuous covariate — plot_case_study","text":"DIR_NPLCM File path folder containing posterior samples stratum_bool integer; function, indicates strata plot bugs.dat posterior samples (loaded environment save time) -> default NULL slice integer; specifies slice bronze-standard data visualize; Default 1. RES_NPLCM pre-read res_nplcm; default NULL. do_plot TRUE plotting do_rug TRUE plotting return_metric TRUE showing overall mean etiology, quantiles, s.d., truth$Eti supplied, coverage, bias, truth integrated mean squared errors (IMSE).","code":""},{"path":"/reference/plot_case_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"visualize the PERCH etiology regression with a continuous covariate — plot_case_study","text":"figure etiology regression curves marginal positive rate assessment model fit; See example legends.","code":""},{"path":"/reference/plot_check_common_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior predictive checking for the nested partially class models -\nfrequent patterns in the BrS data. (for multiple folders) — plot_check_common_pattern","title":"Posterior predictive checking for the nested partially class models -\nfrequent patterns in the BrS data. (for multiple folders) — plot_check_common_pattern","text":"MCMC iteration, generate new data set based model parameter values iteration. sample size new data set equals actual data set, .e. number cases controls.","code":""},{"path":"/reference/plot_check_common_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior predictive checking for the nested partially class models -\nfrequent patterns in the BrS data. (for multiple folders) — plot_check_common_pattern","text":"","code":"plot_check_common_pattern(   DIR_list,   slice_vec = rep(1, length(DIR_list)),   n_pat = 10,   dodge_val = 0.8 )"},{"path":"/reference/plot_check_common_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior predictive checking for the nested partially class models -\nfrequent patterns in the BrS data. (for multiple folders) — plot_check_common_pattern","text":"DIR_list list directory paths, storing model output. slice_vec Default 1s, first slice BrS data. n_pat Number common BrS measurement pattern among cases controls. Default 10. dodge_val Default 0.8; width boxplots.","code":""},{"path":"/reference/plot_check_common_pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior predictive checking for the nested partially class models -\nfrequent patterns in the BrS data. (for multiple folders) — plot_check_common_pattern","text":"figure posterior predicted frequencies compared observed frequencies common patterns BrS data.","code":""},{"path":[]},{"path":"/reference/plot_check_common_pattern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior predictive checking for the nested partially class models -\nfrequent patterns in the BrS data. (for multiple folders) — plot_check_common_pattern","text":"","code":"if (FALSE) { DIR_list <- list(nplcm_noreg)  # see examples in plot_check_pairwise_SLORD() for nplcm_noreg. plot_check_common_pattern(DIR_list) plot_check_common_pattern(DIR_list[[1]]) }"},{"path":"/reference/plot_check_pairwise_SLORD.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior predictive checking for nested partially latent class models -\npairwise log odds ratio (only for bronze-standard data) — plot_check_pairwise_SLORD","title":"Posterior predictive checking for nested partially latent class models -\npairwise log odds ratio (only for bronze-standard data) — plot_check_pairwise_SLORD","text":"MCMC iteration, generate new data set based model parameter values iteration. sample size new data set equals actual data set, .e. number cases controls.","code":""},{"path":"/reference/plot_check_pairwise_SLORD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior predictive checking for nested partially latent class models -\npairwise log odds ratio (only for bronze-standard data) — plot_check_pairwise_SLORD","text":"","code":"plot_check_pairwise_SLORD(DIR_NPLCM, slice = 1)"},{"path":"/reference/plot_check_pairwise_SLORD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior predictive checking for nested partially latent class models -\npairwise log odds ratio (only for bronze-standard data) — plot_check_pairwise_SLORD","text":"DIR_NPLCM File path folder stores results npLCM fit. slice Default 1, first slice BrS data.","code":""},{"path":"/reference/plot_check_pairwise_SLORD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior predictive checking for nested partially latent class models -\npairwise log odds ratio (only for bronze-standard data) — plot_check_pairwise_SLORD","text":"figure posterior predicted log odds ratio compared observed log odds ratio BrS data. function generates figure working directory automatically.","code":""},{"path":[]},{"path":"/reference/plot_check_pairwise_SLORD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior predictive checking for nested partially latent class models -\npairwise log odds ratio (only for bronze-standard data) — plot_check_pairwise_SLORD","text":"","code":"if (FALSE) { data(data_nplcm_noreg) model_options_no_reg <- list(   likelihood   = list(     cause_list = cause_list,     k_subclass = 2,     Eti_formula = ~-1, # no covariate for the etiology regression     FPR_formula = list(       MBS1 =   ~-1)    # no covariate for the subclass weight regression   ),   use_measurements = c(\"BrS\"),    # use bronze-standard data only for model estimation.   prior= list(     Eti_prior = overall_uniform(1,cause_list),      # Dirichlet(1,...,1) prior for the etiology.     TPR_prior  = list(BrS = list(       info  = \"informative\", # informative prior for TPRs       input = \"match_range\",   # specify the informative prior for TPRs by specifying a plausible range.       val = list(MBS1 = list(up =  list(rep(0.99,J.BrS)),        # upper ranges: matched to 97.5% quantile of a Beta prior                              low = list(rep(0.55,J.BrS))))          # lower ranges: matched to 2.5% quantile of a Beta prior     )     )   ) )       set.seed(1) # include stratification information in file name: thedir_dated    <- paste0(working_dir,Date,\"_no_reg\")  # create folders to store the model results  dir.create(thedir_dated, showWarnings = FALSE) result_folder_no_reg <- file.path(thedir_dated,paste(\"results\",collapse=\"_\")) thedir <- result_folder_no_reg dir.create(thedir, showWarnings = FALSE)  # options for MCMC chains: mcmc_options_no_reg <- list(   debugstatus = TRUE,   n.chains = 1,   n.itermcmc = as.integer(200),    n.burnin = as.integer(100),    n.thin = 1,   individual.pred = FALSE,    ppd = TRUE,   result.folder = thedir,   bugsmodel.dir = thedir,   jags.dir = \"\" )  # place the nplcm data and cleaning options into the results folder dput(data_nplcm_noreg,file.path(thedir,\"data_nplcm.txt\"))  dput(clean_options, file.path(thedir,\"data_clean_options.txt\"))  rjags::load.module(\"glm\")  nplcm_noreg <- nplcm(data_nplcm_noreg,model_options_no_reg,mcmc_options_no_reg)  plot_check_pairwise_SLORD(nplcm_noreg$DIR_NPLCM,slice=1) }"},{"path":"/reference/plot_etiology_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"visualize the etiology regression with a continuous covariate — plot_etiology_regression","title":"visualize the etiology regression with a continuous covariate — plot_etiology_regression","text":"function visualizes etiology regression one continuous covariate, e.g., enrollment date. (NB: dealing NoA, multiple-pathogen causes, continuous covariates? also function plots first slice - generalization may useful - give users option choose slice s; currently default first slice.)","code":""},{"path":"/reference/plot_etiology_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visualize the etiology regression with a continuous covariate — plot_etiology_regression","text":"","code":"plot_etiology_regression(   DIR_NPLCM,   stratum_bool,   slice = 1,   plot_basis = FALSE,   truth = NULL,   RES_NPLCM = NULL,   do_plot = TRUE,   do_rug = TRUE,   return_metric = TRUE,   plot_ma_dots = FALSE )"},{"path":"/reference/plot_etiology_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visualize the etiology regression with a continuous covariate — plot_etiology_regression","text":"DIR_NPLCM File path folder containing posterior samples stratum_bool vector TRUE/FALSE TRUE indicating rows subjects include slice integer; specifies slice bronze-standard data visualize; Default 1. plot_basis TRUE plotting basis functions; Default FALSE truth list truths computed true parameters simulations; elements: Eti, FPR, PR_case,TPR; default NULL real data analyses. Currently works one slice bronze-standard measurements (non-nested model). Eti matrix # rows = # subjects, # columns: length(cause_list) Eti FPR matrix # rows = # subjects, # columns: ncol(data_nplcm$Mobs$MBS$MBS1) PR_case matrix # rows = # subjects, # columns: ncol(data_nplcm$Mobs$MBS$MBS1) TPR vector length identical PR_case RES_NPLCM pre-read res_nplcm; default NULL. do_plot TRUE plotting do_rug TRUE plotting return_metric TRUE showing overall mean etiology, quantiles, s.d., truth$Eti supplied, coverage, bias, truth integrated mean squared errors (IMSE). plot_ma_dots plot moving averages among case controls TRUE; Default FALSE.","code":""},{"path":"/reference/plot_etiology_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"visualize the etiology regression with a continuous covariate — plot_etiology_regression","text":"figure etiology regression curves marginal positive rate assessment model fit; See example legends.","code":""},{"path":"/reference/plot_etiology_regression.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"visualize the etiology regression with a continuous covariate — plot_etiology_regression","text":"See example figures Figure using simulated data six pathogens: https://github.com/zhenkewu/baker/blob/master/inst/figs/visualize_etiology_regression_SITE=1.pdf legends figure : https://github.com/zhenkewu/baker/blob/master/inst/figs/legends_visualize_etiology_regression.png","code":""},{"path":[]},{"path":"/reference/plot_etiology_strat.html","id":null,"dir":"Reference","previous_headings":"","what":"visualize the etiology estimates for each discrete levels — plot_etiology_strat","title":"visualize the etiology estimates for each discrete levels — plot_etiology_strat","text":"function visualizes etiology estimates one discrete covariate, e.g., age groups.","code":""},{"path":"/reference/plot_etiology_strat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visualize the etiology estimates for each discrete levels — plot_etiology_strat","text":"","code":"plot_etiology_strat(   DIR_NPLCM,   strata_weights = \"empirical\",   truth = NULL,   RES_NPLCM = NULL,   show_levels = 0,   is_plot = TRUE )"},{"path":"/reference/plot_etiology_strat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visualize the etiology estimates for each discrete levels — plot_etiology_strat","text":"DIR_NPLCM File path folder containing posterior samples strata_weights vector weights sum one; pathogen weights specify j-th etiology fraction combined across levels discrete predictors data; default \"empirical\" use empirical weights (observed fractions subjects across strata). truth list true values, e.g., truth=list(allEti = <list etiology fractions, identical length - # strata; >); available, shown thicker red solid vertical lines. RES_NPLCM pre-read res_nplcm; default NULL. show_levels vector integers less equal total number levels strata; default 0 overall. is_plot default TRUE, plotting figures; FALSE returning summaries","code":""},{"path":[]},{"path":"/reference/plot_leftmost.html","id":null,"dir":"Reference","previous_headings":"","what":"plotting the labels on the left margin for panels plot — plot_leftmost","title":"plotting the labels on the left margin for panels plot — plot_leftmost","text":"plotting labels left margin panels plot","code":""},{"path":"/reference/plot_leftmost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotting the labels on the left margin for panels plot — plot_leftmost","text":"","code":"plot_leftmost(model_options, height)"},{"path":"/reference/plot_leftmost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotting the labels on the left margin for panels plot — plot_leftmost","text":"model_options See nplcm() height . rows panels plot; commonly set length(select_latent)","code":""},{"path":"/reference/plot_leftmost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotting the labels on the left margin for panels plot — plot_leftmost","text":"plot","code":""},{"path":[]},{"path":"/reference/plot_logORmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize pairwise log odds ratios (LOR) for data that are available in\nboth cases and controls — plot_logORmat","title":"Visualize pairwise log odds ratios (LOR) for data that are available in\nboth cases and controls — plot_logORmat","text":"Visualize pairwise log odds ratios (LOR) data available cases controls","code":""},{"path":"/reference/plot_logORmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize pairwise log odds ratios (LOR) for data that are available in\nboth cases and controls — plot_logORmat","text":"","code":"plot_logORmat(data_nplcm, pathogen_display, BrS_slice = 1, logOR_rounding = 2)"},{"path":"/reference/plot_logORmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize pairwise log odds ratios (LOR) for data that are available in\nboth cases and controls — plot_logORmat","text":"data_nplcm See assign_model(). pathogen_display pathogen vector desired order display. can larger length pathogen_BrS. BrS_slice Default 1 - set BrS data visualize. logOR_rounding Rounding number log odds ratio. Default 2.","code":""},{"path":"/reference/plot_logORmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize pairwise log odds ratios (LOR) for data that are available in\nboth cases and controls — plot_logORmat","text":"Figure LOR matrix relevant s.e. significance information.","code":""},{"path":"/reference/plot_logORmat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualize pairwise log odds ratios (LOR) for data that are available in\nboth cases and controls — plot_logORmat","text":"plot_logORmat visualizes matrix pairwise log odds ratios (LOR) cases (upper) controls (lower). LOR top cell. , standard error smaller type, using color LOR. estimate divided standard error. put actual value Z-statistics absolute value greater $2$; plus (red) minus (blue) $1$ $2$; blank otherwise.","code":""},{"path":[]},{"path":"/reference/plot_logORmat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize pairwise log odds ratios (LOR) for data that are available in\nboth cases and controls — plot_logORmat","text":"","code":"data(data_nplcm_noreg) plot_logORmat(data_nplcm_noreg,names(data_nplcm_noreg$Mobs$MBS[[1]])) #> == Visualizing pairwise log odds ratios for bronze-standard data set:  1 :  MBS1 . =="},{"path":"/reference/plot_panels.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot three-panel figures for nested partially-latent model results — plot_panels","title":"Plot three-panel figures for nested partially-latent model results — plot_panels","text":"plot_panels() visualizes model outputs communicating data inform final latent disease status (etiology). works singleton combo etiologies.","code":""},{"path":"/reference/plot_panels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot three-panel figures for nested partially-latent model results — plot_panels","text":"","code":"plot_panels(   DIR_NPLCM,   slices = \"all\",   bg_color = list(BrS = \"lavenderblush\", SS = \"mistyrose\", pie = \"antiquewhite\"),   select_latent = NULL,   exact = TRUE,   SS_upperlimit = 1,   eti_upperlimit = 1,   silent = TRUE,   ref_eti0 = NULL,   is_plot = TRUE )"},{"path":"/reference/plot_panels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot three-panel figures for nested partially-latent model results — plot_panels","text":"DIR_NPLCM File path folder containing posterior samples slices DEFAULT \"\" - plot measurements; Otherwise, one can specify list: list(MBS=c(1,3),MSS=1) means plot 1st 3rd slice BrS measurements 1st SS measurement. bg_color list names \"BrS\", \"SS\", \"pie\" specify background colors. current default list(BrS = \"lavenderblush\", SS = \"mistyrose\",  pie=\"antiquewhite\"). background intended, specify NULL particular measurement, e.g., BrS = NULL. select_latent vector character strings representing latent status. used just plotting subset latent status. example, can specify select_latent = \"HINF\" plot latent status information relevant \"HINF\". exact Default TRUE use select_latent exact names causes. want specify name plot single combo causes name, specify FALSE. SS_upperlimit upper limit horizontal bar silver-standard subpanel (middle panel). default value .25. eti_upperlimit upper limit horizontal bar etiology posterior subpanel (rightmost panel). default value .4 silent Default TRUE print warning messages; FALSE otherwise. ref_eti0 reference quantiles means; list: pEti_ref_q, pEti_ref_mean_ord is_plot default TRUE plotting ; set FALSE get summary.","code":""},{"path":"/reference/plot_panels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot three-panel figures for nested partially-latent model results — plot_panels","text":"figure two three columns (is_plot=TRUE); otherwise, provide posterior summaries Etiology information used print.summary.nplcm.no_reg()","code":""},{"path":"/reference/plot_panels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot three-panel figures for nested partially-latent model results — plot_panels","text":"Missing data BrS SS dropped calculating observed measurement positive rates","code":""},{"path":[]},{"path":"/reference/plot_pie_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot etiology (pie) panel — plot_pie_panel","title":"Plot etiology (pie) panel — plot_pie_panel","text":"Plot etiology (pie) panel","code":""},{"path":"/reference/plot_pie_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot etiology (pie) panel — plot_pie_panel","text":"","code":"plot_pie_panel(   model_options,   res_nplcm,   bugs.dat,   bg_color,   select_latent = NULL,   exact = TRUE,   top_pie = 1,   label_size = 1,   ref_eti = NULL,   is_plot = TRUE )"},{"path":"/reference/plot_pie_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot etiology (pie) panel — plot_pie_panel","text":"model_options See nplcm() res_nplcm See nplcm_read_folder() bugs.dat Data input model fitting. bg_color list names \"BrS\", \"SS\", \"pie\" specify background colors select_latent vector character strings representing latent status. used just plotting subset latent status. example, can specify select_latent = \"HINF\" exact Default TRUE use select_latent exact names causes. want specify name plot single combo causes name, specify FALSE. plot latent status information relevant \"HINF\". top_pie Numerical value specify rightmost limit horizontal axis pie panel. label_size size latent status labels right margin ref_eti reference quantiles means; list: pEti_ref_q, pEti_ref_mean_ord is_plot default TRUE plotting ; set FALSE get summary.","code":""},{"path":[]},{"path":"/reference/plot_subwt_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"visualize the subclass weight regression with a continuous covariate — plot_subwt_regression","title":"visualize the subclass weight regression with a continuous covariate — plot_subwt_regression","text":"visualize subclass weight regression continuous covariate","code":""},{"path":"/reference/plot_subwt_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visualize the subclass weight regression with a continuous covariate — plot_subwt_regression","text":"","code":"plot_subwt_regression(   DIR_NPLCM,   stratum_bool,   case = 0,   slice = 1,   truth = NULL,   RES_NPLCM = NULL )"},{"path":"/reference/plot_subwt_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visualize the subclass weight regression with a continuous covariate — plot_subwt_regression","text":"DIR_NPLCM File path folder containing posterior samples stratum_bool vector TRUE/FALSE TRUE indicating rows subjects include case 1 plotting cases, 0 plotting controls; default 0. slice integer; specifies slice bronze-standard data visualize; Default 1. truth list truths computed true parameters simulations; elements: Eti, FPR, PR_case,TPR; default NULL real data analyses. Currently works one slice bronze-standard measurements (non-nested model). truth_subwt matrix # rows = # subjects, # columns: number true subclasses RES_NPLCM pre-read res_nplcm; default NULL.","code":""},{"path":"/reference/plot_subwt_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"visualize the subclass weight regression with a continuous covariate — plot_subwt_regression","text":"figure subclass regression curves","code":""},{"path":[]},{"path":"/reference/print.nplcm.html","id":null,"dir":"Reference","previous_headings":"","what":"print.nplcm summarizes the results from nplcm(). — print.nplcm","title":"print.nplcm summarizes the results from nplcm(). — print.nplcm","text":"print.nplcm summarizes results nplcm().","code":""},{"path":"/reference/print.nplcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print.nplcm summarizes the results from nplcm(). — print.nplcm","text":"","code":"# S3 method for nplcm print(x, ...)"},{"path":"/reference/print.nplcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print.nplcm summarizes the results from nplcm(). — print.nplcm","text":"x Output nplcm(). ... Arguments passed summary printing methods.","code":""},{"path":"/reference/print.nplcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print.nplcm summarizes the results from nplcm(). — print.nplcm","text":"Summary object output nplcm() --- need details.","code":""},{"path":[]},{"path":"/reference/print.summary.nplcm.no_reg.html","id":null,"dir":"Reference","previous_headings":"","what":"Compact printing of nplcm() model fits — print.summary.nplcm.no_reg","title":"Compact printing of nplcm() model fits — print.summary.nplcm.no_reg","text":"print.summary.nplcm print method class summary.nplcm.NoReg.","code":""},{"path":"/reference/print.summary.nplcm.no_reg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compact printing of nplcm() model fits — print.summary.nplcm.no_reg","text":"","code":"# S3 method for summary.nplcm.no_reg print(x, ...)"},{"path":"/reference/print.summary.nplcm.no_reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compact printing of nplcm() model fits — print.summary.nplcm.no_reg","text":"x output summary.nplcm summary.nplcm.no_reg output object class. ... used.","code":""},{"path":"/reference/print.summary.nplcm.no_reg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compact printing of nplcm() model fits — print.summary.nplcm.no_reg","text":"see print.nplcm()","code":""},{"path":[]},{"path":"/reference/print.summary.nplcm.reg_nest.html","id":null,"dir":"Reference","previous_headings":"","what":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nest","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nest","text":"print.summary.nplcm print method class summary.nplcm.reg_nest.","code":""},{"path":"/reference/print.summary.nplcm.reg_nest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nest","text":"","code":"# S3 method for summary.nplcm.reg_nest print(x, ...)"},{"path":"/reference/print.summary.nplcm.reg_nest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nest","text":"x output summary.nplcm summary.nplcm.reg_nest output object class. ... used.","code":""},{"path":"/reference/print.summary.nplcm.reg_nest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nest","text":"see print.nplcm()","code":""},{"path":[]},{"path":"/reference/print.summary.nplcm.reg_nest_strat.html","id":null,"dir":"Reference","previous_headings":"","what":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nest_strat","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nest_strat","text":"print.summary.nplcm.reg_nonest_strat()","code":""},{"path":"/reference/print.summary.nplcm.reg_nest_strat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nest_strat","text":"","code":"# S3 method for summary.nplcm.reg_nest_strat print(x, ...)"},{"path":"/reference/print.summary.nplcm.reg_nest_strat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nest_strat","text":"x output summary.nplcm summary.nplcm.reg_nest_strat output object class. ... used.","code":""},{"path":"/reference/print.summary.nplcm.reg_nest_strat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nest_strat","text":"see print.nplcm()","code":""},{"path":"/reference/print.summary.nplcm.reg_nest_strat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nest_strat","text":"print.summary.nplcm print method class summary.nplcm.reg_nest_strat.","code":""},{"path":[]},{"path":"/reference/print.summary.nplcm.reg_nonest.html","id":null,"dir":"Reference","previous_headings":"","what":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nonest","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nonest","text":"print.summary.nplcm print method class summary.nplcm.reg_nonest.","code":""},{"path":"/reference/print.summary.nplcm.reg_nonest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nonest","text":"","code":"# S3 method for summary.nplcm.reg_nonest print(x, ...)"},{"path":"/reference/print.summary.nplcm.reg_nonest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nonest","text":"x output summary.nplcm summary.nplcm.reg_nonest output object class. ... used.","code":""},{"path":"/reference/print.summary.nplcm.reg_nonest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nonest","text":"see print.nplcm()","code":""},{"path":[]},{"path":"/reference/print.summary.nplcm.reg_nonest_strat.html","id":null,"dir":"Reference","previous_headings":"","what":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nonest_strat","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nonest_strat","text":"print.summary.nplcm print method class summary.nplcm.reg_nonest_strat.","code":""},{"path":"/reference/print.summary.nplcm.reg_nonest_strat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nonest_strat","text":"","code":"# S3 method for summary.nplcm.reg_nonest_strat print(x, ...)"},{"path":"/reference/print.summary.nplcm.reg_nonest_strat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nonest_strat","text":"x output summary.nplcm summary.nplcm.reg_nonest_strat output object class. ... used.","code":""},{"path":"/reference/print.summary.nplcm.reg_nonest_strat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compact printing of nplcm() model fits — print.summary.nplcm.reg_nonest_strat","text":"see print.nplcm()","code":""},{"path":[]},{"path":"/reference/read_meas_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Read measurement slices — read_meas_object","title":"Read measurement slices — read_meas_object","text":"NB: add example, small data","code":""},{"path":"/reference/read_meas_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read measurement slices — read_meas_object","text":"","code":"read_meas_object(object, data)"},{"path":"/reference/read_meas_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read measurement slices — read_meas_object","text":"object Outputs make_meas_object() data Raw data column names {pathogen name}_{specimen}{test}","code":""},{"path":"/reference/read_meas_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read measurement slices — read_meas_object","text":"list two elements: meas-data frame measurements; position-see lookup_quality()","code":""},{"path":[]},{"path":"/reference/rvbern.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample a vector of Bernoulli variables. — rvbern","title":"Sample a vector of Bernoulli variables. — rvbern","text":"Sample vector Bernoulli variables higher speed (length \"p\"). Bernoulli random variables can different means.","code":""},{"path":"/reference/rvbern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample a vector of Bernoulli variables. — rvbern","text":"","code":"rvbern(p)"},{"path":"/reference/rvbern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample a vector of Bernoulli variables. — rvbern","text":"p vector probabilities, head probability independent coin toss","code":""},{"path":"/reference/rvbern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample a vector of Bernoulli variables. — rvbern","text":"vector 1s (head) 0s (tail)","code":""},{"path":"/reference/rvbern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample a vector of Bernoulli variables. — rvbern","text":"","code":"rvbern(c(0.9,0.1,0.2,0.3)) #> [1] 0 0 0 1"},{"path":"/reference/s_date_Eti.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Etiology design matrix for dates with R format. — s_date_Eti","title":"Make Etiology design matrix for dates with R format. — s_date_Eti","text":"s_date_Eti creates design matrices etiology regressions;","code":""},{"path":"/reference/s_date_Eti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Etiology design matrix for dates with R format. — s_date_Eti","text":"","code":"s_date_Eti(Rdate, Y, basis = \"ps\", dof = ifelse(basis == \"ncs\", 5, 10), ...)"},{"path":"/reference/s_date_Eti.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Etiology design matrix for dates with R format. — s_date_Eti","text":"Rdate vector dates R format Y Binary case/control status; 1 case; 0 controls basis ncs natural cubic splines; ps penalized-splines based B-spline basis functions (NB: baker recommend setting ncs using function; use splines::ns) dof Degree--freedom bases. ncs basis, dof number columns; ps basis,  number columns dof intercept=TRUE; dof-1 FALSE. ... arguments splines::bs()","code":""},{"path":"/reference/s_date_Eti.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Etiology design matrix for dates with R format. — s_date_Eti","text":"Z_Eti design matrix etiology regression dates.","code":""},{"path":[]},{"path":"/reference/s_date_Eti.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Etiology design matrix for dates with R format. — s_date_Eti","text":"","code":"if (FALSE) ~ -1+s_date_Eti(DATE,Y,basis='ps',dof=7)"},{"path":"/reference/s_date_FPR.html","id":null,"dir":"Reference","previous_headings":"","what":"Make false positive rate (FPR) design matrix for dates with R format. — s_date_FPR","title":"Make false positive rate (FPR) design matrix for dates with R format. — s_date_FPR","text":"s_date_FPR creates design matrices FPR regressions;","code":""},{"path":"/reference/s_date_FPR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make false positive rate (FPR) design matrix for dates with R format. — s_date_FPR","text":"","code":"s_date_FPR(Rdate, Y, basis = \"ps\", dof = 10, ...)"},{"path":"/reference/s_date_FPR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make false positive rate (FPR) design matrix for dates with R format. — s_date_FPR","text":"Rdate vector dates R format Y Binary case/control status; 1 case; 0 controls basis \"ps\" penalized-splines based B-spline basis functions dof Degree--freedom bases.\"ps\" basis, number columns dof intercept=TRUE; dof-1 FALSE. ... arguments splines::bs()","code":""},{"path":"/reference/s_date_FPR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make false positive rate (FPR) design matrix for dates with R format. — s_date_FPR","text":"Design matrix FPR regression, cases' rows top controls'.","code":""},{"path":[]},{"path":"/reference/s_date_FPR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make false positive rate (FPR) design matrix for dates with R format. — s_date_FPR","text":"","code":"if (FALSE) { ~ -1 +s_date_FPR(DATE,Y,basis = \"ps\",dof=5) }"},{"path":"/reference/set_prior_tpr_BrS_NoNest.html","id":null,"dir":"Reference","previous_headings":"","what":"Set true positive rate (TPR) prior ranges for bronze-standard (BrS) data — set_prior_tpr_BrS_NoNest","title":"Set true positive rate (TPR) prior ranges for bronze-standard (BrS) data — set_prior_tpr_BrS_NoNest","text":"set_prior_tpr_BrS_NoNest conditional independence models. currently also use conditional dependence model: subclass TPRs independently assigned beta prior. Ongoing work enable specifying priors marginal TPR, .e. TPRs disease class, finer subclass.","code":""},{"path":"/reference/set_prior_tpr_BrS_NoNest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set true positive rate (TPR) prior ranges for bronze-standard (BrS) data — set_prior_tpr_BrS_NoNest","text":"","code":"set_prior_tpr_BrS_NoNest(slice, model_options, data_nplcm)"},{"path":"/reference/set_prior_tpr_BrS_NoNest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set true positive rate (TPR) prior ranges for bronze-standard (BrS) data — set_prior_tpr_BrS_NoNest","text":"slice BrS measurement slice consideration. model_options See nplcm() function. data_nplcm See assign_model() function.","code":""},{"path":"/reference/set_prior_tpr_BrS_NoNest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set true positive rate (TPR) prior ranges for bronze-standard (BrS) data — set_prior_tpr_BrS_NoNest","text":"Parameters BrS dta TPR priors. list two lists (alpha beta). Alpha beta length, number BrS measurement slices. element alpha (beta) list numeric vector alpha (beta) parameters BETA distribution.","code":""},{"path":[]},{"path":"/reference/set_prior_tpr_SS.html","id":null,"dir":"Reference","previous_headings":"","what":"Set true positive rate (TPR) prior ranges for silver-standard data. — set_prior_tpr_SS","title":"Set true positive rate (TPR) prior ranges for silver-standard data. — set_prior_tpr_SS","text":"Set true positive rate (TPR) prior ranges silver-standard data.","code":""},{"path":"/reference/set_prior_tpr_SS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set true positive rate (TPR) prior ranges for silver-standard data. — set_prior_tpr_SS","text":"","code":"set_prior_tpr_SS(model_options, data_nplcm)"},{"path":"/reference/set_prior_tpr_SS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set true positive rate (TPR) prior ranges for silver-standard data. — set_prior_tpr_SS","text":"model_options See nplcm() function. data_nplcm See assign_model() function.","code":""},{"path":"/reference/set_prior_tpr_SS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set true positive rate (TPR) prior ranges for silver-standard data. — set_prior_tpr_SS","text":"Parameters SS data TPR priors. list two lists (alpha beta). Alpha beta length, number BrS measurement slices. element alpha (beta) list numeric vector alpha (beta) parameters specify Beta prior TPRs.","code":""},{"path":[]},{"path":"/reference/set_strat.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratification setup by covariates — set_strat","title":"Stratification setup by covariates — set_strat","text":"set_strat makes group indicators based model_options$X_reg_*","code":""},{"path":"/reference/set_strat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratification setup by covariates — set_strat","text":"","code":"set_strat(X, X_reg)"},{"path":"/reference/set_strat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratification setup by covariates — set_strat","text":"X data frame covariates X_reg vector covariates stratify analyses. variables categorical.","code":""},{"path":"/reference/set_strat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratification setup by covariates — set_strat","text":"list following elements: N_group number groups group vector group indicator every observation","code":""},{"path":"/reference/set_strat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stratification setup by covariates — set_strat","text":"results function help stratify etiology FPR different strata; ways stratification etiology FPR can based different covariates.","code":""},{"path":"/reference/show_dep.html","id":null,"dir":"Reference","previous_headings":"","what":"Show function dependencies — show_dep","title":"Show function dependencies — show_dep","text":"Show function dependencies","code":""},{"path":"/reference/show_dep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show function dependencies — show_dep","text":"","code":"show_dep(fname, pckg = \"package:baker\", ...)"},{"path":"/reference/show_dep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show function dependencies — show_dep","text":"fname Character string one function pckg Package name; default \"package:baker\" ... parameters accepted mvbutils::foodweb()","code":""},{"path":"/reference/show_dep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show function dependencies — show_dep","text":"figure showing function dependencies","code":""},{"path":"/reference/show_dep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show function dependencies — show_dep","text":"","code":"if (FALSE) { show_dep(\"nplcm\",ancestor=FALSE) show_dep(\"nplcm\") show_dep(\"nplcm_fit_NoReg\",ancestor=FALSE) show_dep(\"nplcm_fit_NoReg\") }"},{"path":"/reference/show_individual.html","id":null,"dir":"Reference","previous_headings":"","what":"get an individual's data from the output of clean_perch_data() — show_individual","title":"get an individual's data from the output of clean_perch_data() — show_individual","text":"get individual's data output clean_perch_data()","code":""},{"path":"/reference/show_individual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get an individual's data from the output of clean_perch_data() — show_individual","text":"","code":"show_individual(data_nplcm, ID)"},{"path":"/reference/show_individual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get an individual's data from the output of clean_perch_data() — show_individual","text":"data_nplcm data fitting nplcm; See nplcm() ID patient id: patid.","code":""},{"path":"/reference/show_individual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get an individual's data from the output of clean_perch_data() — show_individual","text":"list inquired patient's data","code":""},{"path":[]},{"path":"/reference/show_individual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get an individual's data from the output of clean_perch_data() — show_individual","text":"","code":"data(data_nplcm_noreg) data_nplcm_noreg$X$patid <- paste(\"PAT\",1:length(data_nplcm_noreg$Y0),sep=\"\") data_nplcm_noreg$X <- as.data.frame(data_nplcm_noreg$X) subset_data_nplcm_by_index(data_nplcm_noreg,which(data_nplcm_noreg$X$patid%in%c(\"PAT12\",\"PAT408\"))) #> $Mobs #> $Mobs$MBS #> $Mobs$MBS$MBS1 #> [1] A B C D E F #> <0 rows> (or 0-length row.names) #>  #>  #> $Mobs$MSS #> $Mobs$MSS$MSS1 #> [1] A B #> <0 rows> (or 0-length row.names) #>  #>  #>  #> $Y #> numeric(0) #>  #> $X #> [1] patid #> <0 rows> (or 0-length row.names) #>  data_nplcm_noreg$X <- NULL"},{"path":"/reference/simulate_brs.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Bronze-Standard (BrS) Data — simulate_brs","title":"Simulate Bronze-Standard (BrS) Data — simulate_brs","text":"Simulate Bronze-Standard (BrS) Data","code":""},{"path":"/reference/simulate_brs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Bronze-Standard (BrS) Data — simulate_brs","text":"","code":"simulate_brs(set_parameter, latent_samples)"},{"path":"/reference/simulate_brs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Bronze-Standard (BrS) Data — simulate_brs","text":"set_parameter True model parameters npLCM specification: cause_list vector disease class names among cases (since causes multi-agent (e.g., multiple pathogens may cause individual case's pneumonia), length longer total number unique causative agents) etiology vector proportions sum 100 percent pathogen_BrS vector putative causative agents' names measured bronze-standard (BrS) data. function simulates one slice defined specimentestpathogen pathogen_SS vector pathogen names measured silver-standard (SS) data. meas_nm list specimentest names e.g., list(MBS = c(\"NPPCR\"),MSS=\"BCX\") nasopharyngeal (NP) specimen tested polymerase chain reaction (PCR) - NPPCR blood (B) tested culture (Cx) - BCX Lambda controls' subclass weights \\(\\nu_1, \\nu_2, \\ldots, \\nu_K\\) vector K probabilities sum 1. Eta    matrix dimension length(cause_list) K; row represents disease class (among cases); values row subclass weights \\(\\eta_1, \\eta_2, \\ldots, \\eta_K\\) disease class, needs sum one. Wu et al. 2016 (JRSS-C), subclass weights across disease classes across rows. simulating data, one can specify rows distinct subclass weights - matter whether can recover parameters (possible cases' true disease classes observed) PsiBS/PsiSS False positive rates Bronze-Standard data Silver-Standard data. example, rows PsiBS correspond dimension particular slice BrS measures, e.g., 10 10 causative agents measured NPPCR; columns correspond K subclasses; generically, dimension J K PsiSS supposed vector zeros (perfect specificity silver-standard measures). ThetaBS/ThetaSS  True positive rates \\(\\Theta\\) Bronze-Standard data Silver-Standard data. Dimension J K (can contain NA total number causative agents measured BrS SS exceeds measured causative agents SS. example, PERCH study, nasopharyngeal polymerase chain reaction (NPPCR; bronze-standard) may target 30 distinct pathogens, blood culture (BCX; silver-standard) may target subset 30, specify NA ThetaSSfor pathogens targeted BCX). Nu number control subjects Nd number case subjects latent_samples simulated latent status subjects, use simulating BrS measurements.","code":""},{"path":"/reference/simulate_brs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Bronze-Standard (BrS) Data — simulate_brs","text":"data frame first column case-control status (case top) columns bronze-standard measurements","code":""},{"path":[]},{"path":"/reference/simulate_latent.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Latent Status: — simulate_latent","title":"Simulate Latent Status: — simulate_latent","text":"Simulate Latent Status:","code":""},{"path":"/reference/simulate_latent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Latent Status: — simulate_latent","text":"","code":"simulate_latent(set_parameter)"},{"path":"/reference/simulate_latent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Latent Status: — simulate_latent","text":"set_parameter True model parameters npLCM specification: cause_list vector disease class names among cases (since causes multi-agent (e.g., multiple pathogens may cause individual case's pneumonia), length longer total number unique causative agents) etiology vector proportions sum 100 percent pathogen_BrS vector putative causative agents' names measured bronze-standard (BrS) data. function simulates one slice defined specimentestpathogen pathogen_SS vector pathogen names measured silver-standard (SS) data. meas_nm list specimentest names e.g., list(MBS = c(\"NPPCR\"),MSS=\"BCX\") nasopharyngeal (NP) specimen tested polymerase chain reaction (PCR) - NPPCR blood (B) tested culture (Cx) - BCX Lambda controls' subclass weights \\(\\nu_1, \\nu_2, \\ldots, \\nu_K\\) vector K probabilities sum 1. Eta    matrix dimension length(cause_list) K; row represents disease class (among cases); values row subclass weights \\(\\eta_1, \\eta_2, \\ldots, \\eta_K\\) disease class, needs sum one. Wu et al. 2016 (JRSS-C), subclass weights across disease classes across rows. simulating data, one can specify rows distinct subclass weights - matter whether can recover parameters (possible cases' true disease classes observed) PsiBS/PsiSS False positive rates Bronze-Standard data Silver-Standard data. example, rows PsiBS correspond dimension particular slice BrS measures, e.g., 10 10 causative agents measured NPPCR; columns correspond K subclasses; generically, dimension J K PsiSS supposed vector zeros (perfect specificity silver-standard measures). ThetaBS/ThetaSS  True positive rates \\(\\Theta\\) Bronze-Standard data Silver-Standard data. Dimension J K (can contain NA total number causative agents measured BrS SS exceeds measured causative agents SS. example, PERCH study, nasopharyngeal polymerase chain reaction (NPPCR; bronze-standard) may target 30 distinct pathogens, blood culture (BCX; silver-standard) may target subset 30, specify NA ThetaSSfor pathogens targeted BCX). Nu number control subjects Nd number case subjects","code":""},{"path":"/reference/simulate_latent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Latent Status: — simulate_latent","text":"list latent status samples use simulating measurements. also includes template look measurement parameters disease class.","code":""},{"path":[]},{"path":"/reference/simulate_nplcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data from nested partially-latent class model (npLCM) family — simulate_nplcm","title":"Simulate data from nested partially-latent class model (npLCM) family — simulate_nplcm","text":"Simulate data nested partially-latent class model (npLCM) family","code":""},{"path":"/reference/simulate_nplcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data from nested partially-latent class model (npLCM) family — simulate_nplcm","text":"","code":"simulate_nplcm(set_parameter)"},{"path":"/reference/simulate_nplcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data from nested partially-latent class model (npLCM) family — simulate_nplcm","text":"set_parameter True model parameters npLCM specification: cause_list vector disease class names among cases (since causes multi-agent (e.g., multiple pathogens may cause individual case's pneumonia), length longer total number unique causative agents) etiology vector proportions sum 100 percent pathogen_BrS vector putative causative agents' names measured bronze-standard (BrS) data. function simulates one slice defined specimentestpathogen pathogen_SS vector pathogen names measured silver-standard (SS) data. meas_nm list specimentest names e.g., list(MBS = c(\"NPPCR\"),MSS=\"BCX\") nasopharyngeal (NP) specimen tested polymerase chain reaction (PCR) - NPPCR blood (B) tested culture (Cx) - BCX Lambda controls' subclass weights \\(\\nu_1, \\nu_2, \\ldots, \\nu_K\\) vector K probabilities sum 1. Eta    matrix dimension length(cause_list) K; row represents disease class (among cases); values row subclass weights \\(\\eta_1, \\eta_2, \\ldots, \\eta_K\\) disease class, needs sum one. Wu et al. 2016 (JRSS-C), subclass weights across disease classes across rows. simulating data, one can specify rows distinct subclass weights - matter whether can recover parameters (possible cases' true disease classes observed) PsiBS/PsiSS False positive rates Bronze-Standard data Silver-Standard data. example, rows PsiBS correspond dimension particular slice BrS measures, e.g., 10 10 causative agents measured NPPCR; columns correspond K subclasses; generically, dimension J K PsiSS supposed vector zeros (perfect specificity silver-standard measures). ThetaBS/ThetaSS  True positive rates \\(\\Theta\\) Bronze-Standard data Silver-Standard data. Dimension J K (can contain NA total number causative agents measured BrS SS exceeds measured causative agents SS. example, PERCH study, nasopharyngeal polymerase chain reaction (NPPCR; bronze-standard) may target 30 distinct pathogens, blood culture (BCX; silver-standard) may target subset 30, specify NA ThetaSSfor pathogens targeted BCX). Nu number control subjects Nd number case subjects","code":""},{"path":"/reference/simulate_nplcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data from nested partially-latent class model (npLCM) family — simulate_nplcm","text":"list diagnostic test measurements, true latent statues: data_nplcm list structured data (see nplcm() description). template matrix: rows causes (may comprise single multiple causative agents), columns measurements; generated lookup table match disease-class specific parameters (true false positive rates) latent_cat integer values indicate latent category. integer code corresponds order specified set_parameter$etiology. Controls coded length(set_parameter$etiology)+1.)","code":""},{"path":[]},{"path":"/reference/simulate_nplcm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate data from nested partially-latent class model (npLCM) family — simulate_nplcm","text":"","code":"K.true  <- 2   # no. of latent subclasses in actual simulation.                 # If eta = c(1,0), effectively, it is K.true=1. J       <- 21   # no. of pathogens. N       <- 600 # no. of cases/controls.  eta <- c(1,0)  # if it is c(1,0),then it is conditional independence model, and # only the first column of parameters in PsiBS, ThetaBS matter!  seed_start <- 20150202 print(eta) #> [1] 1 0  # set fixed simulation sequence: set.seed(seed_start)  ThetaBS_withNA <- c(.75,rep(c(.75,.75,.75,NA),5)) PsiBS_withNA <- c(.15,rep(c(.05,.05,.05,NA),5))  ThetaSS_withNA <- c(NA,rep(c(0.15,NA,0.15,0.15),5)) PsiSS_withNA <- c(NA,rep(c(0,NA,0,0),5))  set_parameter <- list(   cause_list      = c(LETTERS[1:J]),   etiology        = c(c(0.36,0.1,0.1,0.1,0.1,0.05,0.05,0.05,                  0.05,0.01,0.01,0.01,0.01),rep(0.00,8)),                   #same length as cause_list.   pathogen_BrS    = LETTERS[1:J][!is.na(ThetaBS_withNA)],   pathogen_SS     = LETTERS[1:J][!is.na(ThetaSS_withNA)],   meas_nm         = list(MBS = c(\"MBS1\"),MSS=\"MSS1\"),   Lambda          = eta, #ctrl mix   Eta             = t(replicate(J,eta)), #case mix, row number equal to Jcause.   PsiBS           = cbind(PsiBS_withNA[!is.na(PsiBS_withNA)],                           rep(0,sum(!is.na(PsiBS_withNA)))),   ThetaBS         = cbind(ThetaBS_withNA[!is.na(ThetaBS_withNA)],                           rep(0,sum(!is.na(ThetaBS_withNA)))),   PsiSS           = PsiSS_withNA[!is.na(PsiSS_withNA)],   ThetaSS         = ThetaSS_withNA[!is.na(ThetaSS_withNA)],   Nu      =     N, # control size.   Nd      =     N  # case size. )  simu_out <- simulate_nplcm(set_parameter)  data_nplcm <- simu_out$data_nplcm    pathogen_display <- rev(set_parameter$pathogen_BrS)  plot_logORmat(data_nplcm,pathogen_display) #> == Visualizing pairwise log odds ratios for bronze-standard data set:  1 :  MBS1 . ==   # more examples are provided in the vignette, including settings with   # covariates."},{"path":"/reference/simulate_ss.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Silver-Standard (SS) Data — simulate_ss","title":"Simulate Silver-Standard (SS) Data — simulate_ss","text":"Simulate Silver-Standard (SS) Data","code":""},{"path":"/reference/simulate_ss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Silver-Standard (SS) Data — simulate_ss","text":"","code":"simulate_ss(set_parameter, latent_samples)"},{"path":"/reference/simulate_ss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Silver-Standard (SS) Data — simulate_ss","text":"set_parameter True model parameters npLCM specification: cause_list vector disease class names among cases (since causes multi-agent (e.g., multiple pathogens may cause individual case's pneumonia), length longer total number unique causative agents) etiology vector proportions sum 100 percent pathogen_BrS vector putative causative agents' names measured bronze-standard (BrS) data. function simulates one slice defined specimentestpathogen pathogen_SS vector pathogen names measured silver-standard (SS) data. meas_nm list specimentest names e.g., list(MBS = c(\"NPPCR\"),MSS=\"BCX\") nasopharyngeal (NP) specimen tested polymerase chain reaction (PCR) - NPPCR blood (B) tested culture (Cx) - BCX Lambda controls' subclass weights \\(\\nu_1, \\nu_2, \\ldots, \\nu_K\\) vector K probabilities sum 1. Eta    matrix dimension length(cause_list) K; row represents disease class (among cases); values row subclass weights \\(\\eta_1, \\eta_2, \\ldots, \\eta_K\\) disease class, needs sum one. Wu et al. 2016 (JRSS-C), subclass weights across disease classes across rows. simulating data, one can specify rows distinct subclass weights - matter whether can recover parameters (possible cases' true disease classes observed) PsiBS/PsiSS False positive rates Bronze-Standard data Silver-Standard data. example, rows PsiBS correspond dimension particular slice BrS measures, e.g., 10 10 causative agents measured NPPCR; columns correspond K subclasses; generically, dimension J K PsiSS supposed vector zeros (perfect specificity silver-standard measures). ThetaBS/ThetaSS  True positive rates \\(\\Theta\\) Bronze-Standard data Silver-Standard data. Dimension J K (can contain NA total number causative agents measured BrS SS exceeds measured causative agents SS. example, PERCH study, nasopharyngeal polymerase chain reaction (NPPCR; bronze-standard) may target 30 distinct pathogens, blood culture (BCX; silver-standard) may target subset 30, specify NA ThetaSSfor pathogens targeted BCX). Nu number control subjects Nd number case subjects latent_samples simulated latent status subjects, use simulating SS measurements.","code":""},{"path":"/reference/simulate_ss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Silver-Standard (SS) Data — simulate_ss","text":"data frame first column case-control status (case top) columns silver-standard measurements","code":""},{"path":[]},{"path":"/reference/softmax.html","id":null,"dir":"Reference","previous_headings":"","what":"softmax — softmax","title":"softmax — softmax","text":"uses logsumexp trick prevent numerical overflow","code":""},{"path":"/reference/softmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"softmax — softmax","text":"","code":"softmax(x)"},{"path":"/reference/softmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"softmax — softmax","text":"x vector numbers","code":""},{"path":"/reference/softmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"softmax — softmax","text":"","code":"softmax2 <- function(x) exp(x) / sum(exp(x)) softmax(c(1, 2, 3) * 1000)  # NaN NaN NaN #> [1] 0 0 1 softmax2(c(1, 2, 3) * 1000)  # 0 0 1 #> [1] NaN NaN NaN"},{"path":"/reference/sort_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Order rows of data frame according to variable combinations. — sort_data_frame","title":"Order rows of data frame according to variable combinations. — sort_data_frame","text":"Author: Kevin Wright http://tolstoy.newcastle.edu.au/R/help/04/09/4300.html ideas Andy Liaw http://tolstoy.newcastle.edu.au/R/help/04/07/1076.html Use + ascending, - descending. Sorting left right formula Usage either following: sort.data.frame(~Block-Variety,Oats) sort.data.frame(Oats,~-Variety+Block)","code":""},{"path":"/reference/sort_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order rows of data frame according to variable combinations. — sort_data_frame","text":"","code":"sort_data_frame(form, dat)"},{"path":"/reference/sort_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order rows of data frame according to variable combinations. — sort_data_frame","text":"form Formula. See example Description. dat Data frame ordered.","code":""},{"path":"/reference/sort_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order rows of data frame according to variable combinations. — sort_data_frame","text":"Ordered data frame.","code":""},{"path":"/reference/sort_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Order rows of data frame according to variable combinations. — sort_data_frame","text":"","code":"df <- as.data.frame(list(x1=c(2,3,1),x2=c(3,4,6))) sort_data_frame(~-x1+x2,df) #>   x1 x2 #> 2  3  4 #> 1  2  3 #> 3  1  6"},{"path":"/reference/subset_data_nplcm_by_index.html","id":null,"dir":"Reference","previous_headings":"","what":"subset data from the output of clean_perch_data() — subset_data_nplcm_by_index","title":"subset data from the output of clean_perch_data() — subset_data_nplcm_by_index","text":"particularly useful simulating data regression model one generates case control particular covariate value, just choose case control retain simulated data.","code":""},{"path":"/reference/subset_data_nplcm_by_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"subset data from the output of clean_perch_data() — subset_data_nplcm_by_index","text":"","code":"subset_data_nplcm_by_index(data_nplcm, index)"},{"path":"/reference/subset_data_nplcm_by_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"subset data from the output of clean_perch_data() — subset_data_nplcm_by_index","text":"data_nplcm data fitting nplcm; See nplcm() index vector indices indicating observations hope subset; subset sublists data_nplcm","code":""},{"path":"/reference/subset_data_nplcm_by_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"subset data from the output of clean_perch_data() — subset_data_nplcm_by_index","text":"list requested data, order determined 'index'","code":""},{"path":[]},{"path":"/reference/subset_data_nplcm_by_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"subset data from the output of clean_perch_data() — subset_data_nplcm_by_index","text":"","code":"J = 3                          # number of causes cause_list = c(LETTERS[1:J])   # cause list K = 2                          # number of subclasses lambda = c(1,0)                # subclass weights for control group eta = c(1,0)                   # subclass weights for case group  # setup parameters for the present individual: set_parameter <- list(  cause_list      = cause_list,  etiology        = c(0.5,0.2,0.3), # only meaningful for cases   pathogen_BrS    = LETTERS[1:J],  pathogen_SS     = LETTERS[1:2],  meas_nm         = list(MBS = c(\"MBS1\"),MSS=c(\"MSS1\")),  Lambda          = lambda,         # for BrS     Eta             = t(replicate(J,eta)),  # case subclass weight for BrS  PsiBS           = cbind(c(0.15,0.3,0.35),                             c(0.25,0.2,0.15)), # FPR  PsiSS           = cbind(rep(0,J),rep(0,J)),  ThetaBS         = cbind(c(0.95,0.9,0.85),    # TPR                          c(0.95,0.9,0.85)),  ThetaSS         = cbind(c(0.25,0.10),                          c(0.25,0.10)),  Nd      =     5,  Nu      =     3  ) simu_out   <- simulate_nplcm(set_parameter) out <- simu_out$data_nplcm out #> $Mobs #> $Mobs$MBS #> $Mobs$MBS$MBS1 #>   A B C #> 1 1 0 0 #> 2 1 0 0 #> 3 0 0 0 #> 4 1 1 1 #> 5 1 1 0 #> 6 1 0 1 #> 7 0 0 0 #> 8 1 0 0 #>  #>  #> $Mobs$MSS #> $Mobs$MSS$MSS1 #>   A B #> 1 0 0 #> 2 1 0 #> 3 0 0 #> 4 0 0 #> 5 0 0 #> 6 0 0 #> 7 0 0 #> 8 0 0 #>  #>  #> $Mobs$MGS #> NULL #>  #>  #> $Y #> [1] 1 1 1 1 1 0 0 0 #>  #> $X #> NULL #>  subset_data_nplcm_by_index(out,c(1,4,5)) #> $Mobs #> $Mobs$MBS #> $Mobs$MBS$MBS1 #>   A B C #> 1 1 0 0 #> 4 1 1 1 #> 5 1 1 0 #>  #>  #> $Mobs$MSS #> $Mobs$MSS$MSS1 #>   A B #> 1 0 0 #> 4 0 0 #> 5 0 0 #>  #>  #>  #> $Y #> [1] 1 1 1 #>  #> $X #> NULL #>  subset_data_nplcm_by_index(out,2) #> $Mobs #> $Mobs$MBS #> $Mobs$MBS$MBS1 #>   A B C #> 2 1 0 0 #>  #>  #> $Mobs$MSS #> $Mobs$MSS$MSS1 #>   A B #> 2 1 0 #>  #>  #>  #> $Y #> [1] 1 #>  #> $X #> NULL #>"},{"path":"/reference/summarize_BrS.html","id":null,"dir":"Reference","previous_headings":"","what":"summarize bronze-standard data — summarize_BrS","title":"summarize bronze-standard data — summarize_BrS","text":"summarize bronze-standard data","code":""},{"path":"/reference/summarize_BrS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summarize bronze-standard data — summarize_BrS","text":"","code":"summarize_BrS(BrS_dat, Y)"},{"path":"/reference/summarize_BrS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summarize bronze-standard data — summarize_BrS","text":"BrS_dat bronze-standard data, usually data_nplcm$Mobs$MBS[[1]] Y vector case/control status: 1 case; 0 control","code":""},{"path":"/reference/summarize_BrS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summarize bronze-standard data — summarize_BrS","text":"list summaries BrS data","code":""},{"path":[]},{"path":"/reference/summarize_BrS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"summarize bronze-standard data — summarize_BrS","text":"","code":"data(data_nplcm_noreg) summarize_BrS(data_nplcm_noreg$Mobs$MBS[[1]], data_nplcm_noreg$Y) #> $Nd #> [1] 300 #>  #> $Nu #> [1] 300 #>  #> $MBS_mean #>         [,1]    [,2]    [,3]    [,4]    [,5]    [,6] #> case    0.60 0.31333 0.37000 0.16333 0.11667 0.13667 #> control 0.21 0.21667 0.23667 0.12000 0.13333 0.13000 #>  #> $MBS_q1 #>              [,1]      [,2]      [,3]       [,4]       [,5]       [,6] #> case    0.5436223 0.2634318 0.3173072 0.12559292 0.08477613 0.10209823 #> control 0.1675776 0.1736517 0.1919746 0.08764294 0.09919185 0.09629289 #>  #> $MBS_q2 #>              [,1]     [,2]      [,3]      [,4]      [,5]      [,6] #> case    0.6538491 0.367955 0.4259800 0.2095867 0.1582502 0.1804223 #> control 0.2597553 0.266846 0.2880173 0.1619657 0.1767463 0.1730629 #>  #> $MBS_nm #> [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" #>"},{"path":"/reference/summarize_SS.html","id":null,"dir":"Reference","previous_headings":"","what":"silver-standard data summary — summarize_SS","title":"silver-standard data summary — summarize_SS","text":"silver-standard data summary","code":""},{"path":"/reference/summarize_SS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"silver-standard data summary — summarize_SS","text":"","code":"summarize_SS(SS_dat, Y)"},{"path":"/reference/summarize_SS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"silver-standard data summary — summarize_SS","text":"SS_dat data frame silver-standard data. can usually obtained data_nplcm$Mobs$MSS[[1]], meaning first SS measurement slice. Y vector case control status: 1 case; 0 control.","code":""},{"path":"/reference/summarize_SS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"silver-standard data summary — summarize_SS","text":"vector number positives","code":""},{"path":[]},{"path":"/reference/summarize_SS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"silver-standard data summary — summarize_SS","text":"","code":"data(data_nplcm_noreg) summarize_BrS(data_nplcm_noreg$Mobs$MBS[[1]], data_nplcm_noreg$Y) #> $Nd #> [1] 300 #>  #> $Nu #> [1] 300 #>  #> $MBS_mean #>         [,1]    [,2]    [,3]    [,4]    [,5]    [,6] #> case    0.60 0.31333 0.37000 0.16333 0.11667 0.13667 #> control 0.21 0.21667 0.23667 0.12000 0.13333 0.13000 #>  #> $MBS_q1 #>              [,1]      [,2]      [,3]       [,4]       [,5]       [,6] #> case    0.5436223 0.2634318 0.3173072 0.12559292 0.08477613 0.10209823 #> control 0.1675776 0.1736517 0.1919746 0.08764294 0.09919185 0.09629289 #>  #> $MBS_q2 #>              [,1]     [,2]      [,3]      [,4]      [,5]      [,6] #> case    0.6538491 0.367955 0.4259800 0.2095867 0.1582502 0.1804223 #> control 0.2597553 0.266846 0.2880173 0.1619657 0.1767463 0.1730629 #>  #> $MBS_nm #> [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" #>   if (FALSE) { summarize_SS(data_nplcm$Mobs$MSS[[1]], data_nplcm$Y) }"},{"path":"/reference/summary.nplcm.html","id":null,"dir":"Reference","previous_headings":"","what":"summary.nplcm summarizes the results from nplcm(). — summary.nplcm","title":"summary.nplcm summarizes the results from nplcm(). — summary.nplcm","text":"summary.nplcm summarizes results nplcm().","code":""},{"path":"/reference/summary.nplcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary.nplcm summarizes the results from nplcm(). — summary.nplcm","text":"","code":"# S3 method for nplcm summary(object, ...)"},{"path":"/reference/summary.nplcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary.nplcm summarizes the results from nplcm(). — summary.nplcm","text":"object Output nplcm(). object class \"nplcm\" ... used.","code":""},{"path":"/reference/summary.nplcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary.nplcm summarizes the results from nplcm(). — summary.nplcm","text":"see print.nplcm()","code":""},{"path":[]},{"path":"/reference/sym_diff_month.html","id":null,"dir":"Reference","previous_headings":"","what":"get symmetric difference of months from two vector of R-format dates — sym_diff_month","title":"get symmetric difference of months from two vector of R-format dates — sym_diff_month","text":"sym_diff_month evaluates symmetric difference two sets R-formatted date","code":""},{"path":"/reference/sym_diff_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get symmetric difference of months from two vector of R-format dates — sym_diff_month","text":"","code":"sym_diff_month(Rdate1, Rdate2)"},{"path":"/reference/sym_diff_month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get symmetric difference of months from two vector of R-format dates — sym_diff_month","text":"Rdate1, Rdate2 R-formatted R dates. See .Date()","code":""},{"path":"/reference/sym_diff_month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get symmetric difference of months from two vector of R-format dates — sym_diff_month","text":"NULL difference; set different months otherwise.","code":""},{"path":"/reference/symb2I.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert names of pathogen/combinations into 0/1 coding — symb2I","title":"Convert names of pathogen/combinations into 0/1 coding — symb2I","text":"Convert names pathogen/combinations 0/1 coding","code":""},{"path":"/reference/symb2I.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert names of pathogen/combinations into 0/1 coding — symb2I","text":"","code":"symb2I(pathogen_name, pathogen_list)"},{"path":"/reference/symb2I.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert names of pathogen/combinations into 0/1 coding — symb2I","text":"pathogen_name allowed pathogen name (can combination pathogens \"pathlist\") pathogen_list complete list pathogen names","code":""},{"path":"/reference/symb2I.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert names of pathogen/combinations into 0/1 coding — symb2I","text":"1 length(pathlist) matrix binary code (usually pathogen presence/absence)","code":""},{"path":"/reference/symb2I.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert names of pathogen/combinations into 0/1 coding — symb2I","text":"","code":"symb2I(\"A\",c(\"A\",\"B\",\"C\")) #>      [,1] [,2] [,3] #> [1,]    1    0    0 symb2I(\"A+B\",c(\"A\",\"B\",\"C\")) #>      [,1] [,2] [,3] #> [1,]    1    1    0 symb2I(\"NoA\",c(\"A\",\"B\",\"C\")) #>      [,1] [,2] [,3] #> [1,]    0    0    0 symb2I(c(\"A\",\"B+C\"),c(\"A\",\"B\",\"C\")) # gives a 2 by 3 matrix. #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    1"},{"path":"/reference/tsb.html","id":null,"dir":"Reference","previous_headings":"","what":"generate stick-breaking prior (truncated) from a vector of random probabilities — tsb","title":"generate stick-breaking prior (truncated) from a vector of random probabilities — tsb","text":"generate stick-breaking prior (truncated) vector random probabilities","code":""},{"path":"/reference/tsb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate stick-breaking prior (truncated) from a vector of random probabilities — tsb","text":"","code":"tsb(u)"},{"path":"/reference/tsb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate stick-breaking prior (truncated) from a vector of random probabilities — tsb","text":"u vector probabilities, last element 1.","code":""},{"path":"/reference/tsb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate stick-breaking prior (truncated) from a vector of random probabilities — tsb","text":"vector length u; sum 1.","code":""},{"path":"/reference/tsb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate stick-breaking prior (truncated) from a vector of random probabilities — tsb","text":"","code":"graphics::par(mfrow=c(3,3),oma=c(0,1,5,0),    mar=c(1,2,1,1)) for (iter in 1:9){  u   <- c(rbeta(9,1,0.8),1)  res <- tsb(u)  barplot(res,ylim=c(0,1),main=paste0(\"Random Sample #\", iter),ylab=\"Probability\") } graphics::mtext(\"Truncated Stick-Breaking Dist. (10 segments)\",3,      outer=TRUE,cex=1.5,line=1.5)"},{"path":"/reference/unfactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert factor to numeric without losing information on the label — unfactor","title":"Convert factor to numeric without losing information on the label — unfactor","text":"Convert factor numeric without losing information label","code":""},{"path":"/reference/unfactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert factor to numeric without losing information on the label — unfactor","text":"","code":"unfactor(f)"},{"path":"/reference/unfactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert factor to numeric without losing information on the label — unfactor","text":"f factor","code":""},{"path":"/reference/unfactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert factor to numeric without losing information on the label — unfactor","text":"numeric vector","code":""},{"path":"/reference/unfactor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert factor to numeric without losing information on the label — unfactor","text":"","code":"unfactor(factor(c(\"1\",\"3\",\"3\"),levels=c(\"1\",\"3\"))) #> [1] 1 3 3 # contrast this to: as.numeric(factor(c(\"1\",\"3\",\"3\"),levels=c(\"1\",\"3\")))  #> [1] 1 2 2"},{"path":"/reference/unique_cause.html","id":null,"dir":"Reference","previous_headings":"","what":"get unique causes, regardless of the actual order in combo — unique_cause","title":"get unique causes, regardless of the actual order in combo — unique_cause","text":"get unique causes, regardless actual order combo","code":""},{"path":"/reference/unique_cause.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get unique causes, regardless of the actual order in combo — unique_cause","text":"","code":"unique_cause(cause_vec)"},{"path":"/reference/unique_cause.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get unique causes, regardless of the actual order in combo — unique_cause","text":"cause_vec vector characters potential combo repetitions written scrambled orders separated \"+\"","code":""},{"path":"/reference/unique_cause.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get unique causes, regardless of the actual order in combo — unique_cause","text":"vector characters unique meanings latent causes","code":""},{"path":"/reference/unique_cause.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get unique causes, regardless of the actual order in combo — unique_cause","text":"","code":"x <- c(\"A\",\"B\",\"A\",\"CC+DD\",\"DD+CC\",\"E+F+G\",\"B\") unique_cause(x) #> [1] \"A\"     \"B\"     \"CC+DD\" \"E+F+G\""},{"path":"/reference/unique_month.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unique month from Date — unique_month","title":"Get unique month from Date — unique_month","text":"unique_month converts observed dates unique months help visualize sampled months","code":""},{"path":"/reference/unique_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unique month from Date — unique_month","text":"","code":"unique_month(Rdate)"},{"path":"/reference/unique_month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unique month from Date — unique_month","text":"Rdate standard date format R","code":""},{"path":"/reference/unique_month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get unique month from Date — unique_month","text":"vector characters month-year, e.g., 4-2012.","code":""},{"path":"/reference/visualize_case_control_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize matrix for a quantity measured on cases and controls (a single number) — visualize_case_control_matrix","title":"Visualize matrix for a quantity measured on cases and controls (a single number) — visualize_case_control_matrix","text":"Special case-control visualization: upper right cases, lower left controls.","code":""},{"path":"/reference/visualize_case_control_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize matrix for a quantity measured on cases and controls (a single number) — visualize_case_control_matrix","text":"","code":"visualize_case_control_matrix(   mat,   dim_names = ncol(mat),   cell_metrics = \"\",   folding_line = TRUE,   axes = FALSE,   xlab = \"\",   ylab = \"\",   asp = 1,   title = \"\" )"},{"path":"/reference/visualize_case_control_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize matrix for a quantity measured on cases and controls (a single number) — visualize_case_control_matrix","text":"mat matrix values: upper cases, lower controls; dim_names names columns, left right. also names rows, bottom top. Default 1 ncol(mat); cell_metrics meaning number every cell; folding_line Default TRUE adding dashed major diagonal line. axes plot axes; default FALSE; xlab label x-axis ylab label y-axis asp aspect ratio; default 1 ensure square shape title text figure","code":""},{"path":"/reference/visualize_season.html","id":null,"dir":"Reference","previous_headings":"","what":"visualize trend of pathogen observation rate for NPPCR data (both cases and controls) — visualize_season","title":"visualize trend of pathogen observation rate for NPPCR data (both cases and controls) — visualize_season","text":"visualize trend pathogen observation rate NPPCR data (cases controls)","code":""},{"path":"/reference/visualize_season.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visualize trend of pathogen observation rate for NPPCR data (both cases and controls) — visualize_season","text":"","code":"visualize_season(data_nplcm, patho, slice = 1, slice_SS = 1)"},{"path":"/reference/visualize_season.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visualize trend of pathogen observation rate for NPPCR data (both cases and controls) — visualize_season","text":"data_nplcm Data set produced clean_perch_data() patho index pathogen slice slice BrS data visualization; default 1. slice_SS slice SS data add onto BrS plots; default 1, usually representing blood culture measurements.","code":""},{"path":"/reference/visualize_season.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"visualize trend of pathogen observation rate for NPPCR data (both cases and controls) — visualize_season","text":"figure smoothed positive rate confidence bands cases controls, respectively. right margin shows marginal positive rates; rates among subset case subjects non-missing responses measured agent (e.g., pathogen); similarly controls.","code":""},{"path":"/reference/visualize_season.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"visualize trend of pathogen observation rate for NPPCR data (both cases and controls) — visualize_season","text":"function shows observed positive rate continuous covariates,e.g., enrollment date PERCH application. Smoothing done penalized splines implemented mgcv package. penalized spline smoothing term constructed mgcv::smooth.construct.ps.smooth.spec(). window size moving averages currently set 60 days.","code":""},{"path":[]},{"path":"/reference/write.model.html","id":null,"dir":"Reference","previous_headings":"","what":"function to write bugs model (copied from R2WinBUGS) — write.model","title":"function to write bugs model (copied from R2WinBUGS) — write.model","text":"function write bugs model (copied R2WinBUGS)","code":""},{"path":"/reference/write.model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to write bugs model (copied from R2WinBUGS) — write.model","text":"","code":"write.model(model, con = \"model.bug\", digits = 5)"},{"path":"/reference/write.model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"function to write bugs model (copied from R2WinBUGS) — write.model","text":"model R / S-PLUS function containing BUGS model BUGS model language, minor differences see Section Details. con passed writeLines actually writes model file digits number significant digits used WinBUGS input, see formatC","code":""},{"path":"/reference/write_model_NoReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Write .bug model file for model without regression — write_model_NoReg","title":"Write .bug model file for model without regression — write_model_NoReg","text":"write_model_NoReg automatically generates model file according model_options","code":""},{"path":"/reference/write_model_NoReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write .bug model file for model without regression — write_model_NoReg","text":"","code":"write_model_NoReg(   k_subclass,   Mobs,   prior,   cause_list,   use_measurements,   ppd = NULL,   use_jags = FALSE )"},{"path":"/reference/write_model_NoReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write .bug model file for model without regression — write_model_NoReg","text":"k_subclass number subclasses slices require conditional dependence modeling (applicable BrS data); length value number BrS slices. Mobs measurement data form data_nplcm prior prior specification model_options cause_list list latent status names (crucial building templates; see make_template()) use_measurements \"BrS\", \"SS\" ppd Default NULL; set TRUE posterior predictive checking use_jags Default FALSE; set TRUE want use JAGS model fitting.","code":""},{"path":"/reference/write_model_NoReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write .bug model file for model without regression — write_model_NoReg","text":"long character string written .bug file.","code":""},{"path":[]},{"path":"/reference/write_model_Reg_Nest.html","id":null,"dir":"Reference","previous_headings":"","what":"Write .bug model file for regression model WITH nested subclasses — write_model_Reg_Nest","title":"Write .bug model file for regression model WITH nested subclasses — write_model_Reg_Nest","text":"write_model_Reg_Nest automatically generates model file according model_options; called within nplcm_fit_Reg_Nest.","code":""},{"path":"/reference/write_model_Reg_Nest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write .bug model file for regression model WITH nested subclasses — write_model_Reg_Nest","text":"","code":"write_model_Reg_Nest(   Mobs,   prior,   cause_list,   Eti_formula,   FPR_formula,   use_measurements,   ppd = NULL,   use_jags = FALSE )"},{"path":"/reference/write_model_Reg_Nest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write .bug model file for regression model WITH nested subclasses — write_model_Reg_Nest","text":"Mobs Measurement data form data_nplcm prior Prior specification model_options cause_list list latent status names (crucial building templates; see make_template()) Eti_formula Etiology regression formula; Check model_options$likelihood$Eti_formula. FPR_formula list FPR regression formula; check model_options$likelihood$FPR_formula use_measurements \"BrS\", \"SS\" ppd Default NULL; set TRUE posterior predictive checking use_jags Default FALSE; set TRUE want use JAGS model fitting.","code":""},{"path":"/reference/write_model_Reg_Nest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write .bug model file for regression model WITH nested subclasses — write_model_Reg_Nest","text":"long character string written .bug file.","code":""},{"path":[]},{"path":"/reference/write_model_Reg_NoNest.html","id":null,"dir":"Reference","previous_headings":"","what":"Write .bug model file for regression model without nested subclasses — write_model_Reg_NoNest","title":"Write .bug model file for regression model without nested subclasses — write_model_Reg_NoNest","text":"write_model_Reg_NoNest automatically generates model file according model_options","code":""},{"path":"/reference/write_model_Reg_NoNest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write .bug model file for regression model without nested subclasses — write_model_Reg_NoNest","text":"","code":"write_model_Reg_NoNest(   Mobs,   prior,   cause_list,   Eti_formula,   FPR_formula,   use_measurements,   ppd = NULL,   use_jags = FALSE )"},{"path":"/reference/write_model_Reg_NoNest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write .bug model file for regression model without nested subclasses — write_model_Reg_NoNest","text":"Mobs Measurement data form data_nplcm prior Prior specification model_options cause_list list latent status names (crucial building templates; see make_template()) Eti_formula Etiology regression formula; Check model_options$likelihood$Eti_formula. FPR_formula list FPR regression formula; check model_options$likelihood$FPR_formula use_measurements \"BrS\", \"SS\" ppd Default NULL; set TRUE posterior predictive checking use_jags Default FALSE; set TRUE want use JAGS model fitting.","code":""},{"path":"/reference/write_model_Reg_NoNest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write .bug model file for regression model without nested subclasses — write_model_Reg_NoNest","text":"long character string written .bug file.","code":""},{"path":[]},{"path":"/reference/write_model_Reg_discrete_predictor_NoNest.html","id":null,"dir":"Reference","previous_headings":"","what":"Write .bug model file for regression model without nested subclasses — write_model_Reg_discrete_predictor_NoNest","title":"Write .bug model file for regression model without nested subclasses — write_model_Reg_discrete_predictor_NoNest","text":"write_model_Reg_discrete_predictor_NoNest automatically generates model file according model_options","code":""},{"path":"/reference/write_model_Reg_discrete_predictor_NoNest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write .bug model file for regression model without nested subclasses — write_model_Reg_discrete_predictor_NoNest","text":"","code":"write_model_Reg_discrete_predictor_NoNest(   Mobs,   prior,   cause_list,   use_measurements,   ppd = NULL,   use_jags = FALSE )"},{"path":"/reference/write_model_Reg_discrete_predictor_NoNest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write .bug model file for regression model without nested subclasses — write_model_Reg_discrete_predictor_NoNest","text":"Mobs Measurement data form data_nplcm prior Prior specification model_options cause_list list latent status names (crucial building templates; see make_template()) use_measurements \"BrS\", \"SS\" ppd Default NULL; set TRUE posterior predictive checking use_jags Default FALSE; set TRUE want use JAGS model fitting.","code":""},{"path":"/reference/write_model_Reg_discrete_predictor_NoNest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write .bug model file for regression model without nested subclasses — write_model_Reg_discrete_predictor_NoNest","text":"long character string written .bug file.","code":""},{"path":[]},{"path":"/news/index.html","id":"baker-100","dir":"Changelog","previous_headings":"","what":"baker 1.0.0","title":"baker 1.0.0","text":"first public CRAN release","code":""}]
